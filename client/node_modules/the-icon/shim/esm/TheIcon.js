'use strict';

import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import c from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { htmlAttributesFor } from 'the-component-util';
import TheIconStyle from './TheIconStyle';
/**
 * Icon of the-components
 */

var TheIcon =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TheIcon, _React$Component);

  function TheIcon() {
    _classCallCheck(this, TheIcon);

    return _possibleConstructorReturn(this, _getPrototypeOf(TheIcon).apply(this, arguments));
  }

  _createClass(TheIcon, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var children = props.children,
          className = props.className;
      return React.createElement("i", _extends({}, htmlAttributesFor(props, {
        except: ['className']
      }), {
        "aria-hidden": true,
        className: c('the-icon', className)
      }), children);
    }
  }], [{
    key: "Spin",
    value: function Spin(props) {
      var className = props.className,
          theme = props.theme;
      var icon = TheIcon.SpinIconThemes[theme] || TheIcon.SPIN_ICON;
      return React.createElement(TheIcon, _extends({}, props, {
        className: c('the-icon-spin', className, icon)
      }));
    }
  }]);

  return TheIcon;
}(React.Component);

TheIcon.CDN_URL = 'https://use.fontawesome.com/releases/v5.0.3/css/all.css';
TheIcon.SpinIconThemes = {
  A: 'fas fa-spin fa-spinner',
  B: 'fas fa-spin fa-circle-notch',
  C: 'fas fa-spin fa-sync',
  D: 'fas fa-spin fa-cog',
  E: 'fas fa-spin fa-sun',
  F: 'fas fa-spin fa-snowflake'
};
TheIcon.SPIN_ICON = TheIcon.SpinIconThemes.A;

TheIcon.CdnLink = function (_ref) {
  var _ref$url = _ref.url,
      url = _ref$url === void 0 ? TheIcon.CDN_URL : _ref$url;
  return React.createElement("link", {
    href: url,
    rel: "stylesheet"
  });
};

TheIcon.Style = TheIconStyle;
TheIcon.propTypes = {};
TheIcon.defaultProps = {
  type: null
};
TheIcon.displayName = 'TheIcon';
export default TheIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZUljb24uanMiXSwibmFtZXMiOlsiYyIsIlByb3BUeXBlcyIsIlJlYWN0IiwiaHRtbEF0dHJpYnV0ZXNGb3IiLCJUaGVJY29uU3R5bGUiLCJUaGVJY29uIiwicHJvcHMiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImV4Y2VwdCIsInRoZW1lIiwiaWNvbiIsIlNwaW5JY29uVGhlbWVzIiwiU1BJTl9JQ09OIiwiQ29tcG9uZW50IiwiQ0ROX1VSTCIsIkEiLCJCIiwiQyIsIkQiLCJFIiwiRiIsIkNkbkxpbmsiLCJ1cmwiLCJTdHlsZSIsInByb3BUeXBlcyIsImRlZmF1bHRQcm9wcyIsInR5cGUiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsT0FBT0EsQ0FBUCxNQUFjLFlBQWQ7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixPQUFsQjtBQUNBLFNBQVNDLGlCQUFULFFBQWtDLG9CQUFsQztBQUNBLE9BQU9DLFlBQVAsTUFBeUIsZ0JBQXpCO0FBRUE7Ozs7SUFHTUMsTzs7Ozs7Ozs7Ozs7Ozs2QkFXTTtBQUFBLFVBQ0FDLEtBREEsR0FDVSxJQURWLENBQ0FBLEtBREE7QUFBQSxVQUdOQyxRQUhNLEdBS0pELEtBTEksQ0FHTkMsUUFITTtBQUFBLFVBSU5DLFNBSk0sR0FLSkYsS0FMSSxDQUlORSxTQUpNO0FBTVIsYUFDRSxzQ0FBT0wsaUJBQWlCLENBQUNHLEtBQUQsRUFBUTtBQUFFRyxRQUFBQSxNQUFNLEVBQUUsQ0FBQyxXQUFEO0FBQVYsT0FBUixDQUF4QjtBQUNHLDJCQURIO0FBRUcsUUFBQSxTQUFTLEVBQUVULENBQUMsQ0FBQyxVQUFELEVBQWFRLFNBQWI7QUFGZixVQUlHRCxRQUpILENBREY7QUFRRDs7O3lCQXhCWUQsSyxFQUFPO0FBQUEsVUFDVkUsU0FEVSxHQUNXRixLQURYLENBQ1ZFLFNBRFU7QUFBQSxVQUNDRSxLQURELEdBQ1dKLEtBRFgsQ0FDQ0ksS0FERDtBQUVsQixVQUFNQyxJQUFJLEdBQUdOLE9BQU8sQ0FBQ08sY0FBUixDQUF1QkYsS0FBdkIsS0FBaUNMLE9BQU8sQ0FBQ1EsU0FBdEQ7QUFDQSxhQUNFLG9CQUFDLE9BQUQsZUFBYVAsS0FBYjtBQUNTLFFBQUEsU0FBUyxFQUFFTixDQUFDLENBQUMsZUFBRCxFQUFrQlEsU0FBbEIsRUFBNkJHLElBQTdCO0FBRHJCLFNBREY7QUFLRDs7OztFQVRtQlQsS0FBSyxDQUFDWSxTOztBQTRCNUJULE9BQU8sQ0FBQ1UsT0FBUixHQUFrQix5REFBbEI7QUFFQVYsT0FBTyxDQUFDTyxjQUFSLEdBQXlCO0FBQ3ZCSSxFQUFBQSxDQUFDLEVBQUUsd0JBRG9CO0FBRXZCQyxFQUFBQSxDQUFDLEVBQUUsNkJBRm9CO0FBR3ZCQyxFQUFBQSxDQUFDLEVBQUUscUJBSG9CO0FBSXZCQyxFQUFBQSxDQUFDLEVBQUUsb0JBSm9CO0FBS3ZCQyxFQUFBQSxDQUFDLEVBQUUsb0JBTG9CO0FBTXZCQyxFQUFBQSxDQUFDLEVBQUU7QUFOb0IsQ0FBekI7QUFTQWhCLE9BQU8sQ0FBQ1EsU0FBUixHQUFvQlIsT0FBTyxDQUFDTyxjQUFSLENBQXVCSSxDQUEzQzs7QUFFQVgsT0FBTyxDQUFDaUIsT0FBUixHQUFrQjtBQUFBLHNCQUFHQyxHQUFIO0FBQUEsTUFBR0EsR0FBSCx5QkFBU2xCLE9BQU8sQ0FBQ1UsT0FBakI7QUFBQSxTQUNoQjtBQUFNLElBQUEsSUFBSSxFQUFFUSxHQUFaO0FBQWlCLElBQUEsR0FBRyxFQUFDO0FBQXJCLElBRGdCO0FBQUEsQ0FBbEI7O0FBSUFsQixPQUFPLENBQUNtQixLQUFSLEdBQWdCcEIsWUFBaEI7QUFFQUMsT0FBTyxDQUFDb0IsU0FBUixHQUFvQixFQUFwQjtBQUVBcEIsT0FBTyxDQUFDcUIsWUFBUixHQUF1QjtBQUNyQkMsRUFBQUEsSUFBSSxFQUFFO0FBRGUsQ0FBdkI7QUFJQXRCLE9BQU8sQ0FBQ3VCLFdBQVIsR0FBc0IsU0FBdEI7QUFFQSxlQUFldkIsT0FBZiIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuaW1wb3J0IGMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGh0bWxBdHRyaWJ1dGVzRm9yIH0gZnJvbSAndGhlLWNvbXBvbmVudC11dGlsJ1xuaW1wb3J0IFRoZUljb25TdHlsZSBmcm9tICcuL1RoZUljb25TdHlsZSdcblxuLyoqXG4gKiBJY29uIG9mIHRoZS1jb21wb25lbnRzXG4gKi9cbmNsYXNzIFRoZUljb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgU3BpbiAocHJvcHMpIHtcbiAgICBjb25zdCB7IGNsYXNzTmFtZSwgdGhlbWUgfSA9IHByb3BzXG4gICAgY29uc3QgaWNvbiA9IFRoZUljb24uU3Bpbkljb25UaGVtZXNbdGhlbWVdIHx8IFRoZUljb24uU1BJTl9JQ09OXG4gICAgcmV0dXJuIChcbiAgICAgIDxUaGVJY29uIHsuLi5wcm9wc31cbiAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YygndGhlLWljb24tc3BpbicsIGNsYXNzTmFtZSwgaWNvbil9XG4gICAgICAvPlxuICAgIClcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpc1xuICAgIGNvbnN0IHtcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lLFxuICAgIH0gPSBwcm9wc1xuICAgIHJldHVybiAoXG4gICAgICA8aSB7Li4uaHRtbEF0dHJpYnV0ZXNGb3IocHJvcHMsIHsgZXhjZXB0OiBbJ2NsYXNzTmFtZSddIH0pfVxuICAgICAgICAgYXJpYS1oaWRkZW5cbiAgICAgICAgIGNsYXNzTmFtZT17YygndGhlLWljb24nLCBjbGFzc05hbWUpfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2k+XG4gICAgKVxuICB9XG59XG5cblRoZUljb24uQ0ROX1VSTCA9ICdodHRwczovL3VzZS5mb250YXdlc29tZS5jb20vcmVsZWFzZXMvdjUuMC4zL2Nzcy9hbGwuY3NzJ1xuXG5UaGVJY29uLlNwaW5JY29uVGhlbWVzID0ge1xuICBBOiAnZmFzIGZhLXNwaW4gZmEtc3Bpbm5lcicsXG4gIEI6ICdmYXMgZmEtc3BpbiBmYS1jaXJjbGUtbm90Y2gnLFxuICBDOiAnZmFzIGZhLXNwaW4gZmEtc3luYycsXG4gIEQ6ICdmYXMgZmEtc3BpbiBmYS1jb2cnLFxuICBFOiAnZmFzIGZhLXNwaW4gZmEtc3VuJyxcbiAgRjogJ2ZhcyBmYS1zcGluIGZhLXNub3dmbGFrZScsXG59XG5cblRoZUljb24uU1BJTl9JQ09OID0gVGhlSWNvbi5TcGluSWNvblRoZW1lcy5BXG5cblRoZUljb24uQ2RuTGluayA9ICh7IHVybCA9IFRoZUljb24uQ0ROX1VSTCB9KSA9PiAoXG4gIDxsaW5rIGhyZWY9e3VybH0gcmVsPSdzdHlsZXNoZWV0Jy8+XG4pXG5cblRoZUljb24uU3R5bGUgPSBUaGVJY29uU3R5bGVcblxuVGhlSWNvbi5wcm9wVHlwZXMgPSB7fVxuXG5UaGVJY29uLmRlZmF1bHRQcm9wcyA9IHtcbiAgdHlwZTogbnVsbCxcbn1cblxuVGhlSWNvbi5kaXNwbGF5TmFtZSA9ICdUaGVJY29uJ1xuXG5leHBvcnQgZGVmYXVsdCBUaGVJY29uXG4iXX0=