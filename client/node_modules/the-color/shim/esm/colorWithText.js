/**
 * Get color with text
 * @function colorWithText
 * @param {string} text - Text
 * @param {Object} [options={}] - Optional settings
 * @returns {string} Color
 */
'use strict';

import { rotate } from 'acolor';
/** @lends colorWithText */

function colorWithText(text) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$base = options.base,
      base = _options$base === void 0 ? '#38E' : _options$base;
  var value = String(text).split('').map(function (letter) {
    return letter.charCodeAt(0);
  }).reduce(function (result, value) {
    return result + value;
  }, 0);
  return rotate(base, parseInt(value % 360.0));
}

colorWithText.of = function colorWithTextOf(base) {
  var cache = {};
  return function bound(text) {
    var cached = cache[text];

    if (cached) {
      return cached;
    }

    var generated = colorWithText(text, {
      base: base
    });
    cache[text] = generated;
    return generated;
  };
};

export default colorWithText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yV2l0aFRleHQuanMiXSwibmFtZXMiOlsicm90YXRlIiwiY29sb3JXaXRoVGV4dCIsInRleHQiLCJvcHRpb25zIiwiYmFzZSIsInZhbHVlIiwiU3RyaW5nIiwic3BsaXQiLCJtYXAiLCJsZXR0ZXIiLCJjaGFyQ29kZUF0IiwicmVkdWNlIiwicmVzdWx0IiwicGFyc2VJbnQiLCJvZiIsImNvbG9yV2l0aFRleHRPZiIsImNhY2hlIiwiYm91bmQiLCJjYWNoZWQiLCJnZW5lcmF0ZWQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBT0E7O0FBRUEsU0FBUUEsTUFBUixRQUFxQixRQUFyQjtBQUVBOztBQUNBLFNBQVNDLGFBQVQsQ0FBd0JDLElBQXhCLEVBQTRDO0FBQUEsTUFBZEMsT0FBYyx1RUFBSixFQUFJO0FBQUEsc0JBQ2hCQSxPQURnQixDQUNsQ0MsSUFEa0M7QUFBQSxNQUNsQ0EsSUFEa0MsOEJBQzNCLE1BRDJCO0FBRTFDLE1BQU1DLEtBQUssR0FBR0MsTUFBTSxDQUFDSixJQUFELENBQU4sQ0FBYUssS0FBYixDQUFtQixFQUFuQixFQUNYQyxHQURXLENBQ1AsVUFBQ0MsTUFBRDtBQUFBLFdBQVlBLE1BQU0sQ0FBQ0MsVUFBUCxDQUFrQixDQUFsQixDQUFaO0FBQUEsR0FETyxFQUVYQyxNQUZXLENBRUosVUFBQ0MsTUFBRCxFQUFTUCxLQUFUO0FBQUEsV0FBbUJPLE1BQU0sR0FBR1AsS0FBNUI7QUFBQSxHQUZJLEVBRStCLENBRi9CLENBQWQ7QUFHQSxTQUFPTCxNQUFNLENBQUNJLElBQUQsRUFBT1MsUUFBUSxDQUFDUixLQUFLLEdBQUcsS0FBVCxDQUFmLENBQWI7QUFDRDs7QUFFREosYUFBYSxDQUFDYSxFQUFkLEdBQW1CLFNBQVNDLGVBQVQsQ0FBMEJYLElBQTFCLEVBQWdDO0FBQ2pELE1BQU1ZLEtBQUssR0FBRyxFQUFkO0FBQ0EsU0FBTyxTQUFTQyxLQUFULENBQWdCZixJQUFoQixFQUFzQjtBQUMzQixRQUFNZ0IsTUFBTSxHQUFHRixLQUFLLENBQUNkLElBQUQsQ0FBcEI7O0FBQ0EsUUFBSWdCLE1BQUosRUFBWTtBQUNWLGFBQU9BLE1BQVA7QUFDRDs7QUFDRCxRQUFNQyxTQUFTLEdBQUdsQixhQUFhLENBQUNDLElBQUQsRUFBTztBQUFFRSxNQUFBQSxJQUFJLEVBQUpBO0FBQUYsS0FBUCxDQUEvQjtBQUNBWSxJQUFBQSxLQUFLLENBQUNkLElBQUQsQ0FBTCxHQUFjaUIsU0FBZDtBQUNBLFdBQU9BLFNBQVA7QUFDRCxHQVJEO0FBU0QsQ0FYRDs7QUFhQSxlQUFlbEIsYUFBZiIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldCBjb2xvciB3aXRoIHRleHRcbiAqIEBmdW5jdGlvbiBjb2xvcldpdGhUZXh0XG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAtIFRleHRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gLSBPcHRpb25hbCBzZXR0aW5nc1xuICogQHJldHVybnMge3N0cmluZ30gQ29sb3JcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCB7cm90YXRlfSBmcm9tICdhY29sb3InO1xuXG4vKiogQGxlbmRzIGNvbG9yV2l0aFRleHQgKi9cbmZ1bmN0aW9uIGNvbG9yV2l0aFRleHQgKHRleHQsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7IGJhc2UgPSAnIzM4RScgfSA9IG9wdGlvbnNcbiAgY29uc3QgdmFsdWUgPSBTdHJpbmcodGV4dCkuc3BsaXQoJycpXG4gICAgLm1hcCgobGV0dGVyKSA9PiBsZXR0ZXIuY2hhckNvZGVBdCgwKSlcbiAgICAucmVkdWNlKChyZXN1bHQsIHZhbHVlKSA9PiByZXN1bHQgKyB2YWx1ZSwgMClcbiAgcmV0dXJuIHJvdGF0ZShiYXNlLCBwYXJzZUludCh2YWx1ZSAlIDM2MC4wKSlcbn1cblxuY29sb3JXaXRoVGV4dC5vZiA9IGZ1bmN0aW9uIGNvbG9yV2l0aFRleHRPZiAoYmFzZSkge1xuICBjb25zdCBjYWNoZSA9IHt9XG4gIHJldHVybiBmdW5jdGlvbiBib3VuZCAodGV4dCkge1xuICAgIGNvbnN0IGNhY2hlZCA9IGNhY2hlW3RleHRdXG4gICAgaWYgKGNhY2hlZCkge1xuICAgICAgcmV0dXJuIGNhY2hlZFxuICAgIH1cbiAgICBjb25zdCBnZW5lcmF0ZWQgPSBjb2xvcldpdGhUZXh0KHRleHQsIHsgYmFzZSB9KVxuICAgIGNhY2hlW3RleHRdID0gZ2VuZXJhdGVkXG4gICAgcmV0dXJuIGdlbmVyYXRlZFxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9yV2l0aFRleHQ7XG4iXX0=