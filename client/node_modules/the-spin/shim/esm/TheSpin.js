'use strict';

import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import c from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { eventHandlersFor, htmlAttributesFor } from 'the-component-util';
import { TheIcon } from 'the-icon';
import TheSpinStyle from './TheSpinStyle';
var SpinnerSizes = ['medium', 'xx-small', 'x-small', 'small', 'large', 'x-large', 'xx-large', 'smaller', 'larger'];
var DEFAULT_THEME = 'C';
var DEFAULT_SIZE = 'large';
/**
 * Spin of the-components
 */

var TheSpin =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(TheSpin, _React$PureComponent);

  function TheSpin() {
    _classCallCheck(this, TheSpin);

    return _possibleConstructorReturn(this, _getPrototypeOf(TheSpin).apply(this, arguments));
  }

  _createClass(TheSpin, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var children = props.children,
          className = props.className,
          cover = props.cover,
          enabled = props.enabled,
          size = props.size,
          theme = props.theme;
      return React.createElement("div", _extends({}, htmlAttributesFor(props, {
        except: ['className']
      }), eventHandlersFor(props, {
        except: []
      }), {
        className: c('the-spin', className, {
          'the-spinner-cover': !!cover,
          'the-spinner-enabled': !!enabled
        })
      }), React.createElement(TheIcon.Spin, {
        className: "the-spin-icon",
        style: {
          fontSize: size
        },
        theme: theme
      }), children);
    }
  }]);

  return TheSpin;
}(React.PureComponent);

TheSpin.Style = TheSpinStyle;
TheSpin.Sizes = SpinnerSizes;
TheSpin.propTypes = {
  /** Shows spin */

  /** show as cover */
  cover: PropTypes.bool,
  enabled: PropTypes.bool,

  /** Size of spinner icon */
  size: PropTypes.oneOf(SpinnerSizes),

  /** Theme of the spinner */
  theme: PropTypes.oneOf(Object.keys(TheIcon.SpinIconThemes))
};
TheSpin.defaultProps = {
  cover: false,
  enabled: false,
  size: DEFAULT_SIZE,
  theme: DEFAULT_THEME
};
TheSpin.displayName = 'TheSpin';
export default TheSpin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZVNwaW4uanMiXSwibmFtZXMiOlsiYyIsIlByb3BUeXBlcyIsIlJlYWN0IiwiZXZlbnRIYW5kbGVyc0ZvciIsImh0bWxBdHRyaWJ1dGVzRm9yIiwiVGhlSWNvbiIsIlRoZVNwaW5TdHlsZSIsIlNwaW5uZXJTaXplcyIsIkRFRkFVTFRfVEhFTUUiLCJERUZBVUxUX1NJWkUiLCJUaGVTcGluIiwicHJvcHMiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImNvdmVyIiwiZW5hYmxlZCIsInNpemUiLCJ0aGVtZSIsImV4Y2VwdCIsImZvbnRTaXplIiwiUHVyZUNvbXBvbmVudCIsIlN0eWxlIiwiU2l6ZXMiLCJwcm9wVHlwZXMiLCJib29sIiwib25lT2YiLCJPYmplY3QiLCJrZXlzIiwiU3Bpbkljb25UaGVtZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsT0FBT0EsQ0FBUCxNQUFjLFlBQWQ7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixPQUFsQjtBQUNBLFNBQVNDLGdCQUFULEVBQTJCQyxpQkFBM0IsUUFBb0Qsb0JBQXBEO0FBQ0EsU0FBU0MsT0FBVCxRQUF3QixVQUF4QjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsZ0JBQXpCO0FBRUEsSUFBTUMsWUFBWSxHQUFHLENBQ25CLFFBRG1CLEVBRW5CLFVBRm1CLEVBR25CLFNBSG1CLEVBSW5CLE9BSm1CLEVBS25CLE9BTG1CLEVBTW5CLFNBTm1CLEVBT25CLFVBUG1CLEVBUW5CLFNBUm1CLEVBU25CLFFBVG1CLENBQXJCO0FBWUEsSUFBTUMsYUFBYSxHQUFHLEdBQXRCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLE9BQXJCO0FBRUE7Ozs7SUFHTUMsTzs7Ozs7Ozs7Ozs7Ozs2QkFDTTtBQUFBLFVBQ0FDLEtBREEsR0FDVSxJQURWLENBQ0FBLEtBREE7QUFBQSxVQUdOQyxRQUhNLEdBU0pELEtBVEksQ0FHTkMsUUFITTtBQUFBLFVBSU5DLFNBSk0sR0FTSkYsS0FUSSxDQUlORSxTQUpNO0FBQUEsVUFLTkMsS0FMTSxHQVNKSCxLQVRJLENBS05HLEtBTE07QUFBQSxVQU1OQyxPQU5NLEdBU0pKLEtBVEksQ0FNTkksT0FOTTtBQUFBLFVBT05DLElBUE0sR0FTSkwsS0FUSSxDQU9OSyxJQVBNO0FBQUEsVUFRTkMsS0FSTSxHQVNKTixLQVRJLENBUU5NLEtBUk07QUFVUixhQUNFLHdDQUFTYixpQkFBaUIsQ0FBQ08sS0FBRCxFQUFRO0FBQUVPLFFBQUFBLE1BQU0sRUFBRSxDQUFDLFdBQUQ7QUFBVixPQUFSLENBQTFCLEVBQ1NmLGdCQUFnQixDQUFDUSxLQUFELEVBQVE7QUFBRU8sUUFBQUEsTUFBTSxFQUFFO0FBQVYsT0FBUixDQUR6QjtBQUVLLFFBQUEsU0FBUyxFQUFFbEIsQ0FBQyxDQUFDLFVBQUQsRUFBYWEsU0FBYixFQUF3QjtBQUNsQywrQkFBcUIsQ0FBQyxDQUFDQyxLQURXO0FBRWxDLGlDQUF1QixDQUFDLENBQUNDO0FBRlMsU0FBeEI7QUFGakIsVUFPRSxvQkFBQyxPQUFELENBQVMsSUFBVDtBQUFjLFFBQUEsU0FBUyxFQUFDLGVBQXhCO0FBQ2MsUUFBQSxLQUFLLEVBQUU7QUFBRUksVUFBQUEsUUFBUSxFQUFFSDtBQUFaLFNBRHJCO0FBRWMsUUFBQSxLQUFLLEVBQUVDO0FBRnJCLFFBUEYsRUFXR0wsUUFYSCxDQURGO0FBZUQ7Ozs7RUExQm1CVixLQUFLLENBQUNrQixhOztBQTZCNUJWLE9BQU8sQ0FBQ1csS0FBUixHQUFnQmYsWUFBaEI7QUFDQUksT0FBTyxDQUFDWSxLQUFSLEdBQWdCZixZQUFoQjtBQUVBRyxPQUFPLENBQUNhLFNBQVIsR0FBb0I7QUFDbEI7O0FBQ0E7QUFDQVQsRUFBQUEsS0FBSyxFQUFFYixTQUFTLENBQUN1QixJQUhDO0FBSWxCVCxFQUFBQSxPQUFPLEVBQUVkLFNBQVMsQ0FBQ3VCLElBSkQ7O0FBS2xCO0FBQ0FSLEVBQUFBLElBQUksRUFBRWYsU0FBUyxDQUFDd0IsS0FBVixDQUFnQmxCLFlBQWhCLENBTlk7O0FBT2xCO0FBQ0FVLEVBQUFBLEtBQUssRUFBRWhCLFNBQVMsQ0FBQ3dCLEtBQVYsQ0FDTEMsTUFBTSxDQUFDQyxJQUFQLENBQVl0QixPQUFPLENBQUN1QixjQUFwQixDQURLO0FBUlcsQ0FBcEI7QUFhQWxCLE9BQU8sQ0FBQ21CLFlBQVIsR0FBdUI7QUFDckJmLEVBQUFBLEtBQUssRUFBRSxLQURjO0FBRXJCQyxFQUFBQSxPQUFPLEVBQUUsS0FGWTtBQUdyQkMsRUFBQUEsSUFBSSxFQUFFUCxZQUhlO0FBSXJCUSxFQUFBQSxLQUFLLEVBQUVUO0FBSmMsQ0FBdkI7QUFPQUUsT0FBTyxDQUFDb0IsV0FBUixHQUFzQixTQUF0QjtBQUVBLGVBQWVwQixPQUFmIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgYyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgZXZlbnRIYW5kbGVyc0ZvciwgaHRtbEF0dHJpYnV0ZXNGb3IgfSBmcm9tICd0aGUtY29tcG9uZW50LXV0aWwnXG5pbXBvcnQgeyBUaGVJY29uIH0gZnJvbSAndGhlLWljb24nXG5pbXBvcnQgVGhlU3BpblN0eWxlIGZyb20gJy4vVGhlU3BpblN0eWxlJ1xuXG5jb25zdCBTcGlubmVyU2l6ZXMgPSBbXG4gICdtZWRpdW0nLFxuICAneHgtc21hbGwnLFxuICAneC1zbWFsbCcsXG4gICdzbWFsbCcsXG4gICdsYXJnZScsXG4gICd4LWxhcmdlJyxcbiAgJ3h4LWxhcmdlJyxcbiAgJ3NtYWxsZXInLFxuICAnbGFyZ2VyJ1xuXVxuXG5jb25zdCBERUZBVUxUX1RIRU1FID0gJ0MnXG5jb25zdCBERUZBVUxUX1NJWkUgPSAnbGFyZ2UnXG5cbi8qKlxuICogU3BpbiBvZiB0aGUtY29tcG9uZW50c1xuICovXG5jbGFzcyBUaGVTcGluIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpc1xuICAgIGNvbnN0IHtcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY292ZXIsXG4gICAgICBlbmFibGVkLFxuICAgICAgc2l6ZSxcbiAgICAgIHRoZW1lLFxuICAgIH0gPSBwcm9wc1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHsuLi5odG1sQXR0cmlidXRlc0Zvcihwcm9wcywgeyBleGNlcHQ6IFsnY2xhc3NOYW1lJ10gfSl9XG4gICAgICAgICAgIHsuLi5ldmVudEhhbmRsZXJzRm9yKHByb3BzLCB7IGV4Y2VwdDogW10gfSl9XG4gICAgICAgICAgIGNsYXNzTmFtZT17YygndGhlLXNwaW4nLCBjbGFzc05hbWUsIHtcbiAgICAgICAgICAgICAndGhlLXNwaW5uZXItY292ZXInOiAhIWNvdmVyLFxuICAgICAgICAgICAgICd0aGUtc3Bpbm5lci1lbmFibGVkJzogISFlbmFibGVkLFxuICAgICAgICAgICB9KX1cbiAgICAgID5cbiAgICAgICAgPFRoZUljb24uU3BpbiBjbGFzc05hbWU9J3RoZS1zcGluLWljb24nXG4gICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgZm9udFNpemU6IHNpemUgfX1cbiAgICAgICAgICAgICAgICAgICAgICB0aGVtZT17dGhlbWV9XG4gICAgICAgIC8+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5UaGVTcGluLlN0eWxlID0gVGhlU3BpblN0eWxlXG5UaGVTcGluLlNpemVzID0gU3Bpbm5lclNpemVzXG5cblRoZVNwaW4ucHJvcFR5cGVzID0ge1xuICAvKiogU2hvd3Mgc3BpbiAqL1xuICAvKiogc2hvdyBhcyBjb3ZlciAqL1xuICBjb3ZlcjogUHJvcFR5cGVzLmJvb2wsXG4gIGVuYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAvKiogU2l6ZSBvZiBzcGlubmVyIGljb24gKi9cbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFNwaW5uZXJTaXplcyksXG4gIC8qKiBUaGVtZSBvZiB0aGUgc3Bpbm5lciAqL1xuICB0aGVtZTogUHJvcFR5cGVzLm9uZU9mKFxuICAgIE9iamVjdC5rZXlzKFRoZUljb24uU3Bpbkljb25UaGVtZXMpXG4gICksXG59XG5cblRoZVNwaW4uZGVmYXVsdFByb3BzID0ge1xuICBjb3ZlcjogZmFsc2UsXG4gIGVuYWJsZWQ6IGZhbHNlLFxuICBzaXplOiBERUZBVUxUX1NJWkUsXG4gIHRoZW1lOiBERUZBVUxUX1RIRU1FLFxufVxuXG5UaGVTcGluLmRpc3BsYXlOYW1lID0gJ1RoZVNwaW4nXG5cbmV4cG9ydCBkZWZhdWx0IFRoZVNwaW5cbiJdfQ==