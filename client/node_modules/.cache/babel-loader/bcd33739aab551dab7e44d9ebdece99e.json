{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js\";\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Header from \"../Components/header\";\n// import rand from \"random-key\";\n// import { database } from \"firebase\";\n// export default class HomePage extends React.Component {\n//   state = {\n//     key: rand.generate(5),\n//     num: null\n//   };\n//   componentDidMount = () => {\n//     database()\n//       .ref(\"code-sessions\")\n//       .on(\"value\", s => {\n//         this.setState({ num: s.numChildren() });\n//       });\n//   };\n//   onNewGround = () => {\n//     database()\n//       .ref(\"code-sessions/\" + this.state.key)\n//       .set({\n//         content: \"Happy Coding\",\n//         createdon: Date()\n//       });\n//     this.props.history.push(\"/\" + this.state.key);\n//   };\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header\n//           extras={this.state.num ? `Total ${this.state.num}+ Shares` : null}\n//         />\n//         <div className=\"homepage\">\n//           <p className=\"title\">\n//             <br />\n//             Share Code within <span className=\"highlight\">Realtime</span>.\n//             <br />\n//             Anywhere, Anytime and with <span className=\"highlight\">Anyone</span>\n//             .\n//           </p>\n//           <p className=\"sub-title\">\n//             Simple Realtime Code Sharing Editor App. Using Firebase Realtime\n//             Database and Code Mirror as Editor.\n//           </p>\n//           <div>\n//             <button className=\"btn\" onClick={this.onNewGround}>\n//               Share Code\n//             </button>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\nimport React from 'react';\nimport { TheTalk, TheTalkStyle } from 'the-talk';\nimport { TheSpinStyle } from 'the-spin';\nimport { TheButtonStyle } from 'the-button';\nimport { TheRTCClient } from 'the-rtc-client';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      localClient: null,\n      remoteClients: {}\n    };\n    _this.renderRemoteClient = _this.renderRemoteClient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rtcClient = null;\n    _this.renderLocalClient = _this.renderLocalClient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      void this.joinToTalk();\n    }\n  }, {\n    key: \"joinToTalk\",\n    value: function () {\n      var _joinToTalk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var rtcClient;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                rtcClient = new TheRTCClient({\n                  // Additional info\n                  info: {\n                    userAgent: navigator.userAgent,\n                    who: \"user-\".concat(new Date().getTime())\n                  },\n                  onLocal: function onLocal(localClient) {\n                    _this2.setState({\n                      localClient: localClient\n                    });\n                  },\n                  onRemote: function onRemote(remoteClient) {\n                    var rid = remoteClient.rid;\n\n                    _this2.setState({\n                      remoteClients: _objectSpread({}, _this2.state.remoteClients, _defineProperty({}, rid, remoteClient))\n                    });\n                  }\n                });\n                _context.next = 3;\n                return rtcClient.connect(\"http://localhost:3000\");\n\n              case 3:\n                _context.next = 5;\n                return rtcClient.join(\"the-talk-example-room-\".concat(new Date().getFullYear()));\n\n              case 5:\n                this.rtcClient = rtcClient;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function joinToTalk() {\n        return _joinToTalk.apply(this, arguments);\n      }\n\n      return joinToTalk;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          localClient = _this$state.localClient,\n          remoteClients = _this$state.remoteClients;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(TheSpinStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(TheButtonStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(TheTalkStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TheTalk, Object.assign({\n        localClient: localClient,\n        remoteClients: remoteClients\n      }, {\n        onToggleVideo: function onToggleVideo(videoEnabled) {\n          return _this3.rtcClient.toggleVideoEnabled(videoEnabled);\n        },\n        onToggleAudio: function onToggleAudio(audioEnabled) {\n          return _this3.rtcClient.toggleAudioEnabled(audioEnabled);\n        },\n        renderRemoteClient: this.renderRemoteClient,\n        renderLocalClient: this.renderLocalClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderRemoteClient\",\n    value: function renderRemoteClient(state) {}\n  }, {\n    key: \"renderLocalClient\",\n    value: function renderLocalClient(_ref) {\n      var info = _ref.info;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\".concat(info.who, \" (\").concat(info.userAgent, \")\"));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js"],"names":["React","TheTalk","TheTalkStyle","TheSpinStyle","TheButtonStyle","TheRTCClient","HomePage","props","state","localClient","remoteClients","renderRemoteClient","bind","rtcClient","renderLocalClient","joinToTalk","info","userAgent","navigator","who","Date","getTime","onLocal","setState","onRemote","remoteClient","rid","connect","join","getFullYear","videoEnabled","toggleVideoEnabled","audioEnabled","toggleAudioEnabled","Component"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Header from \"../Components/header\";\n// import rand from \"random-key\";\n// import { database } from \"firebase\";\n\n// export default class HomePage extends React.Component {\n//   state = {\n//     key: rand.generate(5),\n//     num: null\n//   };\n//   componentDidMount = () => {\n//     database()\n//       .ref(\"code-sessions\")\n//       .on(\"value\", s => {\n//         this.setState({ num: s.numChildren() });\n//       });\n//   };\n\n//   onNewGround = () => {\n//     database()\n//       .ref(\"code-sessions/\" + this.state.key)\n//       .set({\n//         content: \"Happy Coding\",\n//         createdon: Date()\n//       });\n//     this.props.history.push(\"/\" + this.state.key);\n//   };\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header\n//           extras={this.state.num ? `Total ${this.state.num}+ Shares` : null}\n//         />\n//         <div className=\"homepage\">\n//           <p className=\"title\">\n//             <br />\n//             Share Code within <span className=\"highlight\">Realtime</span>.\n//             <br />\n//             Anywhere, Anytime and with <span className=\"highlight\">Anyone</span>\n//             .\n//           </p>\n\n//           <p className=\"sub-title\">\n//             Simple Realtime Code Sharing Editor App. Using Firebase Realtime\n//             Database and Code Mirror as Editor.\n//           </p>\n//           <div>\n//             <button className=\"btn\" onClick={this.onNewGround}>\n//               Share Code\n//             </button>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n\n\nimport React from 'react'\nimport { TheTalk, TheTalkStyle } from 'the-talk'\nimport { TheSpinStyle } from 'the-spin'\nimport { TheButtonStyle } from 'the-button'\nimport { TheRTCClient } from 'the-rtc-client'\n\nclass HomePage extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      localClient: null,\n      remoteClients: {}\n    }\n    this.renderRemoteClient = this.renderRemoteClient.bind(this)\n    this.rtcClient = null\n    this.renderLocalClient = this.renderLocalClient.bind(this)\n  }\n\n  componentDidMount () {\n    void this.joinToTalk()\n  }\n\n  async joinToTalk () {\n    const rtcClient = new TheRTCClient({\n      // Additional info\n      info: {\n        userAgent: navigator.userAgent,\n        who: `user-${new Date().getTime()}`\n      },\n      onLocal: (localClient) => {\n        this.setState({localClient})\n      },\n      onRemote: (remoteClient) => {\n        const {rid} = remoteClient\n        this.setState({\n          remoteClients: {\n            ...this.state.remoteClients,\n            [rid]: remoteClient,\n          },\n        })\n      }\n    })\n    await rtcClient.connect(`http://localhost:3000`)\n    await rtcClient.join(`the-talk-example-room-${new Date().getFullYear()}`)\n    this.rtcClient = rtcClient\n  }\n\n  render () {\n    const {localClient, remoteClients} = this.state\n    return (\n      <div>\n        <TheSpinStyle/>\n        <TheButtonStyle/>\n        <TheTalkStyle/>\n        <TheTalk {...{localClient, remoteClients}}\n                 onToggleVideo={(videoEnabled) => this.rtcClient.toggleVideoEnabled(videoEnabled)}\n                 onToggleAudio={(audioEnabled) => this.rtcClient.toggleAudioEnabled(audioEnabled)}\n                 renderRemoteClient={this.renderRemoteClient}\n                 renderLocalClient={this.renderLocalClient}\n        />\n      </div>\n\n    )\n  }\n\n  renderRemoteClient (state) {\n\n  }\n\n  renderLocalClient ({info}) {\n    return (\n      <span>{`${info.who} (${info.userAgent})`}</span>\n    )\n  }\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}