/**
 * Detect iOS or not
 * @function isiOS
 * @returns {Boolean}
 */
'use strict';

var Bowser = require('bowser');

var getUserAgent = require('./helpers/getUserAgent');
/** @lends isiOS */


function isiOS() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$userAgent = options.userAgent,
      userAgent = _options$userAgent === void 0 ? getUserAgent() : _options$userAgent;

  if (!userAgent) {
    return false;
  }

  var browser = Bowser.getParser(userAgent);
  return browser.isOS('iOS');
}

isiOS.webview = function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$userAgent2 = options.userAgent,
      userAgent = _options$userAgent2 === void 0 ? getUserAgent() : _options$userAgent2;
  var browser = Bowser.getParser(userAgent);

  if (!isiOS({
    userAgent: userAgent
  })) {
    return false;
  }

  var isSafari = browser.isBrowser('Safari');
  var version = browser.getBrowserVersion(); // ios webview detected as safari without version
  // https://github.com/lancedikson/bowser/issues/222#issuecomment-400822271

  return !!isSafari && !version;
};

module.exports = isiOS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzaU9TLmpzIl0sIm5hbWVzIjpbIkJvd3NlciIsInJlcXVpcmUiLCJnZXRVc2VyQWdlbnQiLCJpc2lPUyIsIm9wdGlvbnMiLCJ1c2VyQWdlbnQiLCJicm93c2VyIiwiZ2V0UGFyc2VyIiwiaXNPUyIsIndlYnZpZXciLCJpc1NhZmFyaSIsImlzQnJvd3NlciIsInZlcnNpb24iLCJnZXRCcm93c2VyVmVyc2lvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOztBQUVBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBNUI7QUFFQTs7O0FBQ0EsU0FBU0UsS0FBVCxHQUE2QjtBQUFBLE1BQWRDLE9BQWMsdUVBQUosRUFBSTtBQUFBLDJCQUNZQSxPQURaLENBQ25CQyxTQURtQjtBQUFBLE1BQ25CQSxTQURtQixtQ0FDUEgsWUFBWSxFQURMOztBQUUzQixNQUFJLENBQUNHLFNBQUwsRUFBZ0I7QUFDZCxXQUFPLEtBQVA7QUFDRDs7QUFDRCxNQUFNQyxPQUFPLEdBQUdOLE1BQU0sQ0FBQ08sU0FBUCxDQUFpQkYsU0FBakIsQ0FBaEI7QUFDQSxTQUFPQyxPQUFPLENBQUNFLElBQVIsQ0FBYSxLQUFiLENBQVA7QUFDRDs7QUFFREwsS0FBSyxDQUFDTSxPQUFOLEdBQWdCLFlBQWtCO0FBQUEsTUFBakJMLE9BQWlCLHVFQUFQLEVBQU87QUFBQSw0QkFDT0EsT0FEUCxDQUN4QkMsU0FEd0I7QUFBQSxNQUN4QkEsU0FEd0Isb0NBQ1pILFlBQVksRUFEQTtBQUVoQyxNQUFNSSxPQUFPLEdBQUdOLE1BQU0sQ0FBQ08sU0FBUCxDQUFpQkYsU0FBakIsQ0FBaEI7O0FBQ0EsTUFBSSxDQUFDRixLQUFLLENBQUM7QUFBRUUsSUFBQUEsU0FBUyxFQUFUQTtBQUFGLEdBQUQsQ0FBVixFQUEyQjtBQUN6QixXQUFPLEtBQVA7QUFDRDs7QUFDRCxNQUFNSyxRQUFRLEdBQUdKLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQixRQUFsQixDQUFqQjtBQUNBLE1BQU1DLE9BQU8sR0FBR04sT0FBTyxDQUFDTyxpQkFBUixFQUFoQixDQVBnQyxDQVFoQztBQUNBOztBQUNBLFNBQU8sQ0FBQyxDQUFDSCxRQUFGLElBQWMsQ0FBQ0UsT0FBdEI7QUFDRCxDQVhEOztBQWFBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLEtBQWpCIiwic291cmNlUm9vdCI6Ii4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGV0ZWN0IGlPUyBvciBub3RcbiAqIEBmdW5jdGlvbiBpc2lPU1xuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBCb3dzZXIgPSByZXF1aXJlKCdib3dzZXInKVxuY29uc3QgZ2V0VXNlckFnZW50ID0gcmVxdWlyZSgnLi9oZWxwZXJzL2dldFVzZXJBZ2VudCcpXG5cbi8qKiBAbGVuZHMgaXNpT1MgKi9cbmZ1bmN0aW9uIGlzaU9TKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7IHVzZXJBZ2VudCA9IGdldFVzZXJBZ2VudCgpIH0gPSBvcHRpb25zXG4gIGlmICghdXNlckFnZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgY29uc3QgYnJvd3NlciA9IEJvd3Nlci5nZXRQYXJzZXIodXNlckFnZW50KVxuICByZXR1cm4gYnJvd3Nlci5pc09TKCdpT1MnKVxufVxuXG5pc2lPUy53ZWJ2aWV3ID0gKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCB7IHVzZXJBZ2VudCA9IGdldFVzZXJBZ2VudCgpIH0gPSBvcHRpb25zXG4gIGNvbnN0IGJyb3dzZXIgPSBCb3dzZXIuZ2V0UGFyc2VyKHVzZXJBZ2VudClcbiAgaWYgKCFpc2lPUyh7IHVzZXJBZ2VudCB9KSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIGNvbnN0IGlzU2FmYXJpID0gYnJvd3Nlci5pc0Jyb3dzZXIoJ1NhZmFyaScpXG4gIGNvbnN0IHZlcnNpb24gPSBicm93c2VyLmdldEJyb3dzZXJWZXJzaW9uKClcbiAgLy8gaW9zIHdlYnZpZXcgZGV0ZWN0ZWQgYXMgc2FmYXJpIHdpdGhvdXQgdmVyc2lvblxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vbGFuY2VkaWtzb24vYm93c2VyL2lzc3Vlcy8yMjIjaXNzdWVjb21tZW50LTQwMDgyMjI3MVxuICByZXR1cm4gISFpc1NhZmFyaSAmJiAhdmVyc2lvblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzaU9TXG4iXX0=