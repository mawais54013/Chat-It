{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js\";\n// import React, { Component } from 'react';\n// import PubNubReact from 'pubnub-react';\n// class Chat extends Component {\n//     constructor(props) {\n//         super(props);\n// this.pubnub = new PubNubReact({ subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n// // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n// publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138' });\n//         this.pubnub.init(this);\n//       }\n//       componentWillUpdate()\n//       {\n//         (function() {\n//             // var output = PUBNUB.$('output'), \n//             //     input = PUBNUB.$('input'), \n//             //     button = PUBNUB.$('button'),\n//             //     avatar = PUBNUB.$('avatar'),\n//             //     presence = PUBNUB.$('presence');\n//             var channel = '1';\n//             // Assign a random avatar in random color\n//             // avatar.className = 'face-' + ((Math.random() * 13 + 1) >>> 0) + ' color-' + ((Math.random() * 10 + 1) >>> 0);\n//             // var p = PUBNUB.init({\n//             //     subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n//             //     // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n//             //     publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n//             //     // 'pub-c-156a6d5f-22bd-4a13-848d-b5b4d4b36695'\n//             // });\n//             this.pubnub.subscribe({\n//                 channel  : channel,\n//                 callback : function(m) { \n//                     output.innerHTML = '<p><span>' +  m.text.replace( /[<>]/ig, '' ) + '</span></p>' + output.innerHTML; \n//                 },\n//                 presence: function(m){\n//                     if(m.occupancy > 1) {\n//                         presence.textContent = m.occupancy + ' people online';\n//                     }\n//                 }\n//             });\n//             this.pubnub.bind('keyup', input, function(e) {\n//                 (e.keyCode || e.charCode) === 13 && publish()\n//             });\n//             this.pubnub.bind('click', button, publish);\n//             function publish() {\n//                 this.pubnub.publish({\n//                     channel : channel, \n//                     message : {avatar: avatar.className, text: input.value}, \n//                     x : (input.value='')\n//                 });\n//             }\n//         })();\n//       }\n//     render() {\n//         return (\n//             <div>\n//                 <h3>Chat With Others Here</h3>\n// <section id=\"main\" role=\"main\">\n//     <div id=\"chat\">\n//         <i id=\"avatar\" class=\"face12\"><input type=\"text\" id=\"input\" placeholder=\"Type your message...\"></input></i>\n//     </div>\n//     <button id=\"button\">\n//         Send Message\n//     </button>\n//     <p id=\"presence\"></p>\n//     <div id=\"output\"></div>\n// </section>\n//             </div>\n//         )\n//     }\n// }\n// export default Chat;\nimport React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.pubnub = new PubNubReact({\n      subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n      publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n    });\n\n    _this.pubnub.init(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.pubnub.subscribe({\n        channels: ['channel1'],\n        withPresence: true\n      });\n      this.pubnub.getMessage('channel1', function (msg) {\n        console.log(msg);\n      });\n      this.pubnub.getStatus(function (st) {\n        _this2.pubnub.publish({\n          message: 'hello world from react',\n          channel: 'channel1'\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pubnub.unsubscribe({\n        channels: ['channel1']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var messages = this.pubnub.getMessage('channel1');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, messages.map(function (m, index) {\n        return React.createElement(\"li\", {\n          key: 'message' + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, m.message);\n      })));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js"],"names":["React","Component","PubNubReact","props","pubnub","subscribe_key","publish_key","init","subscribe","channels","withPresence","getMessage","msg","console","log","getStatus","st","publish","message","channel","unsubscribe","messages","map","m","index"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACQ;AACA;AACA;AACR;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEgB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAChB;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;;;;;AAGI,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,IAAIF,WAAJ,CAAgB;AAC1BG,MAAAA,aAAa,EAAE,4CADW;AAE1BC,MAAAA,WAAW,EAAE;AAFa,KAAhB,CAAd;;AAIA,UAAKF,MAAL,CAAYG,IAAZ;;AANe;AAOlB;;;;yCAEoB;AAAA;;AACjB,WAAKH,MAAL,CAAYI,SAAZ,CAAsB;AAClBC,QAAAA,QAAQ,EAAE,CAAC,UAAD,CADQ;AAElBC,QAAAA,YAAY,EAAE;AAFI,OAAtB;AAKA,WAAKN,MAAL,CAAYO,UAAZ,CAAuB,UAAvB,EAAmC,UAACC,GAAD,EAAS;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD;AAIA,WAAKR,MAAL,CAAYW,SAAZ,CAAsB,UAACC,EAAD,EAAQ;AAC1B,QAAA,MAAI,CAACZ,MAAL,CAAYa,OAAZ,CAAoB;AAChBC,UAAAA,OAAO,EAAE,wBADO;AAEhBC,UAAAA,OAAO,EAAE;AAFO,SAApB;AAIH,OALD;AAMH;;;2CAEsB;AACnB,WAAKf,MAAL,CAAYgB,WAAZ,CAAwB;AACpBX,QAAAA,QAAQ,EAAE,CAAC,UAAD;AADU,OAAxB;AAGH;;;6BAEQ;AACL,UAAMY,QAAQ,GAAG,KAAKjB,MAAL,CAAYO,UAAZ,CAAuB,UAAvB,CAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKU,QAAQ,CAACC,GAAT,CAAa,UAACC,CAAD,EAAIC,KAAJ;AAAA,eAAc;AAAI,UAAA,GAAG,EAAE,YAAYA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BD,CAAC,CAACL,OAA/B,CAAd;AAAA,OAAb,CADL,CADJ,CADJ;AAOH;;;;EA3CwBjB,S","sourcesContent":["// import React, { Component } from 'react';\n// import PubNubReact from 'pubnub-react';\n\n// class Chat extends Component {\n//     constructor(props) {\n//         super(props);\n        // this.pubnub = new PubNubReact({ subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n        // // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n        // publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138' });\n//         this.pubnub.init(this);\n//       }\n//       componentWillUpdate()\n//       {\n//         (function() {\n\n//             // var output = PUBNUB.$('output'), \n//             //     input = PUBNUB.$('input'), \n//             //     button = PUBNUB.$('button'),\n//             //     avatar = PUBNUB.$('avatar'),\n//             //     presence = PUBNUB.$('presence');\n        \n//             var channel = '1';\n            \n//             // Assign a random avatar in random color\n//             // avatar.className = 'face-' + ((Math.random() * 13 + 1) >>> 0) + ' color-' + ((Math.random() * 10 + 1) >>> 0);\n        \n//             // var p = PUBNUB.init({\n//             //     subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n//             //     // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n//             //     publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n//             //     // 'pub-c-156a6d5f-22bd-4a13-848d-b5b4d4b36695'\n//             // });\n        \n//             this.pubnub.subscribe({\n//                 channel  : channel,\n//                 callback : function(m) { \n//                     output.innerHTML = '<p><span>' +  m.text.replace( /[<>]/ig, '' ) + '</span></p>' + output.innerHTML; \n//                 },\n//                 presence: function(m){\n//                     if(m.occupancy > 1) {\n//                         presence.textContent = m.occupancy + ' people online';\n//                     }\n//                 }\n//             });\n        \n//             this.pubnub.bind('keyup', input, function(e) {\n//                 (e.keyCode || e.charCode) === 13 && publish()\n//             });\n        \n//             this.pubnub.bind('click', button, publish);\n        \n//             function publish() {\n//                 this.pubnub.publish({\n//                     channel : channel, \n//                     message : {avatar: avatar.className, text: input.value}, \n//                     x : (input.value='')\n//                 });\n//             }\n//         })();\n//       }\n//     render() {\n\n//         return (\n//             <div>\n//                 <h3>Chat With Others Here</h3>\n\n                // <section id=\"main\" role=\"main\">\n                //     <div id=\"chat\">\n                //         <i id=\"avatar\" class=\"face12\"><input type=\"text\" id=\"input\" placeholder=\"Type your message...\"></input></i>\n                //     </div>\n                //     <button id=\"button\">\n                //         Send Message\n                //     </button>\n\n                //     <p id=\"presence\"></p>\n                //     <div id=\"output\"></div>\n                // </section>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Chat;\n\nimport React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\n \nexport default class extends Component {\n    constructor(props) {\n        super(props);\n        this.pubnub = new PubNubReact({\n            subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n            publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n        });\n        this.pubnub.init(this);\n    }\n \n    componentWillMount() {\n        this.pubnub.subscribe({\n            channels: ['channel1'],\n            withPresence: true\n        });\n \n        this.pubnub.getMessage('channel1', (msg) => {\n            console.log(msg);\n        });\n \n        this.pubnub.getStatus((st) => {\n            this.pubnub.publish({\n                message: 'hello world from react',\n                channel: 'channel1'\n            });\n        });\n    }\n \n    componentWillUnmount() {\n        this.pubnub.unsubscribe({\n            channels: ['channel1']\n        });\n    }\n \n    render() {\n        const messages = this.pubnub.getMessage('channel1');\n        return (\n            <div>\n                <ul>\n                    {messages.map((m, index) => <li key={'message' + index}>{m.message}</li>)}\n                </ul>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}