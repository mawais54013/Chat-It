{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../Components/header\";\nimport rand from \"random-key\";\nimport { database } from \"firebase\";\n\nif (!location.hash) {\n  location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nvar roomHash = location.hash.substring(1); // TODO: Replace with your own channel ID\n\nvar drone = new ScaleDrone('yiS12Ts5RdNhebyM'); // Room name needs to be prefixed with 'observable-'\n\nvar roomName = 'observable-' + roomHash;\nvar configuration = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:19302'\n  }]\n};\nvar room;\nvar pc;\n\nfunction onSuccess() {}\n\n;\n\nfunction onError(error) {\n  console.error(error);\n}\n\n;\ndrone.on('open', function (error) {\n  if (error) {\n    return console.error(error);\n  }\n\n  room = drone.subscribe(roomName);\n  room.on('open', function (error) {\n    if (error) {\n      onError(error);\n    }\n  }); // We're connected to the room and received an array of 'members'\n  // connected to the room (including us). Signaling server is ready.\n\n  room.on('members', function (members) {\n    console.log('MEMBERS', members); // If we are the second user to connect to the room we will be creating the offer\n\n    var isOfferer = members.length === 2;\n    startWebRTC(isOfferer);\n  });\n}); // Send signaling data via Scaledrone\n\nfunction sendMessage(message) {\n  drone.publish({\n    room: roomName,\n    message: message\n  });\n}\n\nfunction startWebRTC(isOfferer) {\n  pc = new RTCPeerConnection(configuration); // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n  // message to the other peer through the signaling server\n\n  pc.onicecandidate = function (event) {\n    if (event.candidate) {\n      sendMessage({\n        'candidate': event.candidate\n      });\n    }\n  }; // If user is offerer let the 'negotiationneeded' event create the offer\n\n\n  if (isOfferer) {\n    pc.onnegotiationneeded = function () {\n      pc.createOffer().then(localDescCreated).catch(onError);\n    };\n  } // When a remote stream arrives display it in the #remoteVideo element\n\n\n  pc.ontrack = function (event) {\n    var stream = event.streams[0];\n\n    if (!remoteVideo.srcObject || remoteVideo.srcObject.id !== stream.id) {\n      remoteVideo.srcObject = stream;\n    }\n  };\n\n  navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: true\n  }).then(function (stream) {\n    // Display your local video in #localVideo element\n    localVideo.srcObject = stream; // Add your stream to be sent to the conneting peer\n\n    stream.getTracks().forEach(function (track) {\n      return pc.addTrack(track, stream);\n    });\n  }, onError); // Listen to signaling data from Scaledrone\n\n  room.on('data', function (message, client) {\n    // Message was sent by us\n    if (client.id === drone.clientId) {\n      return;\n    }\n\n    if (message.sdp) {\n      // This is called after receiving an offer or answer from another peer\n      pc.setRemoteDescription(new RTCSessionDescription(message.sdp), function () {\n        // When receiving an offer lets answer it\n        if (pc.remoteDescription.type === 'offer') {\n          pc.createAnswer().then(localDescCreated).catch(onError);\n        }\n      }, onError);\n    } else if (message.candidate) {\n      // Add the new ICE candidate to our connections remote description\n      pc.addIceCandidate(new RTCIceCandidate(message.candidate), onSuccess, onError);\n    }\n  });\n}\n\nfunction localDescCreated(desc) {\n  pc.setLocalDescription(desc, function () {\n    return sendMessage({\n      'sdp': pc.localDescription\n    });\n  }, onError);\n}\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HomePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      key: rand.generate(5),\n      num: null\n    };\n\n    _this.componentDidMount = function () {\n      database().ref(\"code-sessions\").on(\"value\", function (s) {\n        _this.setState({\n          num: s.numChildren()\n        });\n      });\n    };\n\n    _this.onNewGround = function () {\n      database().ref(\"code-sessions/\" + _this.state.key).set({\n        content: \"Happy Coding\",\n        createdon: Date()\n      });\n\n      _this.props.history.push(\"/\" + _this.state.key);\n    };\n\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Header, {\n        extras: this.state.num ? \"Total \".concat(this.state.num, \"+ Shares\") : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"Share Code within \", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Realtime\"), \".\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), \"Anywhere, Anytime and with \", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Anyone\"), \".\"), React.createElement(\"p\", {\n        className: \"sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Simple Realtime Code Sharing Editor App. Using Firebase Realtime Database and Code Mirror as Editor.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: this.onNewGround,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Share Code\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"localVideo\",\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"video\", {\n        id: \"remoteVideo\",\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport { HomePage as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js"],"names":["React","Link","Header","rand","database","location","hash","Math","floor","random","toString","roomHash","substring","drone","ScaleDrone","roomName","configuration","iceServers","urls","room","pc","onSuccess","onError","error","console","on","subscribe","members","log","isOfferer","length","startWebRTC","sendMessage","message","publish","RTCPeerConnection","onicecandidate","event","candidate","onnegotiationneeded","createOffer","then","localDescCreated","catch","ontrack","stream","streams","remoteVideo","srcObject","id","navigator","mediaDevices","getUserMedia","audio","video","localVideo","getTracks","forEach","track","addTrack","client","clientId","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","addIceCandidate","RTCIceCandidate","desc","setLocalDescription","localDescription","HomePage","state","key","generate","num","componentDidMount","ref","s","setState","numChildren","onNewGround","set","content","createdon","Date","props","history","push","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../Components/header\";\nimport rand from \"random-key\";\nimport { database } from \"firebase\";\n\nif (!location.hash) {\n  location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\nconst roomHash = location.hash.substring(1);\n\n// TODO: Replace with your own channel ID\nconst drone = new ScaleDrone('yiS12Ts5RdNhebyM');\n// Room name needs to be prefixed with 'observable-'\nconst roomName = 'observable-' + roomHash;\nconst configuration = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:19302'\n  }]\n};\nlet room;\nlet pc;\n\n\nfunction onSuccess() {};\nfunction onError(error) {\n  console.error(error);\n};\n\ndrone.on('open', error => {\n  if (error) {\n    return console.error(error);\n  }\n  room = drone.subscribe(roomName);\n  room.on('open', error => {\n    if (error) {\n      onError(error);\n    }\n  });\n  // We're connected to the room and received an array of 'members'\n  // connected to the room (including us). Signaling server is ready.\n  room.on('members', members => {\n    console.log('MEMBERS', members);\n    // If we are the second user to connect to the room we will be creating the offer\n    const isOfferer = members.length === 2;\n    startWebRTC(isOfferer);\n  });\n});\n\n// Send signaling data via Scaledrone\nfunction sendMessage(message) {\n  drone.publish({\n    room: roomName,\n    message\n  });\n}\n\nfunction startWebRTC(isOfferer) {\n  pc = new RTCPeerConnection(configuration);\n\n  // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n  // message to the other peer through the signaling server\n  pc.onicecandidate = event => {\n    if (event.candidate) {\n      sendMessage({'candidate': event.candidate});\n    }\n  };\n\n  // If user is offerer let the 'negotiationneeded' event create the offer\n  if (isOfferer) {\n    pc.onnegotiationneeded = () => {\n      pc.createOffer().then(localDescCreated).catch(onError);\n    }\n  }\n\n  // When a remote stream arrives display it in the #remoteVideo element\n  pc.ontrack = event => {\n    const stream = event.streams[0];\n    if (!remoteVideo.srcObject || remoteVideo.srcObject.id !== stream.id) {\n      remoteVideo.srcObject = stream;\n    }\n  };\n\n  navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: true,\n  }).then(stream => {\n    // Display your local video in #localVideo element\n    localVideo.srcObject = stream;\n    // Add your stream to be sent to the conneting peer\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n  }, onError);\n\n  // Listen to signaling data from Scaledrone\n  room.on('data', (message, client) => {\n    // Message was sent by us\n    if (client.id === drone.clientId) {\n      return;\n    }\n\n    if (message.sdp) {\n      // This is called after receiving an offer or answer from another peer\n      pc.setRemoteDescription(new RTCSessionDescription(message.sdp), () => {\n        // When receiving an offer lets answer it\n        if (pc.remoteDescription.type === 'offer') {\n          pc.createAnswer().then(localDescCreated).catch(onError);\n        }\n      }, onError);\n    } else if (message.candidate) {\n      // Add the new ICE candidate to our connections remote description\n      pc.addIceCandidate(\n        new RTCIceCandidate(message.candidate), onSuccess, onError\n      );\n    }\n  });\n}\n\nfunction localDescCreated(desc) {\n  pc.setLocalDescription(\n    desc,\n    () => sendMessage({'sdp': pc.localDescription}),\n    onError\n  );\n}\nexport default class HomePage extends React.Component {\n  state = {\n    key: rand.generate(5),\n    num: null\n  };\n  componentDidMount = () => {\n    database()\n      .ref(\"code-sessions\")\n      .on(\"value\", s => {\n        this.setState({ num: s.numChildren() });\n      });\n  };\n\n  onNewGround = () => {\n    database()\n      .ref(\"code-sessions/\" + this.state.key)\n      .set({\n        content: \"Happy Coding\",\n        createdon: Date()\n      });\n    this.props.history.push(\"/\" + this.state.key);\n  };\n  render() {\n    \n    return (\n      <React.Fragment>\n        <Header\n          extras={this.state.num ? `Total ${this.state.num}+ Shares` : null}\n        />\n        <div className=\"homepage\">\n          <p className=\"title\">\n            <br />\n            Share Code within <span className=\"highlight\">Realtime</span>.\n            <br />\n            Anywhere, Anytime and with <span className=\"highlight\">Anyone</span>\n            .\n          </p>\n\n          <p className=\"sub-title\">\n            Simple Realtime Code Sharing Editor App. Using Firebase Realtime\n            Database and Code Mirror as Editor.\n          </p>\n          <div>\n            <button className=\"btn\" onClick={this.onNewGround}>\n              Share Code\n            </button>\n          </div>\n          <div>\n            <video id=\"localVideo\" autoPlay></video>\n            <video id=\"remoteVideo\" autoPlay></video>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}