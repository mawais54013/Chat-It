'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _theCheck = require("the-check");

var _theColor = require("the-color");

var _theComponentUtil = require("the-component-util");

var _theIcon = require("the-icon");

var _theLink = require("the-link");

var _TheButtonGroup = _interopRequireDefault(require("./TheButtonGroup"));

/**
 * Button of the-components
 */
var TheButton =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(TheButton, _React$Component);
  (0, _createClass2.default)(TheButton, null, [{
    key: "Next",
    value: function Next(props) {
      return _react.default.createElement(TheButton, (0, _extends2.default)({
        iconRight: TheButton.NEXT_ICON
      }, props));
    }
  }, {
    key: "Prev",
    value: function Prev(props) {
      return _react.default.createElement(TheButton, (0, _extends2.default)({
        icon: TheButton.PREV_ICON
      }, props));
    }
  }, {
    key: "Spinner",
    value: function Spinner() {
      return _react.default.createElement("span", {
        className: "the-button-spinner"
      }, _react.default.createElement(_theIcon.TheIcon.Spin, {
        className: "the-button-spinner-icon"
      }));
    }
  }]);

  function TheButton(props) {
    var _this;

    (0, _classCallCheck2.default)(this, TheButton);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TheButton).call(this, props));
    _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
    _this.lastClickedAt = null;
    return _this;
  }

  (0, _createClass2.default)(TheButton, [{
    key: "handleClick",
    value: function handleClick(e) {
      var _this$props = this.props,
          minInterval = _this$props.minInterval,
          onClick = _this$props.onClick,
          onSubmit = _this$props.onSubmit;

      if (this.lastClickedAt) {
        var sinceLast = new Date() - this.lastClickedAt;
        var tooSoon = sinceLast < minInterval;

        if (tooSoon) {
          (0, _theCheck.unlessProduction)(function () {
            console.warn("[TheButton] Prevent double click ( minInterval: ".concat(minInterval, "ms, actual: ").concat(sinceLast, "ms )"));
          });
          return;
        }
      }

      onClick && onClick(e);
      onSubmit && onSubmit();
      this.lastClickedAt = new Date();
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(e) {
      var _this$props2 = this.props,
          onClick = _this$props2.onClick,
          onKeyDown = _this$props2.onKeyDown,
          onSubmit = _this$props2.onSubmit;

      switch (e.keyCode) {
        case 32:
          // Space key
          e.preventDefault();
          onSubmit && onSubmit();
          onClick && onClick();
          break;

        default:
          break;
      }

      onKeyDown && onKeyDown(e);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var children = props.children,
          className = props.className,
          color = props.color,
          danger = props.danger,
          disabled = props.disabled,
          floated = props.floated,
          icon = props.icon,
          iconRight = props.iconRight,
          large = props.large,
          largeIcon = props.largeIcon,
          light = props.light,
          primary = props.primary,
          rounded = props.rounded,
          simple = props.simple,
          small = props.small,
          spinning = props.spinning,
          _props$style = props.style,
          style = _props$style === void 0 ? {} : _props$style,
          target = props.target,
          text = props.text,
          to = props.to,
          wide = props.wide;
      var A = to ? _theLink.TheLink : 'a';
      var applyColor = color && !danger && !disabled;

      if (applyColor && style) {
        style.borderColor = color;

        if (primary) {
          style.backgroundColor = color;
          style.color = (0, _theColor.textColorFor)(color);
        } else {
          style.color = color;
        }
      }

      return _react.default.createElement(A, (0, _extends2.default)({}, (0, _theComponentUtil.htmlAttributesFor)(props, {
        except: ['className', 'style', 'icon', 'to', 'color', 'iconRight']
      }), (0, _theComponentUtil.eventHandlersFor)(props, {
        except: ['onClick']
      }), {
        "aria-busy": spinning,
        className: (0, _classnames.default)('the-button', className, {
          'the-button-danger': danger,
          'the-button-disabled': disabled,
          'the-button-floated': floated,
          'the-button-large': large,
          'the-button-light': light,
          'the-button-primary': primary,
          'the-button-rounded': rounded,
          'the-button-simple': simple,
          'the-button-small': small,
          'the-button-spinning': spinning,
          'the-button-vertical': !!largeIcon,
          'the-button-wide': wide
        }),
        onClick: this.handleClick
      }, {
        style: style,
        target: target,
        to: to
      }, {
        href: !to && props.href || 'javascript:void(0)',
        onKeyDown: this.handleKeyDown
      }), _react.default.createElement("span", {
        className: "the-button-inner"
      }, spinning && _react.default.createElement(TheButton.Spinner, null), largeIcon && _react.default.createElement(_theIcon.TheIcon, {
        className: (0, _classnames.default)('the-button-large-icon', largeIcon)
      }), icon && _react.default.createElement(_theIcon.TheIcon, {
        className: (0, _classnames.default)('the-button-icon', icon)
      }), text && _react.default.createElement("span", {
        className: (0, _classnames.default)('the-button-text')
      }, text), children, iconRight && _react.default.createElement(_theIcon.TheIcon, {
        className: (0, _classnames.default)('the-button-icon', 'the-button-icon-right', iconRight)
      })));
    }
  }]);
  return TheButton;
}(_react.default.Component);

TheButton.Group = _TheButtonGroup.default;
TheButton.PREV_ICON = 'fas fa-caret-left';
TheButton.NEXT_ICON = 'fas fa-caret-right';
TheButton.propTypes = {
  /** Color theme */
  color: _propTypes.default.string,

  /** Danger style */
  danger: _propTypes.default.bool,

  /** Disabled state */
  disabled: _propTypes.default.bool,

  /** Floated style */
  floated: _propTypes.default.bool,

  /** Icon class */
  icon: _propTypes.default.string,

  /** Large style */
  large: _propTypes.default.bool,

  /** Large icon class */
  largeIcon: _propTypes.default.string,

  /** Light color */
  light: _propTypes.default.bool,

  /** Minimum interval */
  minInterval: _propTypes.default.number,

  /** Handle submit */
  onSubmit: _propTypes.default.func,

  /** Primary style */
  primary: _propTypes.default.bool,

  /** Rounded style */
  rounded: _propTypes.default.bool,

  /** Simple style */
  simple: _propTypes.default.bool,

  /** Small style */
  small: _propTypes.default.bool,

  /** Show spinner */
  spinning: _propTypes.default.bool,

  /** Button text */
  text: _propTypes.default.string,

  /** Wide style */
  wide: _propTypes.default.bool
};
TheButton.defaultProps = {
  color: null,
  danger: false,
  disabled: false,
  floated: false,
  icon: null,
  large: false,
  largeIcon: null,
  light: false,
  minInterval: 300,
  onSubmit: null,
  primary: false,
  role: 'button',
  rounded: false,
  simple: false,
  small: false,
  spinning: false,
  text: null,
  wide: false
};
TheButton.displayName = 'TheButton';
var _default = TheButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,