{"ast":null,"code":"import _toConsumableArray from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Party.js\";\n// import React, { Component } from 'react';\n// import { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'\n// // import MyComponent from './MyComponent';\n// class Party extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       peers: [],\n//       roomID: `liowebrtc-vdemo-party-${this.props.roomName}`,\n//       inRoom: false,\n//     };\n//   }\n//   // join = (webrtc) => webrtc.joinRoom('video-chat-room-arbitrary-name');\n//   join = (webrtc) => webrtc.joinRoom(this.state.roomID, (err, desc) => {\n//     this.setState({ inRoom: true });\n//   });\n//   handleCreatedPeer = (webrtc, peer) => {\n//     this.setState({ peers: [...this.state.peers, peer] });\n//   }\n//   handleRemovedPeer = () => {\n//     this.setState({ peers: this.state.peers.filter(p => !p.closed) });\n//   }\n//   generateRemotes = () => this.state.peers.map((peer) => (\n//       <RemoteVideo key={`remote-video-${peer.id}`} peer={peer} />\n//     )\n//   );\n//   render () {\n//     return (\n//       <LioWebRTC\n//         options={{ debug: true }}\n//         onReady={this.join}\n//         onCreatedPeer={this.handleCreatedPeer}\n//         onRemovedPeer={this.handleRemovedPeer}\n//       >\n//         <LocalVideo />\n//         {\n//           this.state.peers &&\n//           this.generateRemotes()\n//         }\n//       </LioWebRTC>\n//     )\n//   }\n// }\n// export default Party;\nimport React, { Component } from 'react';\nimport { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'; // import MyComponent from './MyComponent';\n\nvar Party =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Party, _Component);\n\n  function Party(props) {\n    var _this;\n\n    _classCallCheck(this, Party);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Party).call(this, props));\n\n    _this.join = function (webrtc) {\n      return webrtc.joinRoom('video-chat-room-arbitrary-name');\n    };\n\n    _this.handleCreatedPeer = function (webrtc, peer) {\n      _this.setState({\n        peers: [].concat(_toConsumableArray(_this.state.peers), [peer])\n      });\n    };\n\n    _this.handleRemovedPeer = function () {\n      _this.setState({\n        peers: _this.state.peers.filter(function (p) {\n          return !p.closed;\n        })\n      });\n    };\n\n    _this.generateRemotes = function () {\n      return _this.state.peers.map(function (peer) {\n        return React.createElement(RemoteVideo, {\n          key: \"remote-video-\".concat(peer.id),\n          peer: peer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.state = {\n      peers: []\n    };\n    return _this;\n  }\n\n  _createClass(Party, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LioWebRTC, {\n        options: {\n          debug: true\n        },\n        onReady: this.join,\n        onCreatedPeer: this.handleCreatedPeer,\n        onRemovedPeer: this.handleRemovedPeer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(LocalVideo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), this.state.peers && this.generateRemotes());\n    }\n  }]);\n\n  return Party;\n}(Component);\n\nexport default Party;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Party.js"],"names":["React","Component","LioWebRTC","LocalVideo","RemoteVideo","Party","props","join","webrtc","joinRoom","handleCreatedPeer","peer","setState","peers","state","handleRemovedPeer","filter","p","closed","generateRemotes","map","id","debug"],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,QAAmD,iBAAnD,C,CACA;;IAEMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAOnBC,IAPmB,GAOZ,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,QAAP,CAAgB,gCAAhB,CAAZ;AAAA,KAPY;;AAAA,UASnBC,iBATmB,GASC,UAACF,MAAD,EAASG,IAAT,EAAkB;AACpC,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,+BAAM,MAAKC,KAAL,CAAWD,KAAjB,IAAwBF,IAAxB;AAAP,OAAd;AACD,KAXkB;;AAAA,UAanBI,iBAbmB,GAaC,YAAM;AACxB,YAAKH,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KAAX,CAAiBG,MAAjB,CAAwB,UAAAC,CAAC;AAAA,iBAAI,CAACA,CAAC,CAACC,MAAP;AAAA,SAAzB;AAAT,OAAd;AACD,KAfkB;;AAAA,UAiBnBC,eAjBmB,GAiBD;AAAA,aAAM,MAAKL,KAAL,CAAWD,KAAX,CAAiBO,GAAjB,CAAqB,UAACT,IAAD;AAAA,eACzC,oBAAC,WAAD;AAAa,UAAA,GAAG,yBAAkBA,IAAI,CAACU,EAAvB,CAAhB;AAA6C,UAAA,IAAI,EAAEV,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyC;AAAA,OAArB,CAAN;AAAA,KAjBC;;AAEjB,UAAKG,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAiBS;AACR,aACE,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SADX;AAEE,QAAA,OAAO,EAAE,KAAKf,IAFhB;AAGE,QAAA,aAAa,EAAE,KAAKG,iBAHtB;AAIE,QAAA,aAAa,EAAE,KAAKK,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQI,KAAKD,KAAL,CAAWD,KAAX,IACA,KAAKM,eAAL,EATJ,CADF;AAcD;;;;EAvCiBlB,S;;AA0CpB,eAAeI,KAAf","sourcesContent":["\n\n// import React, { Component } from 'react';\n// import { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'\n// // import MyComponent from './MyComponent';\n\n// class Party extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       peers: [],\n//       roomID: `liowebrtc-vdemo-party-${this.props.roomName}`,\n//       inRoom: false,\n//     };\n//   }\n\n//   // join = (webrtc) => webrtc.joinRoom('video-chat-room-arbitrary-name');\n//   join = (webrtc) => webrtc.joinRoom(this.state.roomID, (err, desc) => {\n//     this.setState({ inRoom: true });\n//   });\n\n//   handleCreatedPeer = (webrtc, peer) => {\n//     this.setState({ peers: [...this.state.peers, peer] });\n//   }\n\n//   handleRemovedPeer = () => {\n//     this.setState({ peers: this.state.peers.filter(p => !p.closed) });\n//   }\n\n//   generateRemotes = () => this.state.peers.map((peer) => (\n//       <RemoteVideo key={`remote-video-${peer.id}`} peer={peer} />\n//     )\n//   );\n\n//   render () {\n//     return (\n//       <LioWebRTC\n//         options={{ debug: true }}\n//         onReady={this.join}\n//         onCreatedPeer={this.handleCreatedPeer}\n//         onRemovedPeer={this.handleRemovedPeer}\n//       >\n//         <LocalVideo />\n//         {\n//           this.state.peers &&\n//           this.generateRemotes()\n//         }\n//       </LioWebRTC>\n//     )\n//   }\n// }\n\n// export default Party;\nimport React, { Component } from 'react';\nimport { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'\n// import MyComponent from './MyComponent';\n\nclass Party extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      peers: []\n    };\n  }\n\n  join = (webrtc) => webrtc.joinRoom('video-chat-room-arbitrary-name');\n\n  handleCreatedPeer = (webrtc, peer) => {\n    this.setState({ peers: [...this.state.peers, peer] });\n  }\n\n  handleRemovedPeer = () => {\n    this.setState({ peers: this.state.peers.filter(p => !p.closed) });\n  }\n\n  generateRemotes = () => this.state.peers.map((peer) => (\n      <RemoteVideo key={`remote-video-${peer.id}`} peer={peer} />\n    )\n  );\n\n  render () {\n    return (\n      <LioWebRTC\n        options={{ debug: true }}\n        onReady={this.join}\n        onCreatedPeer={this.handleCreatedPeer}\n        onRemovedPeer={this.handleRemovedPeer}\n      >\n        <LocalVideo />\n        {\n          this.state.peers &&\n          this.generateRemotes()\n        }\n      </LioWebRTC>\n    )\n  }\n}\n\nexport default Party;"]},"metadata":{},"sourceType":"module"}