{"ast":null,"code":"/**\n * Extract event handlers for component props\n * @function eventHandlersFor\n * @param {Object} props - Component prop\n * @param {Object} [options={}]\n * @param {string[]} [options.except] - Exception names\n * @returns {Object} Props for html attributes\n */\n'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { SupportedProps } from 'the-component-constants';\nvar handlerNames = [].concat(_toConsumableArray(SupportedProps.mouseEvents.split(',')), _toConsumableArray(SupportedProps.selectionEvents.split(',')), _toConsumableArray(SupportedProps.touchEvents.split(',')), _toConsumableArray(SupportedProps.uiEvents.split(',')), _toConsumableArray(SupportedProps.mediaEvents.split(',')), _toConsumableArray(SupportedProps.imageEvents.split(',')));\n/** @lends eventHandlersFor */\n\nfunction eventHandlersFor(props) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$except = options.except,\n      except = _options$except === void 0 ? [] : _options$except;\n  return Object.keys(props).filter(function (name) {\n    return !except.includes(name);\n  }).filter(function (name) {\n    return handlerNames.includes(name);\n  }).reduce(function (results, name) {\n    return Object.assign(results, _defineProperty({}, name, props[name]));\n  }, {});\n}\n\nexport default eventHandlersFor;","map":null,"metadata":{},"sourceType":"module"}