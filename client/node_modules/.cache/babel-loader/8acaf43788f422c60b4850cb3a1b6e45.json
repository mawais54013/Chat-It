{"ast":null,"code":"import _objectSpread from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js\";\nimport React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\"; // import \"./App.css\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nvar CodingPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CodingPage, _Component);\n\n  function CodingPage() {\n    var _this;\n\n    _classCallCheck(this, CodingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CodingPage).call(this));\n\n    _this.syncUpdates = function () {\n      var data = _objectSpread({}, _this.state); // axios\n      //   .post(\"http://localhost:5000/update-editor/\" + this.state.key, data)\n      //   .then(function (res)\n      //   {\n      //     console.log(res);\n      //   })\n      //   .catch(console.error);\n\n    };\n\n    _this.runCode = function () {\n      var _this$state = _this.state,\n          html = _this$state.html,\n          css = _this$state.css,\n          js = _this$state.js;\n      var iframe = _this.refs.iframe;\n      var document = iframe.contentDocument;\n      var documentContents = \"\\n      <!DOCTYPE html>\\n      <html lang=\\\"en\\\">\\n      <head>\\n        <meta charset=\\\"UTF-8\\\">\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n        <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n        <title>Document</title>\\n        <style>\\n          \".concat(css, \"\\n        </style>\\n      </head>\\n      <body>\\n        \").concat(html, \"\\n\\n        <script type=\\\"text/javascript\\\">\\n          \").concat(js, \"\\n        </script>\\n      </body>\\n      </html>\\n    \");\n      document.open();\n      document.write(documentContents);\n      document.close();\n    };\n\n    _this.state = {\n      id: \"\",\n      html: \"\",\n      css: \"\",\n      js: \"\",\n      key: localStorage.getItem('mainKey')\n    };\n    _this.pusher = new Pusher(\"0309639b3bc0d2427a18\", {\n      cluster: \"us3\",\n      forceTLS: false\n    });\n    _this.channel = _this.pusher.subscribe(_this.state.k);\n    return _this;\n  }\n\n  _createClass(CodingPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.runCode();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.post(\"http://localhost:5000/update-editor/\" + this.state.key, data).then(function (res) {\n        console.log(res);\n      }).catch(console.error);\n      this.setState({\n        id: pushid()\n      });\n      this.channel.bind(\"text-update\", function (data) {\n        var id = _this2.state.id;\n        if (data.id === id) return;\n\n        _this2.setState({\n          html: data.html,\n          css: data.css,\n          js: data.js,\n          name: _this2.state.key\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.id);\n      var _this$state2 = this.state,\n          html = _this$state2.html,\n          js = _this$state2.js,\n          css = _this$state2.css;\n      var codeMirrorOptions = {\n        theme: \"material\",\n        lineNumbers: true,\n        scrollbarStyle: null,\n        lineWrapping: true\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"playground\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"code-editor html-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editor-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"HTML\"), React.createElement(CodeMirror, {\n        value: html,\n        options: _objectSpread({\n          mode: \"htmlmixed\"\n        }, codeMirrorOptions),\n        onBeforeChange: function onBeforeChange(editor, data, html) {\n          _this3.setState({\n            html: html\n          }, function () {\n            return _this3.syncUpdates();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"code-editor css-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editor-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"CSS\"), React.createElement(CodeMirror, {\n        value: css,\n        options: _objectSpread({\n          mode: \"css\"\n        }, codeMirrorOptions),\n        onBeforeChange: function onBeforeChange(editor, data, css) {\n          _this3.setState({\n            css: css\n          }, function () {\n            return _this3.syncUpdates();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"code-editor js-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editor-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"JavaScript\"), React.createElement(CodeMirror, {\n        value: js,\n        options: _objectSpread({\n          mode: \"javascript\"\n        }, codeMirrorOptions),\n        onBeforeChange: function onBeforeChange(editor, data, js) {\n          _this3.setState({\n            js: js\n          }, function () {\n            return _this3.syncUpdates();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: \"result\",\n        className: \"iframe\",\n        ref: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CodingPage;\n}(Component);\n\nexport default CodingPage;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js"],"names":["React","Component","Controlled","CodeMirror","Pusher","pushid","axios","CodingPage","syncUpdates","data","state","runCode","html","css","js","iframe","refs","document","contentDocument","documentContents","open","write","close","id","key","localStorage","getItem","pusher","cluster","forceTLS","channel","subscribe","k","post","then","res","console","log","catch","error","setState","bind","name","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","mode","editor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\n\n// import \"./App.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nclass CodingPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      html: \"\",\n      css: \"\",\n      js: \"\",\n      key: localStorage.getItem('mainKey')\n    };\n\n    this.pusher = new Pusher(\"0309639b3bc0d2427a18\", {\n      cluster: \"us3\",\n      forceTLS: false\n    });\n\n    this.channel = this.pusher.subscribe(this.state.k);\n  }\n\n  componentDidUpdate() {\n    \n    this.runCode();\n  }\n\n  componentDidMount() {\n    axios\n      .post(\"http://localhost:5000/update-editor/\" + this.state.key, data)\n      .then(function (res)\n      {\n        console.log(res);\n      })\n      .catch(console.error);\n    this.setState({\n      id: pushid()\n    });\n\n    this.channel.bind(\"text-update\", data => {\n      const { id } = this.state;\n      if (data.id === id) return;\n\n      this.setState({\n        html: data.html,\n        css: data.css,\n        js: data.js,\n        name: this.state.key\n      });\n    });\n  }\n\n  syncUpdates = () => {\n    const data = { ...this.state };\n\n    // axios\n    //   .post(\"http://localhost:5000/update-editor/\" + this.state.key, data)\n    //   .then(function (res)\n    //   {\n    //     console.log(res);\n    //   })\n    //   .catch(console.error);\n  };\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n\n    console.log(this.state.id)\n    const { html, js, css } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n\n    return (\n      <div className=\"App\">\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"editor-header\">HTML</div>\n            <CodeMirror\n              value={html}\n              options={{\n                mode: \"htmlmixed\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, html) => {\n                this.setState({ html }, () => this.syncUpdates());\n              }}\n            />\n          </div>\n          <div className=\"code-editor css-code\">\n            <div className=\"editor-header\">CSS</div>\n            <CodeMirror\n              value={css}\n              options={{\n                mode: \"css\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, css) => {\n                this.setState({ css }, () => this.syncUpdates());\n              }}\n            />\n          </div>\n          <div className=\"code-editor js-code\">\n            <div className=\"editor-header\">JavaScript</div>\n            <CodeMirror\n              value={js}\n              options={{\n                mode: \"javascript\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, js) => {\n                this.setState({ js }, () => this.syncUpdates());\n              }}\n            />\n          </div>\n        </section>\n        <section className=\"result\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default CodingPage;\n"]},"metadata":{},"sourceType":"module"}