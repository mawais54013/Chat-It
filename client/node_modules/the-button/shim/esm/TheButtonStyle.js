'use strict';

import _extends from "@babel/runtime/helpers/extends";
import c from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { asStyleData } from 'the-component-util';
import { TheStyle } from 'the-style';
/** Style for TheButton */

var TheButtonStyle = function TheButtonStyle(_ref) {
  var className = _ref.className,
      id = _ref.id,
      options = _ref.options;
  return React.createElement(TheStyle, _extends({
    id: id
  }, {
    className: c('the-button-style', className),
    styles: TheButtonStyle.data(options)
  }));
};

TheButtonStyle.displayName = 'TheButtonStyle';
TheButtonStyle.propTypes = {
  /** Style options */
  options: PropTypes.object
};
TheButtonStyle.defaultProps = {
  options: {}
};

TheButtonStyle.data = function (options) {
  var ThemeValues = TheStyle.ThemeValues;
  var _options$backgroundCo = options.backgroundColor,
      backgroundColor = _options$backgroundCo === void 0 ? ThemeValues.backgroundColor : _options$backgroundCo,
      _options$contentWidth = options.contentWidth,
      contentWidth = _options$contentWidth === void 0 ? ThemeValues.contentWidth : _options$contentWidth,
      _options$dangerColor = options.dangerColor,
      dangerColor = _options$dangerColor === void 0 ? '#A33' : _options$dangerColor,
      _options$disabledBack = options.disabledBackgroundColor,
      disabledBackgroundColor = _options$disabledBack === void 0 ? ThemeValues.disabledBackgroundColor : _options$disabledBack,
      _options$disabledText = options.disabledTextColor,
      disabledTextColor = _options$disabledText === void 0 ? ThemeValues.disabledTextColor : _options$disabledText,
      _options$dominantColo = options.dominantColor,
      dominantColor = _options$dominantColo === void 0 ? ThemeValues.dominantColor : _options$dominantColo,
      _options$lightTextCol = options.lightTextColor,
      lightTextColor = _options$lightTextCol === void 0 ? ThemeValues.lightTextColor : _options$lightTextCol,
      _options$overlayBackg = options.overlayBackgroundColor,
      overlayBackgroundColor = _options$overlayBackg === void 0 ? ThemeValues.overlayBackgroundColor : _options$overlayBackg,
      _options$overlayTextC = options.overlayTextColor,
      overlayTextColor = _options$overlayTextC === void 0 ? ThemeValues.overlayTextColor : _options$overlayTextC,
      _options$tappableHeig = options.tappableHeight,
      tappableHeight = _options$tappableHeig === void 0 ? ThemeValues.tappableHeight : _options$tappableHeig;
  return Object.assign({}, asStyleData({
    '.the-button': {
      alignItems: 'center',
      backgroundColor: backgroundColor,
      border: "1px solid",
      borderRadius: '4px',
      boxSizing: 'border-box',
      color: dominantColor,
      cursor: 'pointer',
      display: 'inline-flex',
      flexDirection: 'row',
      justifyContent: 'center',
      margin: '4px',
      maxWidth: contentWidth,
      minHeight: tappableHeight,
      outlineColor: dominantColor,
      padding: '0.5em 1em',
      position: 'relative',
      textAlign: 'center',
      textDecoration: 'none'
    },
    '.the-button-icon': {
      marginLeft: '0',
      marginRight: '2px'
    },
    '.the-button-icon-right': {
      marginLeft: '2px',
      marginRight: '0'
    },
    '.the-button-inner': {
      display: 'inline-block'
    },
    '.the-button-large-icon': {
      display: 'block',
      fontSize: '3em',
      margin: '0'
    },
    '.the-button-spinner': {
      alignItems: 'center',
      backgroundColor: overlayBackgroundColor,
      borderColor: overlayBackgroundColor,
      bottom: 0,
      color: overlayTextColor,
      display: 'flex',
      justifyContent: 'center',
      left: 0,
      overflow: 'hidden',
      position: 'absolute',
      right: 0,
      top: 0,
      zIndex: 1
    },
    '.the-button-text': {
      display: 'inline-block',
      padding: '0 2px'
    },
    '.the-button:active': {
      boxShadow: '1px 2px 2px rgba(0,0,0,0.33) inset'
    },
    '.the-button:hover': {
      opacity: '0.9'
    },
    '.the-button.the-button-danger': {
      backgroundColor: dangerColor,
      border: dangerColor,
      color: 'white'
    },
    '.the-button.the-button-disabled': {
      '&:hover, &:active': {
        boxShadow: 'none',
        cursor: 'default'
      },
      '&.the-button-primary': {
        backgroundColor: disabledBackgroundColor,
        borderColor: disabledTextColor,
        color: disabledTextColor
      },
      backgroundColor: disabledBackgroundColor,
      color: disabledTextColor,
      cursor: 'default',
      pointerEvents: 'none'
    },
    '.the-button.the-button-floated': {
      '&:active': {
        boxShadow: 'none'
      },
      boxShadow: '2px 2px 4px rgba(0,0,0,0.33)'
    },
    '.the-button.the-button-large': {
      fontSize: '2em'
    },
    '.the-button.the-button-light': {
      backgroundColor: 'transparent',
      borderColor: lightTextColor,
      color: lightTextColor
    },
    '.the-button.the-button-primary': {
      backgroundColor: dominantColor,
      borderColor: dominantColor,
      color: backgroundColor
    },
    '.the-button.the-button-rounded': {
      '.the-button-icon': {
        alignItems: 'center',
        bottom: 0,
        display: 'flex',
        fontSize: '3em',
        justifyContent: 'center',
        left: 0,
        opacity: 0.12,
        pointerEvents: 'none',
        position: 'absolute',
        right: 0,
        top: 0,
        zIndex: 0
      },
      '.the-button-spinner': {
        borderRadius: '50%'
      },
      borderRadius: '50%',
      borderWidth: '4px',
      height: '6em',
      width: '6em'
    },
    '.the-button.the-button-simple': {
      '&:active': {
        boxShadow: 'none'
      },
      backgroundColor: 'transparent',
      border: 'none'
    },
    '.the-button.the-button-small': {
      fontSize: 'small',
      minHeight: '12px'
    },
    '.the-button.the-button-vertical': {
      flexDirection: 'column'
    },
    '.the-button.the-button-wide': {
      boxSizing: 'border-box',
      display: 'flex',
      margin: '4px auto',
      width: '100%'
    },
    '.the-button.the-link': {
      display: 'inline-flex',
      padding: '0.5em 1em'
    }
  }), asStyleData({
    '.the-button-group': {
      '.the-button': {
        flexGrow: 1
      },
      alignItems: 'center',
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'center',
      margin: '8px auto',
      maxWidth: contentWidth,
      width: '100%'
    },
    '.the-button-group.the-button-group-collapsed': {
      '.the-button': {
        '&:first-child': {
          borderLeft: 'none',
          margin: '0'
        },
        '&:last-child': {
          borderRight: 'none'
        },
        borderBottom: 'none',
        borderRadius: 0,
        borderRight: 'none',
        margin: '0 -1px 0 0',
        paddingBottom: '1em',
        paddingTop: '1em',
        width: '100%'
      },
      alignItems: 'stretch',
      flexWrap: 'nowrap'
    },
    '.the-button-group.the-button-group-left': {
      justifyContent: 'flex-start'
    },
    '.the-button-group.the-button-group-nowrap': {
      flexWrap: 'nowrap'
    },
    '.the-button-group.the-button-group-right': {
      justifyContent: 'flex-end'
    }
  }));
};

export default TheButtonStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZUJ1dHRvblN0eWxlLmpzIl0sIm5hbWVzIjpbImMiLCJQcm9wVHlwZXMiLCJSZWFjdCIsImFzU3R5bGVEYXRhIiwiVGhlU3R5bGUiLCJUaGVCdXR0b25TdHlsZSIsImNsYXNzTmFtZSIsImlkIiwib3B0aW9ucyIsImRhdGEiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsIm9iamVjdCIsImRlZmF1bHRQcm9wcyIsIlRoZW1lVmFsdWVzIiwiYmFja2dyb3VuZENvbG9yIiwiY29udGVudFdpZHRoIiwiZGFuZ2VyQ29sb3IiLCJkaXNhYmxlZEJhY2tncm91bmRDb2xvciIsImRpc2FibGVkVGV4dENvbG9yIiwiZG9taW5hbnRDb2xvciIsImxpZ2h0VGV4dENvbG9yIiwib3ZlcmxheUJhY2tncm91bmRDb2xvciIsIm92ZXJsYXlUZXh0Q29sb3IiLCJ0YXBwYWJsZUhlaWdodCIsIk9iamVjdCIsImFzc2lnbiIsImFsaWduSXRlbXMiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJib3hTaXppbmciLCJjb2xvciIsImN1cnNvciIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwianVzdGlmeUNvbnRlbnQiLCJtYXJnaW4iLCJtYXhXaWR0aCIsIm1pbkhlaWdodCIsIm91dGxpbmVDb2xvciIsInBhZGRpbmciLCJwb3NpdGlvbiIsInRleHRBbGlnbiIsInRleHREZWNvcmF0aW9uIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwiZm9udFNpemUiLCJib3JkZXJDb2xvciIsImJvdHRvbSIsImxlZnQiLCJvdmVyZmxvdyIsInJpZ2h0IiwidG9wIiwiekluZGV4IiwiYm94U2hhZG93Iiwib3BhY2l0eSIsInBvaW50ZXJFdmVudHMiLCJib3JkZXJXaWR0aCIsImhlaWdodCIsIndpZHRoIiwiZmxleEdyb3ciLCJmbGV4V3JhcCIsImJvcmRlckxlZnQiLCJib3JkZXJSaWdodCIsImJvcmRlckJvdHRvbSIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nVG9wIl0sIm1hcHBp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QUFsQm9DLEtBYnRDO0FBaUNWLCtDQUEyQztBQUN6QzFCLE1BQUFBLGNBQWMsRUFBRTtBQUR5QixLQWpDakM7QUFvQ1YsaURBQTZDO0FBQzNDMEIsTUFBQUEsUUFBUSxFQUFFO0FBRGlDLEtBcENuQztBQXVDVixnREFBNEM7QUFDMUMxQixNQUFBQSxjQUFjLEVBQUU7QUFEMEI7QUF2Q2xDLEdBQUQsQ0F2Sk4sQ0FBUDtBQW1NRCxDQWpORDs7QUFtTkEsZUFBZTlCLGNBQWYiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBjIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBhc1N0eWxlRGF0YSB9IGZyb20gJ3RoZS1jb21wb25lbnQtdXRpbCdcbmltcG9ydCB7IFRoZVN0eWxlIH0gZnJvbSAndGhlLXN0eWxlJ1xuXG4vKiogU3R5bGUgZm9yIFRoZUJ1dHRvbiAqL1xuY29uc3QgVGhlQnV0dG9uU3R5bGUgPSAoeyBjbGFzc05hbWUsIGlkLCBvcHRpb25zIH0pID0+IChcbiAgPFRoZVN0eWxlXG4gICAgey4uLnsgaWQgfX1cbiAgICBjbGFzc05hbWU9e2MoJ3RoZS1idXR0b24tc3R5bGUnLCBjbGFzc05hbWUpfVxuICAgIHN0eWxlcz17VGhlQnV0dG9uU3R5bGUuZGF0YShvcHRpb25zKX1cbiAgLz5cbilcblxuVGhlQnV0dG9uU3R5bGUuZGlzcGxheU5hbWUgPSAnVGhlQnV0dG9uU3R5bGUnXG5UaGVCdXR0b25TdHlsZS5wcm9wVHlwZXMgPSB7XG4gIC8qKiBTdHlsZSBvcHRpb25zICovXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5vYmplY3QsXG59XG5cblRoZUJ1dHRvblN0eWxlLmRlZmF1bHRQcm9wcyA9IHtcbiAgb3B0aW9uczoge30sXG59XG5cblRoZUJ1dHRvblN0eWxlLmRhdGEgPSAob3B0aW9ucykgPT4ge1xuICBjb25zdCB7IFRoZW1lVmFsdWVzIH0gPSBUaGVTdHlsZVxuICBjb25zdCB7XG4gICAgYmFja2dyb3VuZENvbG9yID0gVGhlbWVWYWx1ZXMuYmFja2dyb3VuZENvbG9yLFxuICAgIGNvbnRlbnRXaWR0aCA9IFRoZW1lVmFsdWVzLmNvbnRlbnRXaWR0aCxcbiAgICBkYW5nZXJDb2xvciA9ICcjQTMzJyxcbiAgICBkaXNhYmxlZEJhY2tncm91bmRDb2xvciA9IFRoZW1lVmFsdWVzLmRpc2FibGVkQmFja2dyb3VuZENvbG9yLFxuICAgIGRpc2FibGVkVGV4dENvbG9yID0gVGhlbWVWYWx1ZXMuZGlzYWJsZWRUZXh0Q29sb3IsXG4gICAgZG9taW5hbnRDb2xvciA9IFRoZW1lVmFsdWVzLmRvbWluYW50Q29sb3IsXG4gICAgbGlnaHRUZXh0Q29sb3IgPSBUaGVtZVZhbHVlcy5saWdodFRleHRDb2xvcixcbiAgICBvdmVybGF5QmFja2dyb3VuZENvbG9yID0gVGhlbWVWYWx1ZXMub3ZlcmxheUJhY2tncm91bmRDb2xvcixcbiAgICBvdmVybGF5VGV4dENvbG9yID0gVGhlbWVWYWx1ZXMub3ZlcmxheVRleHRDb2xvcixcbiAgICB0YXBwYWJsZUhlaWdodCA9IFRoZW1lVmFsdWVzLnRhcHBhYmxlSGVpZ2h0LFxuICB9ID0gb3B0aW9uc1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihcbiAgICB7fSxcbiAgICBhc1N0eWxlRGF0YSh7XG4gICAgICAnLnRoZS1idXR0b24nOiB7XG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJhY2tncm91bmRDb2xvcixcbiAgICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkYCxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgIGNvbG9yOiBkb21pbmFudENvbG9yLFxuICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgbWFyZ2luOiAnNHB4JyxcbiAgICAgICAgbWF4V2lkdGg6IGNvbnRlbnRXaWR0aCxcbiAgICAgICAgbWluSGVpZ2h0OiB0YXBwYWJsZUhlaWdodCxcbiAgICAgICAgb3V0bGluZUNvbG9yOiBkb21pbmFudENvbG9yLFxuICAgICAgICBwYWRkaW5nOiAnMC41ZW0gMWVtJyxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLWljb24nOiB7XG4gICAgICAgIG1hcmdpbkxlZnQ6ICcwJyxcbiAgICAgICAgbWFyZ2luUmlnaHQ6ICcycHgnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi1pY29uLXJpZ2h0Jzoge1xuICAgICAgICBtYXJnaW5MZWZ0OiAnMnB4JyxcbiAgICAgICAgbWFyZ2luUmlnaHQ6ICcwJyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24taW5uZXInOiB7XG4gICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi1sYXJnZS1pY29uJzoge1xuICAgICAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgICAgICBmb250U2l6ZTogJzNlbScsXG4gICAgICAgIG1hcmdpbjogJzAnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi1zcGlubmVyJzoge1xuICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBvdmVybGF5QmFja2dyb3VuZENvbG9yLFxuICAgICAgICBib3JkZXJDb2xvcjogb3ZlcmxheUJhY2tncm91bmRDb2xvcixcbiAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICBjb2xvcjogb3ZlcmxheVRleHRDb2xvcixcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIHpJbmRleDogMSxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24tdGV4dCc6IHtcbiAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICAgIHBhZGRpbmc6ICcwIDJweCcsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uOmFjdGl2ZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiAnMXB4IDJweCAycHggcmdiYSgwLDAsMCwwLjMzKSBpbnNldCcsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uOmhvdmVyJzoge1xuICAgICAgICBvcGFjaXR5OiAnMC45JyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi1kYW5nZXInOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogZGFuZ2VyQ29sb3IsXG4gICAgICAgIGJvcmRlcjogZGFuZ2VyQ29sb3IsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi50aGUtYnV0dG9uLWRpc2FibGVkJzoge1xuICAgICAgICAnJjpob3ZlciwgJjphY3RpdmUnOiB7XG4gICAgICAgICAgYm94U2hhZG93OiAnbm9uZScsXG4gICAgICAgICAgY3Vyc29yOiAnZGVmYXVsdCcsXG4gICAgICAgIH0sXG4gICAgICAgICcmLnRoZS1idXR0b24tcHJpbWFyeSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGRpc2FibGVkQmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBkaXNhYmxlZFRleHRDb2xvcixcbiAgICAgICAgICBjb2xvcjogZGlzYWJsZWRUZXh0Q29sb3IsXG4gICAgICAgIH0sXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogZGlzYWJsZWRCYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIGNvbG9yOiBkaXNhYmxlZFRleHRDb2xvcixcbiAgICAgICAgY3Vyc29yOiAnZGVmYXVsdCcsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi1mbG9hdGVkJzoge1xuICAgICAgICAnJjphY3RpdmUnOiB7XG4gICAgICAgICAgYm94U2hhZG93OiAnbm9uZScsXG4gICAgICAgIH0sXG4gICAgICAgIGJveFNoYWRvdzogJzJweCAycHggNHB4IHJnYmEoMCwwLDAsMC4zMyknLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi50aGUtYnV0dG9uLWxhcmdlJzoge1xuICAgICAgICBmb250U2l6ZTogJzJlbScsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLnRoZS1idXR0b24tbGlnaHQnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgICAgYm9yZGVyQ29sb3I6IGxpZ2h0VGV4dENvbG9yLFxuICAgICAgICBjb2xvcjogbGlnaHRUZXh0Q29sb3IsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLnRoZS1idXR0b24tcHJpbWFyeSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBkb21pbmFudENvbG9yLFxuICAgICAgICBib3JkZXJDb2xvcjogZG9taW5hbnRDb2xvcixcbiAgICAgICAgY29sb3I6IGJhY2tncm91bmRDb2xvcixcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi1yb3VuZGVkJzoge1xuICAgICAgICAnLnRoZS1idXR0b24taWNvbic6IHtcbiAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICBib3R0b206IDAsXG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGZvbnRTaXplOiAnM2VtJyxcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICBvcGFjaXR5OiAwLjEyLFxuICAgICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgekluZGV4OiAwLFxuICAgICAgICB9LFxuICAgICAgICAnLnRoZS1idXR0b24tc3Bpbm5lcic6IHtcbiAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1MCUnLFxuICAgICAgICB9LFxuICAgICAgICBib3JkZXJSYWRpdXM6ICc1MCUnLFxuICAgICAgICBib3JkZXJXaWR0aDogJzRweCcsXG4gICAgICAgIGhlaWdodDogJzZlbScsXG4gICAgICAgIHdpZHRoOiAnNmVtJyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi1zaW1wbGUnOiB7XG4gICAgICAgICcmOmFjdGl2ZSc6IHtcbiAgICAgICAgICBib3hTaGFkb3c6ICdub25lJyxcbiAgICAgICAgfSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi1zbWFsbCc6IHtcbiAgICAgICAgZm9udFNpemU6ICdzbWFsbCcsXG4gICAgICAgIG1pbkhlaWdodDogJzEycHgnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi50aGUtYnV0dG9uLXZlcnRpY2FsJzoge1xuICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgIH0sXG4gICAgICAnLnRoZS1idXR0b24udGhlLWJ1dHRvbi13aWRlJzoge1xuICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBtYXJnaW46ICc0cHggYXV0bycsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLnRoZS1saW5rJzoge1xuICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLFxuICAgICAgICBwYWRkaW5nOiAnMC41ZW0gMWVtJyxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgYXNTdHlsZURhdGEoe1xuICAgICAgJy50aGUtYnV0dG9uLWdyb3VwJzoge1xuICAgICAgICAnLnRoZS1idXR0b24nOiB7XG4gICAgICAgICAgZmxleEdyb3c6IDEsXG4gICAgICAgIH0sXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgbWFyZ2luOiAnOHB4IGF1dG8nLFxuICAgICAgICBtYXhXaWR0aDogY29udGVudFdpZHRoLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi1ncm91cC50aGUtYnV0dG9uLWdyb3VwLWNvbGxhcHNlZCc6IHtcbiAgICAgICAgJy50aGUtYnV0dG9uJzoge1xuICAgICAgICAgICcmOmZpcnN0LWNoaWxkJzoge1xuICAgICAgICAgICAgYm9yZGVyTGVmdDogJ25vbmUnLFxuICAgICAgICAgICAgbWFyZ2luOiAnMCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnJjpsYXN0LWNoaWxkJzoge1xuICAgICAgICAgICAgYm9yZGVyUmlnaHQ6ICdub25lJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvcmRlckJvdHRvbTogJ25vbmUnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogMCxcbiAgICAgICAgICBib3JkZXJSaWdodDogJ25vbmUnLFxuICAgICAgICAgIG1hcmdpbjogJzAgLTFweCAwIDAnLFxuICAgICAgICAgIHBhZGRpbmdCb3R0b206ICcxZW0nLFxuICAgICAgICAgIHBhZGRpbmdUb3A6ICcxZW0nLFxuICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIH0sXG4gICAgICAgIGFsaWduSXRlbXM6ICdzdHJldGNoJyxcbiAgICAgICAgZmxleFdyYXA6ICdub3dyYXAnLFxuICAgICAgfSxcbiAgICAgICcudGhlLWJ1dHRvbi1ncm91cC50aGUtYnV0dG9uLWdyb3VwLWxlZnQnOiB7XG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLWdyb3VwLnRoZS1idXR0b24tZ3JvdXAtbm93cmFwJzoge1xuICAgICAgICBmbGV4V3JhcDogJ25vd3JhcCcsXG4gICAgICB9LFxuICAgICAgJy50aGUtYnV0dG9uLWdyb3VwLnRoZS1idXR0b24tZ3JvdXAtcmlnaHQnOiB7XG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgICAgfSxcbiAgICB9KSxcbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVCdXR0b25TdHlsZVxuIl19