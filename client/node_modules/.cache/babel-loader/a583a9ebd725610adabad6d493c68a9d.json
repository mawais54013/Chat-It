{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js\";\n// import React, { Component } from \"react\";\n// import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// // import io from 'socket.io-client'\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n// class CodingPage extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       html: \"\",\n//       js: \"\",\n//     };\n//   }\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n//   syncUpdates = () => {\n//     const data = { ...this.state };    \n//   };\n//   runCode = () => {\n//     const { html, js } = this.state;\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//       </head>\n//       <body>\n//         ${html}\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n//   render() {\n//     console.log(this.state.key1)\n//     const { html, js } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n//     return (\n//       <div className=\"App\">\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"editor-header\">HTML</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//         </section>\n//         <section className=\"result\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n// export default CodingPage;\nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\";\nimport \"./coding.css\";\n\nrequire(\"codemirror/lib/codemirror.css\");\n\nrequire(\"codemirror/mode/htmlmixed/htmlmixed\");\n\nrequire(\"codemirror/mode/javascript/javascript\");\n\nrequire(\"codemirror/theme/dracula.css\");\n\nvar CodingPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CodingPage, _React$Component);\n\n  function CodingPage() {\n    var _this;\n\n    _classCallCheck(this, CodingPage);\n\n    _this.state = {\n      html: '',\n      js: ''\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(CodingPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.runCode();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          html = _this$state.html,\n          js = _this$state.js;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          background: \"#1d1f27\"\n        },\n        extras: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, this.state.createdon ? \"Created On: \".concat(this.state.createdon) : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"coding-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"codeArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(CodeMirror, {\n        ref: function ref(r) {\n          return _this2.codemirror = r;\n        },\n        className: \"code-mirror-container\",\n        value: this.state.code // value={js}\n        ,\n        onChange: this.onChange,\n        options: {\n          theme: \"dracula\",\n          lineNumbers: true,\n          readOnly: false,\n          mode: \"javascript\"\n        } // onBeforeChange={(editor, data, js) => {\n        //   this.setState({ js }, () => this.syncUpdates());\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(CodeMirror, {\n        value: this.state.code1 // value={html}\n        ,\n        options: {\n          mode: 'htmlmixed',\n          theme: 'dracula',\n          lineNumbers: true,\n          readOnly: false\n        } // onBeforeChange={(editor, data, html) => {\n        //   this.setState({ html }, () => this.syncUpdates());\n        // }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"result\",\n        id: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: \"result\",\n        className: \"iframe\",\n        ref: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CodingPage;\n}(React.Component);\n\nexport { CodingPage as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js"],"names":["React","Header","database","CodeMirror","require","CodingPage","state","html","js","runCode","background","createdon","r","codemirror","code","onChange","theme","lineNumbers","readOnly","mode","code1","Component"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,cAAP;;AAEAC,OAAO,CAAC,+BAAD,CAAP;;AACAA,OAAO,CAAC,qCAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AACAA,OAAO,CAAC,8BAAD,CAAP;;IAEqBC,U;;;;;AACnB,wBAAc;AAAA;;AAAA;;AACZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,EAAE,EAAE;AAFO,KAAb;AADY;AAKb;;;;yCAwDkB;AACnB,WAAKC,OAAL;AACD;;;6BAmCU;AAAA;;AAAA,wBACc,KAAKH,KADnB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,EADP,eACOA,EADP;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKJ,KAAL,CAAWK,SAAX,yBACkB,KAAKL,KAAL,CAAWK,SAD7B,IAEG,EAHN,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,iBAAK,MAAI,CAACC,UAAL,GAAkBD,CAAvB;AAAA,SADR;AAEE,QAAA,SAAS,EAAC,uBAFZ;AAGE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ,IAHpB,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAE,KAAKC,QALjB;AAME,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE,SADA;AAEPC,UAAAA,WAAW,EAAE,IAFN;AAGPC,UAAAA,QAAQ,EAAE,KAHH;AAIPC,UAAAA,IAAI,EAAE;AAJC,SANX,CAYE;AACA;AACA;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,KADpB,CAEE;AAFF;AAGE,QAAA,OAAO,EAAE;AACPD,UAAAA,IAAI,EAAE,WADC;AAEPH,UAAAA,KAAK,EAAE,SAFA;AAGPC,UAAAA,WAAW,EAAE,IAHN;AAIPC,UAAAA,QAAQ,EAAE;AAJH,SAHX,CASI;AACA;AACA;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAnBF,EAkCA;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,SAAS,EAAC,QAAjC;AAA0C,QAAA,GAAG,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlCA,CAXF,CADF;AAoDD;;;;EA1JqClB,KAAK,CAACqB,S;;SAAzBhB,U","sourcesContent":["// import React, { Component } from \"react\";\n// import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// // import io from 'socket.io-client'\n\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n\n\n// class CodingPage extends Component {\n//   constructor() {\n\n\n//     super();\n//     this.state = {\n//       html: \"\",\n//       js: \"\",\n//     };\n//   }\n\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n\n//   syncUpdates = () => {\n//     const data = { ...this.state };    \n//   };\n\n//   runCode = () => {\n//     const { html, js } = this.state;\n\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//       </head>\n//       <body>\n//         ${html}\n\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n\n//   render() {\n\n//     console.log(this.state.key1)\n//     const { html, js } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n\n//     return (\n//       <div className=\"App\">\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"editor-header\">HTML</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//         </section>\n//         <section className=\"result\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default CodingPage;\n\n\n    \nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\";\nimport \"./coding.css\";\n\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/mode/htmlmixed/htmlmixed\");\nrequire(\"codemirror/mode/javascript/javascript\");\nrequire(\"codemirror/theme/dracula.css\");\n\nexport default class CodingPage extends React.Component {\n  constructor() {\n    this.state = {\n      html: '',\n      js: '',\n    };\n  }\n\n  state = {\n    code: \"Loading...\",\n    code1: `<h1 id='demo'></h1>`,\n    cursorPosition: {\n      line: 0,\n      ch: 0\n    }\n  };\n  componentDidMount = () => {\n\n    const { params } = this.props.match;\n    let self = this;\n    database()\n      .ref(\"/code-sessions/\" + params.sessionid)\n      .once(\"value\")\n      .then(snapshot => {\n        self.setState({ code: snapshot.val().content + \"\", createdon: snapshot.val().createdon }, () => {\n          let content = snapshot.val().content;\n\n          self.codemirror.getCodeMirror().setValue(content);\n        });\n        this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n        this.codeRef.on(\"value\", function(snapshot) {\n          self.setState({\n            code: snapshot.val().content\n          });\n          var currentCursorPos = self.state.cursorPosition;\n          self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n          self.setState({ cursorPosition: currentCursorPos });\n          self.changeCursorPos();\n        });\n      })\n      .catch(e => {\n        self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n      });\n  };\n  changeCursorPos = () => {\n    const { line, ch } = this.state.cursorPosition;\n    this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n  };\n  onChange = (newVal, change) => {\n    // console.log(newVal, change);\n    this.setState(\n      {\n        cursorPosition: {\n          line: this.codemirror.getCodeMirror().doc.getCursor().line,\n          ch: this.codemirror.getCodeMirror().doc.getCursor().ch\n        }\n      },\n      () => {}\n    );\n    this.codeRef.child(\"content\").set(newVal);\n  };\n\ncomponentDidUpdate() {\n  this.runCode();\n}\n\nsyncUpdates = () => {\n  const data = { ...this.state }; \n};\n\nrunCode = () => {\n  const { js, html } = this.state;\n\n  const iframe = this.refs.iframe;\n  const document = iframe.contentDocument;\n  const documentContents = `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n      <title>Document</title>\n    </head>\n    <body>\n      ${html}\n\n      <script type=\"text/javascript\">\n        ${js}\n      </script>\n    </body>\n    </html>\n  `;\n\n  document.open();\n  document.write(documentContents);\n  document.close();\n};\n\n  render() {\n    const { html, js } = this.state;\n\n    return (\n      <React.Fragment>\n        <Header\n          style={{ background: \"#1d1f27\" }}\n          extras={\n            <div>\n              {this.state.createdon\n                ? `Created On: ${this.state.createdon}`\n                : \"\"}\n            </div>\n          }\n        />\n        <div className=\"coding-page\">\n        <div className=\"codeArea\">\n          <CodeMirror\n            ref={r => (this.codemirror = r)}\n            className=\"code-mirror-container\"\n            value={this.state.code}\n            // value={js}\n            onChange={this.onChange}\n            options={{\n              theme: \"dracula\",\n              lineNumbers: true,\n              readOnly: false,\n              mode: \"javascript\"\n            }}\n            // onBeforeChange={(editor, data, js) => {\n            //   this.setState({ js }, () => this.syncUpdates());\n            // }}\n          />\n          </div>\n          <div>\n          <CodeMirror\n            value={this.state.code1}\n            // value={html}\n            options={{\n              mode: 'htmlmixed',\n              theme: 'dracula',\n              lineNumbers: true,\n              readOnly: false,\n            }}\n              // onBeforeChange={(editor, data, html) => {\n              //   this.setState({ html }, () => this.syncUpdates());\n              // }}\n          />\n          </div>\n        <section className=\"result\" id=\"iframe\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}