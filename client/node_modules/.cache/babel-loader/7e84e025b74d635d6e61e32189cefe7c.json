{"ast":null,"code":"/**\n * Handle toggle online/offline\n * @function line\n * @param {function} handler - Event handler\n * @param {Object} [options={}] - Optional settings\n * @param {number} [options.delay=100] Delay for callback\n */\n'use strict';\n\nimport debug from 'debug';\nimport get from './get';\n/** @lends line */\n\nfunction line(handler) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$delay = options.delay,\n      delay = _options$delay === void 0 ? 100 : _options$delay;\n  var window = get('window');\n\n  if (!window) {\n    return;\n  }\n\n  var handlerWrap = function handlerWrap(connected) {\n    debug('onLine', connected);\n    clearTimeout(handlerWrap._handleCallTimer);\n    handlerWrap._handleCallTimer = setTimeout(function () {\n      handler(connected);\n    }, delay);\n  };\n\n  window.addEventListener('offline', function () {\n    return handlerWrap(false);\n  });\n  window.addEventListener('online', function () {\n    return handlerWrap(true);\n  });\n  handlerWrap(get('navigator.onLine'));\n}\n\nexport default line;","map":null,"metadata":{},"sourceType":"module"}