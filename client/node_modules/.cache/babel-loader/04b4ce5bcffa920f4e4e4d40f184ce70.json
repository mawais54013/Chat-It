{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js\";\n// import React, { Component } from \"react\";\n// import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// import io from 'socket.io-client'\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n// class CodingPage extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       id: \"\",\n//       html: \"\",\n//       css: \"\",\n//       js: \"\",\n//       key1: localStorage.getItem('mainKey'),\n//       key: sessionStorage.getItem(\"mainKey\")\n//     };\n//     this.pusher = new Pusher(\"0309639b3bc0d2427a18\", {\n//       cluster: \"us3\",\n//       forceTLS: false\n//     });\n//     this.channel = this.pusher.subscribe(`1`);\n//   }\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       id: pushid()\n//     });\n//     this.channel.bind(`${this.state.key1}`, data => {\n//       const { id } = this.state;\n//       if (data.id === id) return;\n//       this.setState({\n//         html: data.html,\n//         css: data.css,\n//         js: data.js,\n//         name: this.state.key\n//       });\n//     });\n//   }\n// syncUpdates = () => {\n//   const data = { ...this.state };\n//   // axios\n//   //   .post(\"http://localhost:5000/update-editor/\" + `${this.state.key1}`, data)\n//   //   .then(function (res)\n//   //   {\n//   //     console.log(res);\n//   //   })\n//   //   .catch(console.error);\n// };\n// runCode = () => {\n//   const { html, css, js } = this.state;\n//   const iframe = this.refs.iframe;\n//   const document = iframe.contentDocument;\n//   const documentContents = `\n//     <!DOCTYPE html>\n//     <html lang=\"en\">\n//     <head>\n//       <meta charset=\"UTF-8\">\n//       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//       <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//       <title>Document</title>\n//       <style>\n//         ${css}\n//       </style>\n//     </head>\n//     <body>\n//       ${html}\n//       <script type=\"text/javascript\">\n//         ${js}\n//       </script>\n//     </body>\n//     </html>\n//   `;\n//   document.open();\n//   document.write(documentContents);\n//   document.close();\n// };\n// render() {\n//   console.log(this.state.key1)\n//   const { html, js, css } = this.state;\n//   const codeMirrorOptions = {\n//     theme: \"material\",\n//     lineNumbers: true,\n//     scrollbarStyle: null,\n//     lineWrapping: true\n//   };\n//   return (\n//     <div className=\"App\">\n//       <section className=\"playground\">\n// <div className=\"code-editor html-code\">\n//   <div className=\"editor-header\">HTML</div>\n//   <CodeMirror\n//     value={html}\n//     options={{\n//       mode: \"htmlmixed\",\n//       ...codeMirrorOptions\n//     }}\n//     onBeforeChange={(editor, data, html) => {\n//       this.setState({ html }, () => this.syncUpdates());\n//     }}\n//   />\n// </div>\n// <div className=\"code-editor css-code\">\n//   <div className=\"editor-header\">CSS</div>\n//   <CodeMirror\n//     value={css}\n//     options={{\n//       mode: \"css\",\n//       ...codeMirrorOptions\n//     }}\n//     onBeforeChange={(editor, data, css) => {\n//       this.setState({ css }, () => this.syncUpdates());\n//     }}\n//   />\n// </div>\n// <div className=\"code-editor js-code\">\n//   <div className=\"editor-header\">JavaScript</div>\n//   <CodeMirror\n//     value={js}\n//     options={{\n//       mode: \"javascript\",\n//       ...codeMirrorOptions\n//     }}\n//     onBeforeChange={(editor, data, js) => {\n//       this.setState({ js }, () => this.syncUpdates());\n//     }}\n//   />\n// </div>\n//       </section>\n//       <section className=\"result\">\n//         <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//       </section>\n//     </div>\n//   );\n// }\n// }\n// export default CodingPage;\nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\";\nimport axios from \"axios\";\nimport \"./\"; // import { Controlled as CodeMirror } from \"react-codemirror2\";\n\nrequire(\"codemirror/lib/codemirror.css\");\n\nrequire(\"codemirror/mode/javascript/javascript\");\n\nrequire(\"codemirror/theme/dracula.css\");\n\nvar CodingPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CodingPage, _React$Component);\n\n  function CodingPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CodingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CodingPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"Loading...\",\n      cursorPosition: {\n        line: 0,\n        ch: 0\n      }\n    };\n\n    _this.componentDidMount = function () {\n      var params = _this.props.match.params;\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      database().ref(\"/code-sessions/\" + params.sessionid).once(\"value\").then(function (snapshot) {\n        self.setState({\n          code: snapshot.val().content + \"\",\n          createdon: snapshot.val().createdon\n        }, function () {\n          var content = snapshot.val().content;\n          self.codemirror.getCodeMirror().setValue(content);\n        });\n        _this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n\n        _this.codeRef.on(\"value\", function (snapshot) {\n          self.setState({\n            code: snapshot.val().content\n          });\n          var currentCursorPos = self.state.cursorPosition;\n          self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n          self.setState({\n            cursorPosition: currentCursorPos\n          });\n          self.changeCursorPos();\n        });\n      }).catch(function (e) {\n        self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n      });\n    };\n\n    _this.changeCursorPos = function () {\n      var _this$state$cursorPos = _this.state.cursorPosition,\n          line = _this$state$cursorPos.line,\n          ch = _this$state$cursorPos.ch;\n\n      _this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n    };\n\n    _this.onChange = function (newVal, change) {\n      // console.log(newVal, change);\n      _this.setState({\n        cursorPosition: {\n          line: _this.codemirror.getCodeMirror().doc.getCursor().line,\n          ch: _this.codemirror.getCodeMirror().doc.getCursor().ch\n        }\n      }, function () {});\n\n      _this.codeRef.child(\"content\").set(newVal);\n    };\n\n    return _this;\n  }\n\n  _createClass(CodingPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hCode = this.state.code;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          background: \"#1d1f27\"\n        },\n        extras: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, this.state.createdon ? \"Created On: \".concat(this.state.createdon) : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"coding-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(CodeMirror, {\n        ref: function ref(r) {\n          return _this2.codemirror = r;\n        },\n        className: \"code-mirror-container\",\n        value: this.state.code,\n        onChange: this.onChange,\n        options: {\n          theme: \"dracula\",\n          lineNumbers: true,\n          readOnly: false,\n          mode: \"html\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"iframe\", {\n        id: \"iframe\",\n        srcDoc: hCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Your browser does not support iframes.\"))));\n    }\n  }]);\n\n  return CodingPage;\n}(React.Component);\n\nexport { CodingPage as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js"],"names":["React","Header","database","CodeMirror","axios","require","CodingPage","state","code","cursorPosition","line","ch","componentDidMount","params","props","match","self","ref","sessionid","once","then","snapshot","setState","val","content","createdon","codemirror","getCodeMirror","setValue","codeRef","on","currentCursorPos","changeCursorPos","catch","e","doc","setCursor","onChange","newVal","change","getCursor","child","set","hCode","background","r","theme","lineNumbers","readOnly","mode","Component"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAP,C,CACA;;AAEAC,OAAO,CAAC,+BAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AACAA,OAAO,CAAC,8BAAD,CAAP;;IAEqBC,U;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,YADA;AAENC,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAE,CADQ;AAEdC,QAAAA,EAAE,EAAE;AAFU;AAFV,K;;UAORC,iB,GAAoB,YAAM;AAAA,UAEhBC,MAFgB,GAEL,MAAKC,KAAL,CAAWC,KAFN,CAEh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","sourcesContent":["// import React, { Component } from \"react\";\n// import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// import io from 'socket.io-client'\n\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n\n\n// class CodingPage extends Component {\n//   constructor() {\n\n\n//     super();\n//     this.state = {\n//       id: \"\",\n//       html: \"\",\n//       css: \"\",\n//       js: \"\",\n//       key1: localStorage.getItem('mainKey'),\n//       key: sessionStorage.getItem(\"mainKey\")\n//     };\n\n//     this.pusher = new Pusher(\"0309639b3bc0d2427a18\", {\n//       cluster: \"us3\",\n//       forceTLS: false\n//     });\n\n//     this.channel = this.pusher.subscribe(`1`);\n//   }\n\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n\n//   componentDidMount() {\n//     this.setState({\n//       id: pushid()\n//     });\n\n//     this.channel.bind(`${this.state.key1}`, data => {\n//       const { id } = this.state;\n//       if (data.id === id) return;\n\n//       this.setState({\n//         html: data.html,\n//         css: data.css,\n//         js: data.js,\n//         name: this.state.key\n//       });\n//     });\n//   }\n\n  // syncUpdates = () => {\n  //   const data = { ...this.state };\n\n  //   // axios\n  //   //   .post(\"http://localhost:5000/update-editor/\" + `${this.state.key1}`, data)\n\n  //   //   .then(function (res)\n  //   //   {\n  //   //     console.log(res);\n  //   //   })\n  //   //   .catch(console.error);\n      \n  // };\n\n  // runCode = () => {\n  //   const { html, css, js } = this.state;\n\n  //   const iframe = this.refs.iframe;\n  //   const document = iframe.contentDocument;\n  //   const documentContents = `\n  //     <!DOCTYPE html>\n  //     <html lang=\"en\">\n  //     <head>\n  //       <meta charset=\"UTF-8\">\n  //       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  //       <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  //       <title>Document</title>\n  //       <style>\n  //         ${css}\n  //       </style>\n  //     </head>\n  //     <body>\n  //       ${html}\n\n  //       <script type=\"text/javascript\">\n  //         ${js}\n  //       </script>\n  //     </body>\n  //     </html>\n  //   `;\n\n  //   document.open();\n  //   document.write(documentContents);\n  //   document.close();\n  // };\n\n  // render() {\n\n  //   console.log(this.state.key1)\n  //   const { html, js, css } = this.state;\n  //   const codeMirrorOptions = {\n  //     theme: \"material\",\n  //     lineNumbers: true,\n  //     scrollbarStyle: null,\n  //     lineWrapping: true\n  //   };\n\n  //   return (\n  //     <div className=\"App\">\n  //       <section className=\"playground\">\n          // <div className=\"code-editor html-code\">\n          //   <div className=\"editor-header\">HTML</div>\n          //   <CodeMirror\n          //     value={html}\n          //     options={{\n          //       mode: \"htmlmixed\",\n          //       ...codeMirrorOptions\n          //     }}\n          //     onBeforeChange={(editor, data, html) => {\n          //       this.setState({ html }, () => this.syncUpdates());\n          //     }}\n          //   />\n          // </div>\n          // <div className=\"code-editor css-code\">\n          //   <div className=\"editor-header\">CSS</div>\n          //   <CodeMirror\n          //     value={css}\n          //     options={{\n          //       mode: \"css\",\n          //       ...codeMirrorOptions\n          //     }}\n          //     onBeforeChange={(editor, data, css) => {\n          //       this.setState({ css }, () => this.syncUpdates());\n          //     }}\n          //   />\n          // </div>\n          // <div className=\"code-editor js-code\">\n          //   <div className=\"editor-header\">JavaScript</div>\n          //   <CodeMirror\n          //     value={js}\n          //     options={{\n          //       mode: \"javascript\",\n          //       ...codeMirrorOptions\n          //     }}\n          //     onBeforeChange={(editor, data, js) => {\n          //       this.setState({ js }, () => this.syncUpdates());\n          //     }}\n          //   />\n          // </div>\n  //       </section>\n  //       <section className=\"result\">\n  //         <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n  //       </section>\n  //     </div>\n  //   );\n  // }\n// }\n\n// export default CodingPage;\n\n\n    \nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\";\nimport axios from \"axios\";\nimport \"./\";\n// import { Controlled as CodeMirror } from \"react-codemirror2\";\n\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/mode/javascript/javascript\");\nrequire(\"codemirror/theme/dracula.css\");\n\nexport default class CodingPage extends React.Component {\n  state = {\n    code: \"Loading...\",\n    cursorPosition: {\n      line: 0,\n      ch: 0\n    }\n  };\n  componentDidMount = () => {\n\n    const { params } = this.props.match;\n    let self = this;\n    database()\n      .ref(\"/code-sessions/\" + params.sessionid)\n      .once(\"value\")\n      .then(snapshot => {\n        self.setState({ code: snapshot.val().content + \"\", createdon: snapshot.val().createdon }, () => {\n          let content = snapshot.val().content;\n\n          self.codemirror.getCodeMirror().setValue(content);\n        });\n        this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n        this.codeRef.on(\"value\", function(snapshot) {\n          self.setState({\n            code: snapshot.val().content\n          });\n          var currentCursorPos = self.state.cursorPosition;\n          self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n          self.setState({ cursorPosition: currentCursorPos });\n          self.changeCursorPos();\n        });\n      })\n      .catch(e => {\n        self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n      });\n  };\n  changeCursorPos = () => {\n    const { line, ch } = this.state.cursorPosition;\n    this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n  };\n  onChange = (newVal, change) => {\n    // console.log(newVal, change);\n    this.setState(\n      {\n        cursorPosition: {\n          line: this.codemirror.getCodeMirror().doc.getCursor().line,\n          ch: this.codemirror.getCodeMirror().doc.getCursor().ch\n        }\n      },\n      () => {}\n    );\n    this.codeRef.child(\"content\").set(newVal);\n  };\n\n\n  render() {\n    const hCode = this.state.code;\n    return (\n      <React.Fragment>\n        <Header\n          style={{ background: \"#1d1f27\" }}\n          extras={\n            <div>\n              {this.state.createdon\n                ? `Created On: ${this.state.createdon}`\n                : \"\"}\n            </div>\n          }\n        />\n        <div className=\"coding-page\">\n          <CodeMirror\n            ref={r => (this.codemirror = r)}\n            className=\"code-mirror-container\"\n            value={this.state.code}\n            onChange={this.onChange}\n            options={{\n              theme: \"dracula\",\n              lineNumbers: true,\n              readOnly: false,\n              mode: \"html\"\n            }}\n          />\n          <iframe id=\"iframe\" srcDoc={hCode}>\n          <p>Your browser does not support iframes.</p>\n        </iframe>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}