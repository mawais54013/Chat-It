{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport c from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { htmlAttributesFor } from 'the-component-util';\nimport TheIconStyle from './TheIconStyle';\n/**\n * Icon of the-components\n */\n\nvar TheIcon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TheIcon, _React$Component);\n\n  function TheIcon() {\n    _classCallCheck(this, TheIcon);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TheIcon).apply(this, arguments));\n  }\n\n  _createClass(TheIcon, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var children = props.children,\n          className = props.className;\n      return React.createElement(\"i\", _extends({}, htmlAttributesFor(props, {\n        except: ['className']\n      }), {\n        \"aria-hidden\": true,\n        className: c('the-icon', className)\n      }), children);\n    }\n  }], [{\n    key: \"Spin\",\n    value: function Spin(props) {\n      var className = props.className,\n          theme = props.theme;\n      var icon = TheIcon.SpinIconThemes[theme] || TheIcon.SPIN_ICON;\n      return React.createElement(TheIcon, _extends({}, props, {\n        className: c('the-icon-spin', className, icon)\n      }));\n    }\n  }]);\n\n  return TheIcon;\n}(React.Component);\n\nTheIcon.CDN_URL = 'https://use.fontawesome.com/releases/v5.0.3/css/all.css';\nTheIcon.SpinIconThemes = {\n  A: 'fas fa-spin fa-spinner',\n  B: 'fas fa-spin fa-circle-notch',\n  C: 'fas fa-spin fa-sync',\n  D: 'fas fa-spin fa-cog',\n  E: 'fas fa-spin fa-sun',\n  F: 'fas fa-spin fa-snowflake'\n};\nTheIcon.SPIN_ICON = TheIcon.SpinIconThemes.A;\n\nTheIcon.CdnLink = function (_ref) {\n  var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? TheIcon.CDN_URL : _ref$url;\n  return React.createElement(\"link\", {\n    href: url,\n    rel: \"stylesheet\"\n  });\n};\n\nTheIcon.Style = TheIconStyle;\nTheIcon.propTypes = {};\nTheIcon.defaultProps = {\n  type: null\n};\nTheIcon.displayName = 'TheIcon';\nexport default TheIcon;","map":null,"metadata":{},"sourceType":"module"}