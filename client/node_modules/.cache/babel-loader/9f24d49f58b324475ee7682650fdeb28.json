{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js\";\n// import React, { Component } from 'react';\n// class Chat extends Component {\n//     render() {\n//         var output = PUBNUB.$('output');\n//         var input = PUBNUB.$('input'); \n//         var button = PUBNUB.$('button');\n//         var avatar = PUBNUB.$('avatar');\n//         var presence = PUBNUB.$('presence');\n//         var channel = '1';\n//         avatar.className = 'face-' + ((Math.random() * 13 + 1) >>> 0) + ' color-' + ((Math.random() * 10 + 1) >>> 0);\n//         var p = PUBNUB.init({\n//             subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n//         // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n//             publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n//         });\n//         p.subscribe({\n//             channel: channel,\n//             callback: function(m) {\n//                 output.innerHTML = '<p><i class=\"' + m.avatar + '\"></i><span>' +  m.text.replace( /[<>]/ig, '' ) + '</span></p>' + output.innerHTML; \n//             },\n//             presence: function(m){\n//                 if(m.occupancy > 1) {\n//                     presence.textContent = m.occupancy + ' people online';\n//                 }\n//             }\n//         });\n//         p.bind('keyup', input, function(e) {\n//             (e.keyCode || e.charCode) === 13 && publish()\n//         });\n//         p.bind('click', button, publish);\n//         function publish() {\n//             p.publish({\n//                 channel : channel, \n//                 message : {avatar: avatar.className, text: input.value}, \n//                 x : (input.value='')\n//             });\n//         }\n//         return (\n// <div>\n//     <h3>Chat With Others Here</h3>\n//     <section id=\"main\" role=\"main\">\n//         <div id=\"chat\">\n//             <i id=\"avatar\" class=\"face12\"><input type=\"text\" id=\"input\" placeholder=\"Type your message...\"></input></i>\n//         </div>\n//         <button id=\"button\">\n//             Send Message\n//         </button>\n//         <p id=\"presence\"></p>\n//         <div id=\"output\"></div>\n//     </section>\n// </div>\n//         )\n//     }\n// }\n// export default Chat;\nimport React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.pubnub = new PubNubReact({\n      publishKey: 'YOUR PUBLISH KEY',\n      subscribeKey: 'YOUR SUBSCRIBE KEY'\n    });\n\n    _this.pubnub.init(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.pubnub.subscribe({\n        channels: ['channel1'],\n        withPresence: true\n      });\n      this.pubnub.getMessage('channel1', function (msg) {\n        console.log(msg);\n      });\n      this.pubnub.getStatus(function (st) {\n        console.log(st);\n\n        _this2.pubnub.publish({\n          message: 'hello world from react',\n          channel: 'channel1'\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pubnub.unsubscribe({\n        channels: ['channel1']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"test\");\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js"],"names":["React","Component","PubNubReact","props","pubnub","publishKey","subscribeKey","init","subscribe","channels","withPresence","getMessage","msg","console","log","getStatus","st","publish","message","channel","unsubscribe"],"mappings":";;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACY;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACZ;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,IAAIF,WAAJ,CAAgB;AAAEG,MAAAA,UAAU,EAAE,kBAAd;AAAkCC,MAAAA,YAAY,EAAE;AAAhD,KAAhB,CAAd;;AACA,UAAKF,MAAL,CAAYG,IAAZ;;AAHiB;AAIlB;;;;yCAEoB;AAAA;;AACnB,WAAKH,MAAL,CAAYI,SAAZ,CAAsB;AAAEC,QAAAA,QAAQ,EAAE,CAAC,UAAD,CAAZ;AAA0BC,QAAAA,YAAY,EAAE;AAAxC,OAAtB;AAEA,WAAKN,MAAL,CAAYO,UAAZ,CAAuB,UAAvB,EAAmC,UAACC,GAAD,EAAS;AAC1CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAFD;AAIA,WAAKR,MAAL,CAAYW,SAAZ,CAAsB,UAACC,EAAD,EAAQ;AAC5BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;;AACA,QAAA,MAAI,CAACZ,MAAL,CAAYa,OAAZ,CAAoB;AAAEC,UAAAA,OAAO,EAAE,wBAAX;AAAqCC,UAAAA,OAAO,EAAE;AAA9C,SAApB;AACD,OAHD;AAID;;;2CAEsB;AACrB,WAAKf,MAAL,CAAYgB,WAAZ,CAAwB;AAAEX,QAAAA,QAAQ,EAAE,CAAC,UAAD;AAAZ,OAAxB;AACD;;;6BAEQ;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGD;;;;EA5B0BR,S","sourcesContent":["// import React, { Component } from 'react';\n\n// class Chat extends Component {\n\n//     render() {\n//         var output = PUBNUB.$('output');\n//         var input = PUBNUB.$('input'); \n//         var button = PUBNUB.$('button');\n//         var avatar = PUBNUB.$('avatar');\n//         var presence = PUBNUB.$('presence');\n\n//         var channel = '1';\n//         avatar.className = 'face-' + ((Math.random() * 13 + 1) >>> 0) + ' color-' + ((Math.random() * 10 + 1) >>> 0);\n\n//         var p = PUBNUB.init({\n//             subscribe_key: 'sub-c-1f66d32e-68b1-11e9-8122-22455f4026bf',\n//         // 'sub-c-f762fb78-2724-11e4-a4df-02ee2ddab7fe',\n//             publish_key: 'pub-c-bf4fe468-70b4-46de-9837-0ef63cd6a138'\n//         });\n\n//         p.subscribe({\n//             channel: channel,\n//             callback: function(m) {\n//                 output.innerHTML = '<p><i class=\"' + m.avatar + '\"></i><span>' +  m.text.replace( /[<>]/ig, '' ) + '</span></p>' + output.innerHTML; \n//             },\n//             presence: function(m){\n//                 if(m.occupancy > 1) {\n//                     presence.textContent = m.occupancy + ' people online';\n//                 }\n//             }\n//         });\n\n//         p.bind('keyup', input, function(e) {\n//             (e.keyCode || e.charCode) === 13 && publish()\n//         });\n    \n//         p.bind('click', button, publish);\n    \n//         function publish() {\n//             p.publish({\n//                 channel : channel, \n//                 message : {avatar: avatar.className, text: input.value}, \n//                 x : (input.value='')\n//             });\n//         }\n\n//         return (\n            // <div>\n            //     <h3>Chat With Others Here</h3>\n\n            //     <section id=\"main\" role=\"main\">\n            //         <div id=\"chat\">\n            //             <i id=\"avatar\" class=\"face12\"><input type=\"text\" id=\"input\" placeholder=\"Type your message...\"></input></i>\n            //         </div>\n            //         <button id=\"button\">\n            //             Send Message\n            //         </button>\n\n            //         <p id=\"presence\"></p>\n            //         <div id=\"output\"></div>\n            //     </section>\n            // </div>\n//         )\n//     }\n// }\n\n// export default Chat;\nimport React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({ publishKey: 'YOUR PUBLISH KEY', subscribeKey: 'YOUR SUBSCRIBE KEY' });\n    this.pubnub.init(this);\n  }\n  \n  componentWillMount() {\n    this.pubnub.subscribe({ channels: ['channel1'], withPresence: true });\n    \n    this.pubnub.getMessage('channel1', (msg) => {\n      console.log(msg);\n    });\n    \n    this.pubnub.getStatus((st) => {\n      console.log(st);\n      this.pubnub.publish({ message: 'hello world from react', channel: 'channel1' });\n    });\n  }\n  \n  componentWillUnmount() {\n    this.pubnub.unsubscribe({ channels: ['channel1'] });\n  }\n  \n  render() {\n    return(\n        <h1>test</h1>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}