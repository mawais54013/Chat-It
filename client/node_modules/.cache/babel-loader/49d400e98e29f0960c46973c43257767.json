{"ast":null,"code":"import _toConsumableArray from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Party.js\";\nimport React, { Component } from 'react';\nimport { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'; // import MyComponent from './MyComponent';\n\nvar Party =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Party, _Component);\n\n  function Party(props) {\n    var _this;\n\n    _classCallCheck(this, Party);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Party).call(this, props));\n\n    _this.join = function (webrtc) {\n      return webrtc.joinRoom(_this.state.roomID, function (err, desc) {\n        _this.setState({\n          inRoom: true\n        });\n      });\n    };\n\n    _this.handleCreatedPeer = function (webrtc, peer) {\n      _this.setState({\n        peers: [].concat(_toConsumableArray(_this.state.peers), [peer])\n      });\n    };\n\n    _this.handleRemovedPeer = function () {\n      _this.setState({\n        peers: _this.state.peers.filter(function (p) {\n          return !p.closed;\n        })\n      });\n    };\n\n    _this.generateRemotes = function () {\n      return _this.state.peers.map(function (peer) {\n        return React.createElement(RemoteVideo, {\n          key: \"remote-video-\".concat(peer.id),\n          peer: peer,\n          id: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.state = {\n      peers: [],\n      roomID: \"liowebrtc-vdemo-party-\".concat(_this.props.roomName),\n      inRoom: false\n    };\n    return _this;\n  } // join = (webrtc) => webrtc.joinRoom('video-chat-room-arbitrary-name');\n\n\n  _createClass(Party, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LioWebRTC, {\n        options: {\n          debug: true\n        },\n        onReady: this.join,\n        onCreatedPeer: this.handleCreatedPeer,\n        onRemovedPeer: this.handleRemovedPeer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(LocalVideo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.state.peers && this.generateRemotes());\n    }\n  }]);\n\n  return Party;\n}(Component);\n\nexport default Party;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Party.js"],"names":["React","Component","LioWebRTC","LocalVideo","RemoteVideo","Party","props","join","webrtc","joinRoom","state","roomID","err","desc","setState","inRoom","handleCreatedPeer","peer","peers","handleRemovedPeer","filter","p","closed","generateRemotes","map","id","roomName","debug"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,QAAmD,iBAAnD,C,CACA;;IAEMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAUnBC,IAVmB,GAUZ,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,QAAP,CAAgB,MAAKC,KAAL,CAAWC,MAA3B,EAAmC,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnE,cAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFkB,CAAZ;AAAA,KAVY;;AAAA,UAcnBC,iBAdmB,GAcC,UAACR,MAAD,EAASS,IAAT,EAAkB;AACpC,YAAKH,QAAL,CAAc;AAAEI,QAAAA,KAAK,+BAAM,MAAKR,KAAL,CAAWQ,KAAjB,IAAwBD,IAAxB;AAAP,OAAd;AACD,KAhBkB;;AAAA,UAkBnBE,iBAlBmB,GAkBC,YAAM;AACxB,YAAKL,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAAE,MAAKR,KAAL,CAAWQ,KAAX,CAAiBE,MAAjB,CAAwB,UAAAC,CAAC;AAAA,iBAAI,CAACA,CAAC,CAACC,MAAP;AAAA,SAAzB;AAAT,OAAd;AACD,KApBkB;;AAAA,UAsBnBC,eAtBmB,GAsBD;AAAA,aAAM,MAAKb,KAAL,CAAWQ,KAAX,CAAiBM,GAAjB,CAAqB,UAACP,IAAD;AAAA,eACzC,oBAAC,WAAD;AAAa,UAAA,GAAG,yBAAkBA,IAAI,CAACQ,EAAvB,CAAhB;AAA6C,UAAA,IAAI,EAAER,IAAnD;AAAyD,UAAA,EAAE,EAAC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyC;AAAA,OAArB,CAAN;AAAA,KAtBC;;AAEjB,UAAKP,KAAL,GAAa;AACXQ,MAAAA,KAAK,EAAE,EADI;AAEXP,MAAAA,MAAM,kCAA2B,MAAKL,KAAL,CAAWoB,QAAtC,CAFK;AAGXX,MAAAA,MAAM,EAAE;AAHG,KAAb;AAFiB;AAOlB,G,CAED;;;;;6BAkBU;AACR,aACE,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SADX;AAEE,QAAA,OAAO,EAAE,KAAKpB,IAFhB;AAGE,QAAA,aAAa,EAAE,KAAKS,iBAHtB;AAIE,QAAA,aAAa,EAAE,KAAKG,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQI,KAAKT,KAAL,CAAWQ,KAAX,IACA,KAAKK,eAAL,EATJ,CADF;AAcD;;;;EA5CiBtB,S;;AA+CpB,eAAeI,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { LioWebRTC, LocalVideo, RemoteVideo } from 'react-liowebrtc'\n// import MyComponent from './MyComponent';\n\nclass Party extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      peers: [],\n      roomID: `liowebrtc-vdemo-party-${this.props.roomName}`,\n      inRoom: false,\n    };\n  }\n\n  // join = (webrtc) => webrtc.joinRoom('video-chat-room-arbitrary-name');\n  join = (webrtc) => webrtc.joinRoom(this.state.roomID, (err, desc) => {\n    this.setState({ inRoom: true });\n  });\n\n  handleCreatedPeer = (webrtc, peer) => {\n    this.setState({ peers: [...this.state.peers, peer] });\n  }\n\n  handleRemovedPeer = () => {\n    this.setState({ peers: this.state.peers.filter(p => !p.closed) });\n  }\n\n  generateRemotes = () => this.state.peers.map((peer) => (\n      <RemoteVideo key={`remote-video-${peer.id}`} peer={peer} id=\"\"/>\n    )\n  );\n\n  render () {\n    return (\n      <LioWebRTC\n        options={{ debug: true }}\n        onReady={this.join}\n        onCreatedPeer={this.handleCreatedPeer}\n        onRemovedPeer={this.handleRemovedPeer}\n      >\n        <LocalVideo />\n        {\n          this.state.peers &&\n          this.generateRemotes()\n        }\n      </LioWebRTC>\n    )\n  }\n}\n\nexport default Party;"]},"metadata":{},"sourceType":"module"}