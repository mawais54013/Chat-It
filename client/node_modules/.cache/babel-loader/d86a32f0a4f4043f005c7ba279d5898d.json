{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js\";\n// import React, { Component } from \"react\";\n// // import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import CodeMirror from \"react-codemirror\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// // import io from 'socket.io-client'\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n// class CodingPage extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       html: \"\",\n//       js: \"\",\n//     };\n//   }\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n//   syncUpdates = () => {\n//     const data = { ...this.state };    \n//   };\n//   runCode = () => {\n//     const { html, js } = this.state;\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//       </head>\n//       <body>\n//         ${html}\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n//   render() {\n//     const { html, js } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n//     return (\n//       <div className=\"App\">\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"editor-header\">HTML</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//         </section>\n//         <section className=\"result\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n// export default CodingPage;\n// next is to work on chat and webrtc features\nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\"; // import Webcam from \"react-webcam\";\n\nimport \"./coding.css\";\n\nrequire(\"codemirror/lib/codemirror.css\");\n\nrequire(\"codemirror/mode/htmlmixed/htmlmixed\");\n\nrequire(\"codemirror/mode/javascript/javascript\");\n\nrequire(\"codemirror/theme/dracula.css\");\n\nvar CodingPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CodingPage, _React$Component);\n\n  function CodingPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CodingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CodingPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      html: '',\n      code: \"Loading...\",\n      code1: \"<h1 id='demo'></h1>\",\n      cursorPosition: {\n        line: 0,\n        ch: 0\n      }\n    };\n\n    _this.componentDidMount = function () {\n      var params = _this.props.match.params;\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      database().ref(\"/code-sessions/\" + params.sessionid).once(\"value\").then(function (snapshot) {\n        self.setState({\n          code: snapshot.val().content + \"\",\n          createdon: snapshot.val().createdon\n        }, function () {\n          var content = snapshot.val().content;\n          self.codemirror.getCodeMirror().setValue(content);\n        });\n        _this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n\n        _this.codeRef.on(\"value\", function (snapshot) {\n          self.setState({\n            code: snapshot.val().content\n          });\n          var currentCursorPos = self.state.cursorPosition;\n          self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n          self.setState({\n            cursorPosition: currentCursorPos\n          });\n          self.changeCursorPos();\n        });\n      }).catch(function (e) {\n        self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n      });\n    };\n\n    _this.changeCursorPos = function () {\n      var _this$state$cursorPos = _this.state.cursorPosition,\n          line = _this$state$cursorPos.line,\n          ch = _this$state$cursorPos.ch;\n\n      _this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n    };\n\n    _this.onChange = function (newVal, change) {\n      // console.log(newVal, change);\n      _this.setState({\n        cursorPosition: {\n          line: _this.codemirror.getCodeMirror().doc.getCursor().line,\n          ch: _this.codemirror.getCodeMirror().doc.getCursor().ch\n        }\n      }, function () {});\n\n      _this.codeRef.child(\"content\").set(newVal);\n    };\n\n    _this.runCode = function () {\n      var _this$state = _this.state,\n          code = _this$state.code,\n          code1 = _this$state.code1;\n      var iframe = _this.refs.iframe;\n      var document = iframe.contentDocument;\n      var documentContents = \"\\n    <!DOCTYPE html>\\n    <html lang=\\\"en\\\">\\n    <head>\\n      <meta charset=\\\"UTF-8\\\">\\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n      <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n      <title>Document</title>\\n    </head>\\n    <body>\\n      \".concat(code1, \"\\n\\n      <script type=\\\"text/javascript\\\">\\n        \").concat(code, \"\\n      </script>\\n    </body>\\n    </html>\\n  \");\n      document.open();\n      document.write(documentContents);\n      document.close();\n    };\n\n    return _this;\n  }\n\n  _createClass(CodingPage, [{\n    key: \"onChange1\",\n    value: function onChange1(data) {\n      this.setState({\n        code1: data\n      });\n      this.runCode();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.runCode();\n    }\n  }, {\n    key: \"setUP\",\n    // Generate random room name if needed\n    value: function setUP() {\n      if (!location.hash) {\n        location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);\n      }\n\n      var roomHash = location.hash.substring(1); // TODO: Replace with your own channel ID\n\n      var drone = new ScaleDrone('yiS12Ts5RdNhebyM'); // Room name needs to be prefixed with 'observable-'\n\n      var roomName = 'observable-' + roomHash;\n      var configuration = {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      };\n      var room;\n      var pc;\n\n      function onSuccess() {}\n\n      ;\n\n      function onError(error) {\n        console.error(error);\n      }\n\n      ;\n      drone.on('open', function (error) {\n        if (error) {\n          return console.error(error);\n        }\n\n        room = drone.subscribe(roomName);\n        room.on('open', function (error) {\n          if (error) {\n            onError(error);\n          }\n        }); // We're connected to the room and received an array of 'members'\n        // connected to the room (including us). Signaling server is ready.\n\n        room.on('members', function (members) {\n          console.log('MEMBERS', members); // If we are the second user to connect to the room we will be creating the offer\n\n          var isOfferer = members.length === 2;\n          startWebRTC(isOfferer);\n        });\n      }); // Send signaling data via Scaledrone\n\n      function sendMessage(message) {\n        drone.publish({\n          room: roomName,\n          message: message\n        });\n      }\n\n      function startWebRTC(isOfferer) {\n        pc = new RTCPeerConnection(configuration); // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n        // message to the other peer through the signaling server\n\n        pc.onicecandidate = function (event) {\n          if (event.candidate) {\n            sendMessage({\n              'candidate': event.candidate\n            });\n          }\n        }; // If user is offerer let the 'negotiationneeded' event create the offer\n\n\n        if (isOfferer) {\n          pc.onnegotiationneeded = function () {\n            pc.createOffer().then(localDescCreated).catch(onError);\n          };\n        } // When a remote stream arrives display it in the #remoteVideo element\n\n\n        pc.ontrack = function (event) {\n          var stream = event.streams[0];\n\n          if (!remoteVideo.srcObject || remoteVideo.srcObject.id !== stream.id) {\n            remoteVideo.srcObject = stream;\n          }\n        };\n\n        navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: true\n        }).then(function (stream) {\n          // Display your local video in #localVideo element\n          localVideo.srcObject = stream; // Add your stream to be sent to the conneting peer\n\n          stream.getTracks().forEach(function (track) {\n            return pc.addTrack(track, stream);\n          });\n        }, onError); // Listen to signaling data from Scaledrone\n\n        room.on('data', function (message, client) {\n          // Message was sent by us\n          if (client.id === drone.clientId) {\n            return;\n          }\n\n          if (message.sdp) {\n            // This is called after receiving an offer or answer from another peer\n            pc.setRemoteDescription(new RTCSessionDescription(message.sdp), function () {\n              // When receiving an offer lets answer it\n              if (pc.remoteDescription.type === 'offer') {\n                pc.createAnswer().then(localDescCreated).catch(onError);\n              }\n            }, onError);\n          } else if (message.candidate) {\n            // Add the new ICE candidate to our connections remote description\n            pc.addIceCandidate(new RTCIceCandidate(message.candidate), onSuccess, onError);\n          }\n        });\n      }\n\n      function localDescCreated(desc) {\n        pc.setLocalDescription(desc, function () {\n          return sendMessage({\n            'sdp': pc.localDescription\n          });\n        }, onError);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var html = this.state.html;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: {\n          background: \"#1d1f27\"\n        },\n        extras: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, this.state.createdon ? \"Created On: \".concat(this.state.createdon) : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"coding-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"codeArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(CodeMirror, {\n        ref: function ref(r) {\n          return _this2.codemirror = r;\n        },\n        className: \"code-mirror-container\",\n        value: this.state.code // value={js}\n        ,\n        onChange: this.onChange,\n        options: {\n          theme: \"dracula\",\n          lineNumbers: true,\n          readOnly: false,\n          mode: \"javascript\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(CodeMirror, {\n        value: this.state.code1,\n        onChange: function onChange(value) {\n          _this2.onChange1(value);\n        } // value={html}\n        ,\n        options: {\n          mode: 'htmlmixed',\n          theme: 'dracula',\n          lineNumbers: true,\n          readOnly: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"result\",\n        id: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: \"result\",\n        className: \"iframe\",\n        ref: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.setUp(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Click Me\"), \";\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"test1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"localVideo\",\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"test2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"remoteVideo\",\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CodingPage;\n}(React.Component);\n\nexport { CodingPage as default };","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js"],"names":["React","Header","database","CodeMirror","require","CodingPage","state","html","code","code1","cursorPosition","line","ch","componentDidMount","params","props","match","self","ref","sessionid","once","then","snapshot","setState","val","content","createdon","codemirror","getCodeMirror","setValue","codeRef","on","currentCursorPos","changeCursorPos","catch","e","doc","setCursor","onChange","newVal","change","getCursor","child","set","runCode","iframe","refs","document","contentDocument","documentContents","open","write","close","data","location","hash","Math","floor","random","toString","roomHash","substring","drone","ScaleDrone","roomName","configuration","iceServers","urls","room","pc","onSuccess","onError","error","console","subscribe","members","log","isOfferer","length","startWebRTC","sendMessage","message","publish","RTCPeerConnection","onicecandidate","event","candidate","onnegotiationneeded","createOffer","localDescCreated","ontrack","stream","streams","remoteVideo","srcObject","id","navigator","mediaDevices","getUserMedia","audio","video","localVideo","getTracks","forEach","track","addTrack","client","clientId","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","addIceCandidate","RTCIceCandidate","desc","setLocalDescription","localDescription","background","r","theme","lineNumbers","readOnly","mode","value","onChange1","setUp","Component"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CACA;;AACA,OAAO,cAAP;;AAEAC,OAAO,CAAC,+BAAD,CAAP;;AACAA,OAAO,CAAC,qCAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AACAA,OAAO,CAAC,8BAAD,CAAP;;IAEqBC,U;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,YAFA;AAGNC,MAAAA,KAAK,uBAHC;AAINC,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAE,CADQ;AAEdC,QAAAA,EAAE,EAAE;AAFU;AAJV,K;;UAURC,iB,GAAoB,YAAM;AAAA,UAEhBC,MAFgB,GAEL,MAAKC,KAAL,CAAWC,KAFN,CAEhBF,MAFgB;;AAGxB,UAAIG,IAAI,wDAAR;;AACAf,MAAAA,QAAQ,GACLgB,GADH,CACO,oBAAoBJ,MAAM,CAACK,SADlC,EAEGC,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChBL,QAAAA,IAAI,CAACM,QAAL,CAAc;AAAEf,UAAAA,IAAI,EAAEc,QAAQ,CAACE,GAAT,GAAeC,OAAf,GAAyB,EAAjC;AAAqCC,UAAAA,SAAS,EAAEJ,QAAQ,CAACE,GAAT,GAAeE;AAA/D,SAAd,EAA0F,YAAM;AAC9F,cAAID,OAAO,GAAGH,QAAQ,CAACE,GAAT,GAAeC,OAA7B;AAEAR,UAAAA,IAAI,CAACU,UAAL,CAAgBC,aAAhB,GAAgCC,QAAhC,CAAyCJ,OAAzC;AACD,SAJD;AAKA,cAAKK,OAAL,GAAe5B,QAAQ,GAAGgB,GAAX,CAAe,mBAAmBJ,MAAM,CAACK,SAAzC,CAAf;;AACA,cAAKW,OAAL,CAAaC,EAAb,CAAgB,OAAhB,EAAyB,UAAST,QAAT,EAAmB;AAC1CL,UAAAA,IAAI,CAACM,QAAL,CAAc;AACZf,YAAAA,IAAI,EAAEc,QAAQ,CAACE,GAAT,GAAeC;AADT,WAAd;AAGA,cAAIO,gBAAgB,GAAGf,IAAI,CAACX,KAAL,CAAWI,cAAlC;AACAO,UAAAA,IAAI,CAACU,UAAL,CAAgBC,aAAhB,GAAgCC,QAAhC,CAAyCP,QAAQ,CAACE,GAAT,GAAeC,OAAxD;AACAR,UAAAA,IAAI,CAACM,QAAL,CAAc;AAAEb,YAAAA,cAAc,EAAEsB;AAAlB,WAAd;AACAf,UAAAA,IAAI,CAACgB,eAAL;AACD,SARD;AASD,OAnBH,EAoBGC,KApBH,CAoBS,UAAAC,CAAC,EAAI;AACVlB,QAAAA,IAAI,CAACU,UAAL,CAAgBC,aAAhB,GAAgCC,QAAhC,CAAyC,oBAAzC;AACD,OAtBH;AAuBD,K;;UACDI,e,GAAkB,YAAM;AAAA,kCACD,MAAK3B,KAAL,CAAWI,cADV;AAAA,UACdC,IADc,yBACdA,IADc;AAAA,UACRC,EADQ,yBACRA,EADQ;;AAEtB,YAAKe,UAAL,CAAgBC,aAAhB,GAAgCQ,GAAhC,CAAoCC,SAApC,CAA8C1B,IAA9C,EAAoDC,EAApD;AACD,K;;UACD0B,Q,GAAW,UAACC,MAAD,EAASC,MAAT,EAAoB;AAC7B;AACA,YAAKjB,QAAL,CACE;AACEb,QAAAA,cAAc,EAAE;AACdC,UAAAA,IAAI,EAAE,MAAKgB,UAAL,CAAgBC,aAAhB,GAAgCQ,GAAhC,CAAoCK,SAApC,GAAgD9B,IADxC;AAEdC,UAAAA,EAAE,EAAE,MAAKe,UAAL,CAAgBC,aAAhB,GAAgCQ,GAAhC,CAAoCK,SAApC,GAAgD7B;AAFtC;AADlB,OADF,EAOE,YAAM,CAAE,CAPV;;AASA,YAAKkB,OAAL,CAAaY,KAAb,CAAmB,SAAnB,EAA8BC,GAA9B,CAAkCJ,MAAlC;AACD,K;;UAaHK,O,GAAU,YAAM;AAAA,wBACU,MAAKtC,KADf;AAAA,UACNE,IADM,eACNA,IADM;AAAA,UACAC,KADA,eACAA,KADA;AAGd,UAAMoC,MAAM,GAAG,MAAKC,IAAL,CAAUD,MAAzB;AACA,UAAME,QAAQ,GAAGF,MAAM,CAACG,eAAxB;AACA,UAAMC,gBAAgB,yTAUhBxC,KAVgB,kEAadD,IAbc,oDAAtB;AAmBAuC,MAAAA,QAAQ,CAACG,IAAT;AACAH,MAAAA,QAAQ,CAACI,KAAT,CAAeF,gBAAf;AACAF,MAAAA,QAAQ,CAACK,KAAT;AACD,K;;;;;;;8BAtCSC,I,EAAM;AACd,WAAK9B,QAAL,CAAc;AACZd,QAAAA,KAAK,EAAE4C;AADK,OAAd;AAGA,WAAKT,OAAL;AACD;;;yCAEoB;AACnB,WAAKA,OAAL;AACD;;;AA+BG;4BACQ;AAEN,UAAI,CAACU,QAAQ,CAACC,IAAd,EAAoB;AAChBD,QAAAA,QAAQ,CAACC,IAAT,GAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAhB;AACD;;AACD,UAAMC,QAAQ,GAAGN,QAAQ,CAACC,IAAT,CAAcM,SAAd,CAAwB,CAAxB,CAAjB,CALI,CAOJ;;AACA,UAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAe,kBAAf,CAAd,CARI,CASJ;;AACA,UAAMC,QAAQ,GAAG,gBAAgBJ,QAAjC;AACA,UAAMK,aAAa,GAAG;AACpBC,QAAAA,UAAU,EAAE,CAAC;AACXC,UAAAA,IAAI,EAAE;AADK,SAAD;AADQ,OAAtB;AAKA,UAAIC,IAAJ;AACA,UAAIC,EAAJ;;AAGA,eAASC,SAAT,GAAqB,CAAE;;AAAA;;AACvB,eAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAAA;AAEDV,MAAAA,KAAK,CAAC/B,EAAN,CAAS,MAAT,EAAiB,UAAAyC,KAAK,EAAI;AACxB,YAAIA,KAAJ,EAAW;AACT,iBAAOC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAP;AACD;;AACDJ,QAAAA,IAAI,GAAGN,KAAK,CAACY,SAAN,CAAgBV,QAAhB,CAAP;AACAI,QAAAA,IAAI,CAACrC,EAAL,CAAQ,MAAR,EAAgB,UAAAyC,KAAK,EAAI;AACvB,cAAIA,KAAJ,EAAW;AACTD,YAAAA,OAAO,CAACC,KAAD,CAAP;AACD;AACF,SAJD,EALwB,CAUxB;AACA;;AACAJ,QAAAA,IAAI,CAACrC,EAAL,CAAQ,SAAR,EAAmB,UAAA4C,OAAO,EAAI;AAC5BF,UAAAA,OAAO,CAACG,GAAR,CAAY,SAAZ,EAAuBD,OAAvB,EAD4B,CAE5B;;AACA,cAAME,SAAS,GAAGF,OAAO,CAACG,MAAR,KAAmB,CAArC;AACAC,UAAAA,WAAW,CAACF,SAAD,CAAX;AACD,SALD;AAMD,OAlBD,EAzBI,CA6CJ;;AACA,eAASG,WAAT,CAAqBC,OAArB,EAA8B;AAC5BnB,QAAAA,KAAK,CAACoB,OAAN,CAAc;AACZd,UAAAA,IAAI,EAAEJ,QADM;AAEZiB,UAAAA,OAAO,EAAPA;AAFY,SAAd;AAID;;AAED,eAASF,WAAT,CAAqBF,SAArB,EAAgC;AAC9BR,QAAAA,EAAE,GAAG,IAAIc,iBAAJ,CAAsBlB,aAAtB,CAAL,CAD8B,CAG9B;AACA;;AACAI,QAAAA,EAAE,CAACe,cAAH,GAAoB,UAAAC,KAAK,EAAI;AAC3B,cAAIA,KAAK,CAACC,SAAV,EAAqB;AACnBN,YAAAA,WAAW,CAAC;AAAC,2BAAaK,KAAK,CAACC;AAApB,aAAD,CAAX;AACD;AACF,SAJD,CAL8B,CAW9B;;;AACA,YAAIT,SAAJ,EAAe;AACbR,UAAAA,EAAE,CAACkB,mBAAH,GAAyB,YAAM;AAC7BlB,YAAAA,EAAE,CAACmB,WAAH,GAAiBnE,IAAjB,CAAsBoE,gBAAtB,EAAwCvD,KAAxC,CAA8CqC,OAA9C;AACD,WAFD;AAGD,SAhB6B,CAkB9B;;;AACAF,QAAAA,EAAE,CAACqB,OAAH,GAAa,UAAAL,KAAK,EAAI;AACpB,cAAMM,MAAM,GAAGN,KAAK,CAACO,OAAN,CAAc,CAAd,CAAf;;AACA,cAAI,CAACC,WAAW,CAACC,SAAb,IAA0BD,WAAW,CAACC,SAAZ,CAAsBC,EAAtB,KAA6BJ,MAAM,CAACI,EAAlE,EAAsE;AACpEF,YAAAA,WAAW,CAACC,SAAZ,GAAwBH,MAAxB;AACD;AACF,SALD;;AAOAK,QAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAClCC,UAAAA,KAAK,EAAE,IAD2B;AAElCC,UAAAA,KAAK,EAAE;AAF2B,SAApC,EAGG/E,IAHH,CAGQ,UAAAsE,MAAM,EAAI;AAChB;AACAU,UAAAA,UAAU,CAACP,SAAX,GAAuBH,MAAvB,CAFgB,CAGhB;;AACAA,UAAAA,MAAM,CAACW,SAAP,GAAmBC,OAAnB,CAA2B,UAAAC,KAAK;AAAA,mBAAInC,EAAE,CAACoC,QAAH,CAAYD,KAAZ,EAAmBb,MAAnB,CAAJ;AAAA,WAAhC;AACD,SARD,EAQGpB,OARH,EA1B8B,CAoC9B;;AACAH,QAAAA,IAAI,CAACrC,EAAL,CAAQ,MAAR,EAAgB,UAACkD,OAAD,EAAUyB,MAAV,EAAqB;AACnC;AACA,cAAIA,MAAM,CAACX,EAAP,KAAcjC,KAAK,CAAC6C,QAAxB,EAAkC;AAChC;AACD;;AAED,cAAI1B,OAAO,CAAC2B,GAAZ,EAAiB;AACf;AACAvC,YAAAA,EAAE,CAACwC,oBAAH,CAAwB,IAAIC,qBAAJ,CAA0B7B,OAAO,CAAC2B,GAAlC,CAAxB,EAAgE,YAAM;AACpE;AACA,kBAAIvC,EAAE,CAAC0C,iBAAH,CAAqBC,IAArB,KAA8B,OAAlC,EAA2C;AACzC3C,gBAAAA,EAAE,CAAC4C,YAAH,GAAkB5F,IAAlB,CAAuBoE,gBAAvB,EAAyCvD,KAAzC,CAA+CqC,OAA/C;AACD;AACF,aALD,EAKGA,OALH;AAMD,WARD,MAQO,IAAIU,OAAO,CAACK,SAAZ,EAAuB;AAC5B;AACAjB,YAAAA,EAAE,CAAC6C,eAAH,CACE,IAAIC,eAAJ,CAAoBlC,OAAO,CAACK,SAA5B,CADF,EAC0ChB,SAD1C,EACqDC,OADrD;AAGD;AACF,SApBD;AAqBD;;AAED,eAASkB,gBAAT,CAA0B2B,IAA1B,EAAgC;AAC9B/C,QAAAA,EAAE,CAACgD,mBAAH,CACED,IADF,EAEE;AAAA,iBAAMpC,WAAW,CAAC;AAAC,mBAAOX,EAAE,CAACiD;AAAX,WAAD,CAAjB;AAAA,SAFF,EAGE/C,OAHF;AAKD;AACN;;;6BAEQ;AAAA;;AAAA,UACChE,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEgH,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKjH,KAAL,CAAWoB,SAAX,yBACkB,KAAKpB,KAAL,CAAWoB,SAD7B,IAEG,EAHN,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAE,aAAA8F,CAAC;AAAA,iBAAK,MAAI,CAAC7F,UAAL,GAAkB6F,CAAvB;AAAA,SADR;AAEE,QAAA,SAAS,EAAC,uBAFZ;AAGE,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWE,IAHpB,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAE,KAAK8B,QALjB;AAME,QAAA,OAAO,EAAE;AACPmF,UAAAA,KAAK,EAAE,SADA;AAEPC,UAAAA,WAAW,EAAE,IAFN;AAGPC,UAAAA,QAAQ,EAAE,KAHH;AAIPC,UAAAA,IAAI,EAAE;AAJC,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKtH,KAAL,CAAWG,KADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAoH,KAAK,EAAI;AAAE,UAAA,MAAI,CAACC,SAAL,CAAeD,KAAf;AAAuB,SAF9C,CAGE;AAHF;AAIE,QAAA,OAAO,EAAE;AACPD,UAAAA,IAAI,EAAE,WADC;AAEPH,UAAAA,KAAK,EAAE,SAFA;AAGPC,UAAAA,WAAW,EAAE,IAHN;AAIPC,UAAAA,QAAQ,EAAE;AAJH,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAjBF,EA8BA;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,SAAS,EAAC,QAAjC;AAA0C,QAAA,GAAG,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA9BA,CAXF,EA6CE;AAAQ,QAAA,OAAO,EAAE,KAAKI,KAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7CF,OAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,EAII;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAJJ,CAhDF,CADF;AA4DD;;;;EA3RqC/H,KAAK,CAACgI,S;;SAAzB3H,U","sourcesContent":["// import React, { Component } from \"react\";\n// // import { Controlled as CodeMirror } from \"react-codemirror2\";\n// import CodeMirror from \"react-codemirror\";\n// import Pusher from \"pusher-js\";\n// import pushid from \"pushid\";\n// import axios from \"axios\";\n// // import io from 'socket.io-client'\n\n// // import \"./App.css\";\n// import \"codemirror/lib/codemirror.css\";\n// import \"codemirror/theme/material.css\";\n\n// import \"codemirror/mode/htmlmixed/htmlmixed\";\n// import \"codemirror/mode/css/css\";\n// import \"codemirror/mode/javascript/javascript\";\n\n\n// class CodingPage extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       html: \"\",\n//       js: \"\",\n//     };\n//   }\n\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n\n//   syncUpdates = () => {\n//     const data = { ...this.state };    \n//   };\n\n//   runCode = () => {\n//     const { html, js } = this.state;\n\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//       </head>\n//       <body>\n//         ${html}\n\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n\n//   render() {\n\n//     const { html, js } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n\n//     return (\n//       <div className=\"App\">\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"editor-header\">HTML</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//         </section>\n//         <section className=\"result\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default CodingPage;\n\n// next is to work on chat and webrtc features\n    \nimport React from \"react\";\nimport Header from \"../Components/header\";\nimport { database } from \"firebase\";\nimport CodeMirror from \"react-codemirror\";\n// import Webcam from \"react-webcam\";\nimport \"./coding.css\";\n\nrequire(\"codemirror/lib/codemirror.css\");\nrequire(\"codemirror/mode/htmlmixed/htmlmixed\");\nrequire(\"codemirror/mode/javascript/javascript\");\nrequire(\"codemirror/theme/dracula.css\");\n\nexport default class CodingPage extends React.Component {\n  state = {\n    html: '',\n    code: \"Loading...\",\n    code1: `<h1 id='demo'></h1>`,\n    cursorPosition: {\n      line: 0,\n      ch: 0\n    }\n  };\n\n  componentDidMount = () => {\n\n    const { params } = this.props.match;\n    let self = this;\n    database()\n      .ref(\"/code-sessions/\" + params.sessionid)\n      .once(\"value\")\n      .then(snapshot => {\n        self.setState({ code: snapshot.val().content + \"\", createdon: snapshot.val().createdon }, () => {\n          let content = snapshot.val().content;\n\n          self.codemirror.getCodeMirror().setValue(content);\n        });\n        this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n        this.codeRef.on(\"value\", function(snapshot) {\n          self.setState({\n            code: snapshot.val().content\n          });\n          var currentCursorPos = self.state.cursorPosition;\n          self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n          self.setState({ cursorPosition: currentCursorPos });\n          self.changeCursorPos();\n        });\n      })\n      .catch(e => {\n        self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n      });\n  };\n  changeCursorPos = () => {\n    const { line, ch } = this.state.cursorPosition;\n    this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n  };\n  onChange = (newVal, change) => {\n    // console.log(newVal, change);\n    this.setState(\n      {\n        cursorPosition: {\n          line: this.codemirror.getCodeMirror().doc.getCursor().line,\n          ch: this.codemirror.getCodeMirror().doc.getCursor().ch\n        }\n      },\n      () => {}\n    );\n    this.codeRef.child(\"content\").set(newVal);\n  };\n\nonChange1(data) {\n  this.setState({\n    code1: data,\n  })\n  this.runCode();\n}\n\ncomponentDidUpdate() {\n  this.runCode();\n}\n\nrunCode = () => {\n  const { code, code1 } = this.state;\n\n  const iframe = this.refs.iframe;\n  const document = iframe.contentDocument;\n  const documentContents = `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n      <title>Document</title>\n    </head>\n    <body>\n      ${code1}\n\n      <script type=\"text/javascript\">\n        ${code}\n      </script>\n    </body>\n    </html>\n  `;\n\n  document.open();\n  document.write(documentContents);\n  document.close();\n};\n\n    // Generate random room name if needed\n    setUP() {\n\n      if (!location.hash) {\n          location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);\n        }\n        const roomHash = location.hash.substring(1);\n        \n        // TODO: Replace with your own channel ID\n        const drone = new ScaleDrone('yiS12Ts5RdNhebyM');\n        // Room name needs to be prefixed with 'observable-'\n        const roomName = 'observable-' + roomHash;\n        const configuration = {\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        };\n        let room;\n        let pc;\n        \n        \n        function onSuccess() {};\n        function onError(error) {\n          console.error(error);\n        };\n        \n        drone.on('open', error => {\n          if (error) {\n            return console.error(error);\n          }\n          room = drone.subscribe(roomName);\n          room.on('open', error => {\n            if (error) {\n              onError(error);\n            }\n          });\n          // We're connected to the room and received an array of 'members'\n          // connected to the room (including us). Signaling server is ready.\n          room.on('members', members => {\n            console.log('MEMBERS', members);\n            // If we are the second user to connect to the room we will be creating the offer\n            const isOfferer = members.length === 2;\n            startWebRTC(isOfferer);\n          });\n        });\n        \n        // Send signaling data via Scaledrone\n        function sendMessage(message) {\n          drone.publish({\n            room: roomName,\n            message\n          });\n        }\n        \n        function startWebRTC(isOfferer) {\n          pc = new RTCPeerConnection(configuration);\n        \n          // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n          // message to the other peer through the signaling server\n          pc.onicecandidate = event => {\n            if (event.candidate) {\n              sendMessage({'candidate': event.candidate});\n            }\n          };\n        \n          // If user is offerer let the 'negotiationneeded' event create the offer\n          if (isOfferer) {\n            pc.onnegotiationneeded = () => {\n              pc.createOffer().then(localDescCreated).catch(onError);\n            }\n          }\n        \n          // When a remote stream arrives display it in the #remoteVideo element\n          pc.ontrack = event => {\n            const stream = event.streams[0];\n            if (!remoteVideo.srcObject || remoteVideo.srcObject.id !== stream.id) {\n              remoteVideo.srcObject = stream;\n            }\n          };\n        \n          navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: true,\n          }).then(stream => {\n            // Display your local video in #localVideo element\n            localVideo.srcObject = stream;\n            // Add your stream to be sent to the conneting peer\n            stream.getTracks().forEach(track => pc.addTrack(track, stream));\n          }, onError);\n        \n          // Listen to signaling data from Scaledrone\n          room.on('data', (message, client) => {\n            // Message was sent by us\n            if (client.id === drone.clientId) {\n              return;\n            }\n        \n            if (message.sdp) {\n              // This is called after receiving an offer or answer from another peer\n              pc.setRemoteDescription(new RTCSessionDescription(message.sdp), () => {\n                // When receiving an offer lets answer it\n                if (pc.remoteDescription.type === 'offer') {\n                  pc.createAnswer().then(localDescCreated).catch(onError);\n                }\n              }, onError);\n            } else if (message.candidate) {\n              // Add the new ICE candidate to our connections remote description\n              pc.addIceCandidate(\n                new RTCIceCandidate(message.candidate), onSuccess, onError\n              );\n            }\n          });\n        }\n        \n        function localDescCreated(desc) {\n          pc.setLocalDescription(\n            desc,\n            () => sendMessage({'sdp': pc.localDescription}),\n            onError\n          );\n        }\n  }\n\n  render() {\n    const { html } = this.state;\n\n    return (\n      <React.Fragment>\n        <Header\n          style={{ background: \"#1d1f27\" }}\n          extras={\n            <div>\n              {this.state.createdon\n                ? `Created On: ${this.state.createdon}`\n                : \"\"}\n            </div>\n          }\n        />\n        <div className=\"coding-page\">\n        <div className=\"codeArea\">\n          <CodeMirror\n            ref={r => (this.codemirror = r)}\n            className=\"code-mirror-container\"\n            value={this.state.code}\n            // value={js}\n            onChange={this.onChange}\n            options={{\n              theme: \"dracula\",\n              lineNumbers: true,\n              readOnly: false,\n              mode: \"javascript\"\n            }}\n\n          />\n          </div>\n          <div>\n          <CodeMirror\n            value={this.state.code1}\n            onChange={value => { this.onChange1(value) }}\n            // value={html}\n            options={{\n              mode: 'htmlmixed',\n              theme: 'dracula',\n              lineNumbers: true,\n              readOnly: false,\n            }}\n          />\n          </div>\n        <section className=\"result\" id=\"iframe\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n        </div>\n        <button onClick={this.setUp()}>\n                   Click Me\n                </button>;\n        <div>\n            <div id=\"test1\">\n            <video id=\"localVideo\" autoPlay></video>\n            </div>\n            <div id=\"test2\">\n            <video id=\"remoteVideo\" autoPlay></video>\n            </div>\n        </div>\n        \n      </React.Fragment>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}