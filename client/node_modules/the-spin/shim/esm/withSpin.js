/**
 * HOC for spin
 * @function withSpin
 */
'use strict';

import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import { clone } from 'asobj';
import PropTypes from 'prop-types';
import React from 'react';
import TheSpin from './TheSpin';
/** @lends withSpin */

function withSpin(Component) {
  var WithSpin =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(WithSpin, _React$Component);

    function WithSpin() {
      _classCallCheck(this, WithSpin);

      return _possibleConstructorReturn(this, _getPrototypeOf(WithSpin).apply(this, arguments));
    }

    _createClass(WithSpin, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var children = props.children,
            _props$spinner = props.spinner,
            spinner = _props$spinner === void 0 ? React.createElement(TheSpin, {
          cover: true,
          enabled: spinning,
          size: spinnerSize,
          theme: spinnerTheme
        }) : _props$spinner,
            spinnerSize = props.spinnerSize,
            spinnerTheme = props.spinnerTheme,
            spinning = props.spinning;
        var componentProps = clone(props, {
          without: Object.keys(WithSpin.propTypes)
        });
        return React.createElement(Component, _extends({}, componentProps, {
          spinner: spinner
        }), children);
      }
    }]);

    return WithSpin;
  }(React.Component);

  WithSpin.propTypes = {
    /** Show loading spinner */

    /** Spinner instance */
    spinner: PropTypes.node,

    /** Size of spinner */
    spinnerSize: PropTypes.string,

    /** Theme of the spinner */
    spinnerTheme: PropTypes.string,
    spinning: PropTypes.bool
  };
  return WithSpin;
}

export default withSpin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpdGhTcGluLmpzIl0sIm5hbWVzIjpbIldpdGhTcGluIiwiUmVhY3QiLCJwcm9wcyIsImNoaWxkcmVuIiwic3Bpbm5lciIsInNwaW5uZXJUaGVtZSIsInNwaW5uZXJTaXplIiwic3Bpbm5pbmciLCJjb21wb25lbnRQcm9wcyIsImNsb25lIiwid2l0aG91dCIsIk9iamVjdCIsIlByb3BUeXBlcyIsImJvb2wiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUE7Ozs7Ozs7O0FBRUEsU0FBQSxLQUFBLFFBQUEsT0FBQTtBQUNBLE9BQUEsU0FBQSxNQUFBLFlBQUE7QUFDQSxPQUFBLEtBQUEsTUFBQSxPQUFBO0FBQ0EsT0FBQSxPQUFBLE1BQUEsV0FBQTtBQUVBOztBQUNBLFNBQUEsUUFBQSxDQUFBLFNBQUEsRUFBOEI7QUFBQSxNQUN0QkEsUUFEc0I7QUFBQTtBQUFBLFlBQUEsZ0JBQUEsRUFBQTtBQUFBLElBQUEsU0FBQSxDQUFBLFFBQUEsRUFBQSxnQkFBQSxDQUFBOztBQUFBLGFBQUEsUUFBQSxHQUFBO0FBQUEsTUFBQSxlQUFBLENBQUEsSUFBQSxFQUFBLFFBQUEsQ0FBQTs7QUFBQSxhQUFBLDBCQUFBLENBQUEsSUFBQSxFQUFBLGVBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsSUFBQSxFQUFBLFNBQUEsQ0FBQSxDQUFBO0FBQUE7O0FBQUEsSUFBQSxZQUFBLENBQUEsUUFBQSxFQUFBLENBQUE7QUFBQSxNQUFBLEdBQUEsRUFBQSxRQUFBO0FBQUEsTUFBQSxLQUFBLEVBQUEsU0FBQSxNQUFBLEdBRWhCO0FBQUEsWUFDQUUsS0FEQSxHQUFBLEtBQUEsS0FBQTtBQUFBLFlBR05DLFFBSE0sR0FhSkQsS0FiSSxDQUFBLFFBQUE7QUFBQSxZQUFBLGNBQUEsR0FhSkEsS0FiSSxDQUFBLE9BQUE7QUFBQSxZQUlORSxPQUpNLEdBQUEsY0FBQSxLQUFBLEtBQUEsQ0FBQSxHQUtKLEtBQUEsQ0FBQSxhQUFBLENBQUEsT0FBQSxFQUFBO0FBQVMsVUFBQSxLQUFLLEVBQWQsSUFBQTtBQUNTLFVBQUEsT0FBTyxFQURoQixRQUFBO0FBRVMsVUFBQSxJQUFJLEVBRmIsV0FBQTtBQUdTLFVBQUEsS0FBSyxFQUFFQztBQUhoQixTQUFBLENBTEksR0FBQSxjQUFBO0FBQUEsWUFVTkMsV0FWTSxHQWFKSixLQWJJLENBQUEsV0FBQTtBQUFBLFlBV05HLFlBWE0sR0FhSkgsS0FiSSxDQUFBLFlBQUE7QUFBQSxZQVlOSyxRQVpNLEdBYUpMLEtBYkksQ0FBQSxRQUFBO0FBY1IsWUFBTU0sY0FBYyxHQUFHQyxLQUFLLENBQUEsS0FBQSxFQUFRO0FBQUVDLFVBQUFBLE9BQU8sRUFBRUMsTUFBTSxDQUFOQSxJQUFBQSxDQUFZWCxRQUFRLENBQXBCVyxTQUFBQTtBQUFYLFNBQVIsQ0FBNUI7QUFDQSxlQUNFLEtBQUEsQ0FBQSxhQUFBLENBQUEsU0FBQSxFQUFBLFFBQUEsQ0FBQSxFQUFBLEVBQUEsY0FBQSxFQUNlO0FBQUVQLFVBQUFBLE9BQU8sRUFBUEE7QUFBRixTQURmLENBQUEsRUFERixRQUNFLENBREY7QUFLRDtBQXRCeUIsS0FBQSxDQUFBLENBQUE7O0FBQUEsV0FBQSxRQUFBO0FBQUEsR0FBQSxDQUNMSCxLQUFLLENBREEsU0FBQSxDQUFBOztBQXlCNUJELEVBQUFBLFFBQVEsQ0FBUkEsU0FBQUEsR0FBcUI7QUFDbkI7O0FBQ0E7QUFDQUksSUFBQUEsT0FBTyxFQUFFUSxTQUFTLENBSEMsSUFBQTs7QUFJbkI7QUFDQU4sSUFBQUEsV0FBVyxFQUFFTSxTQUFTLENBTEgsTUFBQTs7QUFNbkI7QUFDQVAsSUFBQUEsWUFBWSxFQUFFTyxTQUFTLENBUEosTUFBQTtBQVFuQkwsSUFBQUEsUUFBUSxFQUFFSyxTQUFTLENBQUNDO0FBUkQsR0FBckJiO0FBV0EsU0FBQSxRQUFBO0FBQ0Q7O0FBRUQsZUFBQSxRQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIT0MgZm9yIHNwaW5cbiAqIEBmdW5jdGlvbiB3aXRoU3BpblxuICovXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IHsgY2xvbmUgfSBmcm9tICdhc29iaidcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBUaGVTcGluIGZyb20gJy4vVGhlU3BpbidcblxuLyoqIEBsZW5kcyB3aXRoU3BpbiAqL1xuZnVuY3Rpb24gd2l0aFNwaW4gKENvbXBvbmVudCkge1xuICBjbGFzcyBXaXRoU3BpbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyICgpIHtcbiAgICAgIGNvbnN0IHsgcHJvcHMgfSA9IHRoaXNcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgIHNwaW5uZXIgPSAoXG4gICAgICAgICAgPFRoZVNwaW4gY292ZXJcbiAgICAgICAgICAgICAgICAgICBlbmFibGVkPXtzcGlubmluZ31cbiAgICAgICAgICAgICAgICAgICBzaXplPXtzcGlubmVyU2l6ZX1cbiAgICAgICAgICAgICAgICAgICB0aGVtZT17c3Bpbm5lclRoZW1lfS8+XG4gICAgICAgICksXG4gICAgICAgIHNwaW5uZXJTaXplLFxuICAgICAgICBzcGlubmVyVGhlbWUsXG4gICAgICAgIHNwaW5uaW5nLFxuICAgICAgfSA9IHByb3BzXG4gICAgICBjb25zdCBjb21wb25lbnRQcm9wcyA9IGNsb25lKHByb3BzLCB7IHdpdGhvdXQ6IE9iamVjdC5rZXlzKFdpdGhTcGluLnByb3BUeXBlcykgfSlcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxDb21wb25lbnQgey4uLmNvbXBvbmVudFByb3BzfVxuICAgICAgICAgICAgICAgICAgIHsuLi57IHNwaW5uZXIgfX1cbiAgICAgICAgPntjaGlsZHJlbn08L0NvbXBvbmVudD5cbiAgICAgIClcbiAgICB9XG4gIH1cblxuICBXaXRoU3Bpbi5wcm9wVHlwZXMgPSB7XG4gICAgLyoqIFNob3cgbG9hZGluZyBzcGlubmVyICovXG4gICAgLyoqIFNwaW5uZXIgaW5zdGFuY2UgKi9cbiAgICBzcGlubmVyOiBQcm9wVHlwZXMubm9kZSxcbiAgICAvKiogU2l6ZSBvZiBzcGlubmVyICovXG4gICAgc3Bpbm5lclNpemU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgLyoqIFRoZW1lIG9mIHRoZSBzcGlubmVyICovXG4gICAgc3Bpbm5lclRoZW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNwaW5uaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgfVxuXG4gIHJldHVybiBXaXRoU3BpblxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3BpblxuIl0sInNvdXJjZVJvb3QiOiIifQ==