{"ast":null,"code":"'use strict';\n\nvar prefixAll = require('inline-style-prefixer/static');\n\nvar CAMEL_REGEX = /-[a-z\\u00E0-\\u00F6\\u00F8-\\u00FE]/g;\n\nvar matchCallback = function matchCallback(match) {\n  return match.slice(1).toUpperCase();\n};\n\nexports.addon = function (renderer) {\n  var decl = renderer.decl;\n\n  renderer.camel = function (prop) {\n    return prop.replace(CAMEL_REGEX, matchCallback);\n  };\n\n  renderer.prefix = function (prop, value) {\n    var obj = {};\n    obj[renderer.camel(prop)] = value;\n    obj = prefixAll(obj);\n    var result = {};\n\n    for (var propPrefixed in obj) {\n      value = obj[propPrefixed];\n\n      if (propPrefixed.slice(0, 2) === 'ms') {\n        propPrefixed = 'M' + propPrefixed.slice(1);\n      }\n\n      propPrefixed = renderer.kebab(propPrefixed);\n\n      if (value instanceof Array) {\n        result[propPrefixed] = value.join(';' + propPrefixed + ':');\n      } else {\n        result[propPrefixed] = value;\n      }\n    }\n\n    return result;\n  };\n\n  renderer.decl = function (prop, value) {\n    var result = renderer.prefix(prop, value);\n    var returned = '';\n    Object.keys(result).forEach(function (key) {\n      var str = decl(key, value);\n      returned += str;\n    });\n    return returned;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}