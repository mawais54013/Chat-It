/**
 * Get rotated colors for color
 * @function rotatedColorsFor
 * @param {string} [base='#38E'] - Base color
 * @param {Object} [options={}] - Optional settings
 * @param {number} [options.count=12] - Count of colors
 * @returns {string[]} Colors
 */
'use strict';

var _require = require('acolor'),
    rotate = _require.rotate;
/** @lends rotatedColorsFor */


function rotatedColorsFor() {
  var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#38E';
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$count = options.count,
      count = _options$count === void 0 ? 12 : _options$count;
  return new Array(count).fill(null).map(function (_, i, arr) {
    return rotate(base, parseInt(360 * i / arr.length));
  });
}

module.exports = rotatedColorsFor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdGF0ZWRDb2xvcnNGb3IuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInJvdGF0ZSIsInJvdGF0ZWRDb2xvcnNGb3IiLCJiYXNlIiwib3B0aW9ucyIsImNvdW50IiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiXyIsImkiLCJhcnIiLCJwYXJzZUludCIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztlQUVtQkEsT0FBTyxDQUFDLFFBQUQsQztJQUFsQkMsTSxZQUFBQSxNO0FBRVI7OztBQUNBLFNBQVNDLGdCQUFULEdBQXdEO0FBQUEsTUFBN0JDLElBQTZCLHVFQUF0QixNQUFzQjtBQUFBLE1BQWRDLE9BQWMsdUVBQUosRUFBSTtBQUFBLHVCQUMvQkEsT0FEK0IsQ0FDOUNDLEtBRDhDO0FBQUEsTUFDOUNBLEtBRDhDLCtCQUN0QyxFQURzQztBQUV0RCxTQUFPLElBQUlDLEtBQUosQ0FBVUQsS0FBVixFQUFpQkUsSUFBakIsQ0FBc0IsSUFBdEIsRUFDSkMsR0FESSxDQUNBLFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFPQyxHQUFQO0FBQUEsV0FBZVYsTUFBTSxDQUFDRSxJQUFELEVBQU9TLFFBQVEsQ0FBQyxNQUFNRixDQUFOLEdBQVVDLEdBQUcsQ0FBQ0UsTUFBZixDQUFmLENBQXJCO0FBQUEsR0FEQSxDQUFQO0FBRUQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsZ0JBQWpCIiwic291cmNlUm9vdCI6Ii4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHJvdGF0ZWQgY29sb3JzIGZvciBjb2xvclxuICogQGZ1bmN0aW9uIHJvdGF0ZWRDb2xvcnNGb3JcbiAqIEBwYXJhbSB7c3RyaW5nfSBbYmFzZT0nIzM4RSddIC0gQmFzZSBjb2xvclxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSAtIE9wdGlvbmFsIHNldHRpbmdzXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuY291bnQ9MTJdIC0gQ291bnQgb2YgY29sb3JzXG4gKiBAcmV0dXJucyB7c3RyaW5nW119IENvbG9yc1xuICovXG4ndXNlIHN0cmljdCdcblxuY29uc3QgeyByb3RhdGUgfSA9IHJlcXVpcmUoJ2Fjb2xvcicpXG5cbi8qKiBAbGVuZHMgcm90YXRlZENvbG9yc0ZvciAqL1xuZnVuY3Rpb24gcm90YXRlZENvbG9yc0ZvciAoYmFzZSA9ICcjMzhFJywgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgY291bnQgPSAxMiB9ID0gb3B0aW9uc1xuICByZXR1cm4gbmV3IEFycmF5KGNvdW50KS5maWxsKG51bGwpXG4gICAgLm1hcCgoXywgaSwgYXJyKSA9PiByb3RhdGUoYmFzZSwgcGFyc2VJbnQoMzYwICogaSAvIGFyci5sZW5ndGgpKSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3RhdGVkQ29sb3JzRm9yXG4iXX0=