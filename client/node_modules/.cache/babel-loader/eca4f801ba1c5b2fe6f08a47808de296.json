{"ast":null,"code":"/**\n * @function wrapStack\n * @param {...function} components\n * @returns {string[]} - Stack names\n */\n'use strict';\n/** @lends wrapStack */\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction wrapStack() {\n  for (var _len = arguments.length, components = new Array(_len), _key = 0; _key < _len; _key++) {\n    components[_key] = arguments[_key];\n  }\n\n  return components.reduce(function (wrapStack, component) {\n    return [].concat(_toConsumableArray(wrapStack), _toConsumableArray([].concat(component.wrapStack || component.displayName || component.name || 'Anonymous')));\n  }, []);\n}\n\nwrapStack.nameFor = function (Component) {\n  var hasStack = Component.wrapStack && Component.wrapStack.length > 0;\n\n  if (hasStack) {\n    return Component.wrapStack.join(' < ');\n  }\n\n  return Component.displayName || Component.name;\n};\n\nwrapStack.trueNameFor = function (Component) {\n  return _toConsumableArray(Component.wrapStack || []).reverse()[0] || Component.displayName || Component.name;\n};\n\nexport default wrapStack;","map":null,"metadata":{},"sourceType":"module"}