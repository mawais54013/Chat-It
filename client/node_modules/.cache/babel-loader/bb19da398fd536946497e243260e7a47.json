{"ast":null,"code":"import _assertThisInitialized from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport PubNubReact from 'pubnub-react';\nvar now = new Date().getTime();\nvar username = ['user', now].join('-');\nvar styles = {\n  card: {\n    maxWidth: 345,\n    margin: '0 auto',\n\n    /* Added */\n    float: 'none',\n\n    /* Added */\n    marginbottom: '10px'\n    /* Added */\n\n  },\n  openCard: {\n    maxWidth: 200\n  },\n  openMedia: {\n    height: 80\n  },\n  media: {\n    objectFit: 'cover'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  }\n};\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    _classCallCheck(this, Message);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Message).apply(this, arguments));\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" \", this.props.uuid, \": \", this.props.text);\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.sendChat = function () {\n      if (_this.state.chatInput) {\n        _this.pubnub.publish({\n          message: {\n            text: _this.state.chatInput,\n            uuid: username\n          },\n          channel: 'chatting'\n        });\n\n        _this.setState({\n          chatInput: ''\n        });\n      }\n    };\n\n    _this.setChatInput = function (event) {\n      _this.setState({\n        chatInput: event.target.value\n      });\n    };\n\n    _this.handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.sendChat();\n      }\n    };\n\n    _this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-af9e408a-d4a8-473c-b591-81402cdf9aaf',\n      subscribeKey: 'sub-c-7e76d5bc-2658-11e9-9508-c2e2c4d7488a',\n      uuid: username\n    });\n    _this.state = {\n      messages: [],\n      chatInput: ''\n    };\n\n    _this.pubnub.init(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pubnub.subscribe({\n        channels: ['chatting'],\n        withPresence: true\n      });\n      this.pubnub.getMessage('chatting', function (msg) {\n        _this2.pubnub.hereNow({\n          channels: [\"chatting\"],\n          includeUUIDs: true,\n          includeState: true\n        }, function (status, response) {\n          console.log(status);\n          console.log(response);\n        });\n\n        var _msg$message = msg.message,\n            text = _msg$message.text,\n            uuid = _msg$message.uuid;\n        var messages = _this2.state.messages;\n        messages.push(React.createElement(Message, {\n          key: _this2.state.messages.length,\n          uuid: uuid,\n          text: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }));\n\n        _this2.setState({\n          messages: messages\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pubnub.unsubscribe({\n        channels: ['chatting']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"headline\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Messages\"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.messages))))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter a message\",\n        value: this.state.chatInput,\n        className: classes.input,\n        onKeyDown: this.handleKeyPress,\n        onChange: this.setChatInput,\n        inputProps: {\n          'aria-label': 'Description'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Github\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Exit\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default ChatArea;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/Components/Chat.js"],"names":["React","Component","ReactDOM","withStyles","Card","CardActions","CardContent","List","ListItem","Button","Typography","Input","PubNubReact","now","Date","getTime","username","join","styles","card","maxWidth","margin","float","marginbottom","openCard","openMedia","height","media","objectFit","container","display","flexWrap","Message","props","uuid","text","App","sendChat","state","chatInput","pubnub","publish","message","channel","setState","setChatInput","event","target","value","handleKeyPress","e","key","publishKey","subscribeKey","messages","init","subscribe","channels","withPresence","getMessage","msg","hereNow","includeUUIDs","includeState","status","response","console","log","push","length","unsubscribe","classes","root","input","ChatArea"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\n\nimport PubNubReact from 'pubnub-react';\n\n\nconst now = new Date().getTime();\nconst username = ['user', now].join('-');\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n    margin: '0 auto', /* Added */\n    float: 'none', /* Added */\n    marginbottom: '10px' /* Added */\n  },\n  openCard:{\n    maxWidth: 200\n  },\n  openMedia: {\n    height: 80,\n  },\n  media: {\n    objectFit: 'cover',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n};\n\nclass Message extends Component{\n\n  render () {\n      return ( \n        <div > { this.props.uuid }: { this.props.text } \n        </div>\n      );\n  }\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n        publishKey: 'pub-c-af9e408a-d4a8-473c-b591-81402cdf9aaf',\n        subscribeKey: 'sub-c-7e76d5bc-2658-11e9-9508-c2e2c4d7488a',\n        uuid: username\n    });\n\n    this.state = {\n      messages: [],\n      chatInput: '' \n    };\n    this.pubnub.init(this);\n  }\n\n  sendChat = () => {\n    if (this.state.chatInput) {\n        this.pubnub.publish({\n            message: {\n              text: this.state.chatInput,\n              uuid: username\n            },\n            channel: 'chatting'\n        });\n        this.setState({ chatInput: '' })\n    }\n\n  }\n\n  setChatInput = (event) => {\n    this.setState({ chatInput: event.target.value })\n  }\n\n  componentDidMount() {\n    this.pubnub.subscribe({\n        channels: ['chatting'],\n        withPresence: true\n    });\n\n    this.pubnub.getMessage('chatting', (msg) => {\n          this.pubnub.hereNow(\n            {\n                channels: [\"chatting\"],\n                includeUUIDs: true,\n                includeState: true\n            },\n            (status, response) => {\n                console.log(status);\n                console.log(response);\n            }\n        );\n        const {text, uuid} = msg.message\n        let messages = this.state.messages;\n        messages.push(\n          <Message key={ this.state.messages.length } uuid={ uuid } text={ text }/>\n        );\n        this.setState({\n            messages: messages\n        });\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n        this.sendChat();\n    }\n  }\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n        channels: ['chatting']\n    });\n  }\n\n  render(){\n    const { classes } = this.props;\n    return(\n      <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n              Messages\n            </Typography>\n              <div className={classes.root}>\n                <List component=\"nav\">\n                  <ListItem>\n                  <Typography component=\"div\">\n                    { this.state.messages }\n                  </Typography>\n                  </ListItem>\n                </List>\n              </div>\n          </CardContent>\n          <CardActions>\n            <Input\n              placeholder=\"Enter a message\"\n              value={this.state.chatInput}\n              className={classes.input}\n              onKeyDown={this.handleKeyPress}\n              onChange={this.setChatInput}\n              inputProps={{\n                'aria-label': 'Description',\n              }}\n            />\n            <Button size=\"small\" color=\"primary\">\n              Github\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              Exit\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    }\n}\nexport default ChatArea;"]},"metadata":{},"sourceType":"module"}