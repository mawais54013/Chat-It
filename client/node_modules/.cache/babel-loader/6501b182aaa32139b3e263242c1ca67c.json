{"ast":null,"code":"export var INITED = 'INITED';\nexport var PLAYING = 'PLAYING';\nexport var PAUSED = 'PAUSED';\nexport var STOPPED = 'STOPPED';\n\nvar TimerState =\n/** @class */\nfunction () {\n  function TimerState(onChangeStatus) {\n    var _this = this;\n\n    if (onChangeStatus === void 0) {\n      onChangeStatus = function onChangeStatus(obj) {};\n    }\n\n    this.state = INITED;\n\n    this.onChange = function () {\n      return onChangeStatus({\n        timerState: _this.state\n      });\n    };\n\n    this.state = INITED;\n  }\n\n  TimerState.prototype.getState = function () {\n    return this.state;\n  };\n\n  TimerState.prototype.setInited = function () {\n    if (this.state === INITED) {\n      return false;\n    }\n\n    this.state = INITED;\n    this.onChange();\n    return true;\n  };\n\n  TimerState.prototype.isInited = function () {\n    return this.state === INITED;\n  };\n\n  TimerState.prototype.setPlaying = function () {\n    if (this.state === PLAYING) {\n      return false;\n    }\n\n    this.state = PLAYING;\n    this.onChange();\n    return true;\n  };\n\n  TimerState.prototype.isPlaying = function () {\n    return this.state === PLAYING;\n  };\n\n  TimerState.prototype.setPaused = function () {\n    if (this.state !== PLAYING) {\n      return false;\n    }\n\n    this.state = PAUSED;\n    this.onChange();\n    return true;\n  };\n\n  TimerState.prototype.isPaused = function () {\n    return this.state === PAUSED;\n  };\n\n  TimerState.prototype.setStopped = function () {\n    if (this.state === INITED) {\n      return false;\n    }\n\n    this.state = STOPPED;\n    this.onChange();\n    return true;\n  };\n\n  TimerState.prototype.isStopped = function () {\n    return this.state === STOPPED;\n  };\n\n  return TimerState;\n}();\n\nexport default TimerState;","map":null,"metadata":{},"sourceType":"module"}