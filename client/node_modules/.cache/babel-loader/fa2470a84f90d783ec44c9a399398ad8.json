{"ast":null,"code":"import _toConsumableArray from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js\";\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Header from \"../Components/header\";\n// import rand from \"random-key\";\n// import { database } from \"firebase\";\n// import \"./home.css\";\n// export default class HomePage extends React.Component {\n//   state = {\n//     key: rand.generate(5),\n//     num: null\n//   };\n//   componentDidMount = () => {\n//     database()\n//       .ref(\"code-sessions\")\n//       .on(\"value\", s => {\n//         this.setState({ num: s.numChildren() });\n//       });\n//   };\n//   onNewGround = () => {\n//     database()\n//       .ref(\"code-sessions/\" + this.state.key)\n//       .set({\n//         content: \"Happy Coding\",\n//         createdon: Date()\n//       });\n//     this.props.history.push(\"/\" + this.state.key);\n//   };\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header\n//           extras={this.state.num ? `Total ${this.state.num}+ Shares` : null}\n//         />\n//         <div className=\"homepage\">\n//           <p className=\"title\">\n//             <br />\n//             Share Code within <span className=\"highlight\">Realtime</span>.\n//             <br />\n//             Anywhere, Anytime and with <span className=\"highlight\">Anyone</span>\n//             .\n//           </p>\n//           <p className=\"sub-title\">\n//             Simple Realtime Code Sharing Editor App. Using Firebase Realtime\n//             Database and Code Mirror as Editor.\n//           </p>\n//           <div>\n//             <button className=\"btn\" onClick={this.onNewGround}>\n//               Share Code\n//             </button>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\nimport React, { Component } from 'react';\nimport LioWebRTC from 'liowebrtc';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.addVideo = function (stream, peer) {\n      _this.setState({\n        peers: [].concat(_toConsumableArray(_this.state.peers), [peer])\n      }, function () {\n        _this.webrtc.attachStream(stream, _this.remoteVideos[peer.id]);\n      });\n    };\n\n    _this.removeVideo = function (peer) {\n      _this.setState({\n        peers: _this.state.peers.filter(function (p) {\n          return !p.closed;\n        })\n      });\n    };\n\n    _this.handleConnectionError = function (peer) {\n      var pc = peer.pc;\n      console.log('had local relay candidate', pc.hadLocalRelayCandidate);\n      console.log('had remote relay candidate', pc.hadRemoteRelayCandidate);\n    };\n\n    _this.readyToJoin = function () {\n      // Starts the process of joining a room.\n      _this.webrtc.joinRoom(_this.state.roomID, function (err, desc) {});\n    };\n\n    _this.generateRemotes = function () {\n      return _this.state.peers.map(function (p) {\n        return React.createElement(\"div\", {\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id:\n          /* The video container needs a special id */\n          \"\".concat(_this.webrtc.getContainerId(p)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          // Important: The video element needs both an id and ref\n          id: _this.webrtc.getDomId(p),\n          ref: function ref(v) {\n            return _this.remoteVideos[p.id] = v;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, p.nick));\n      });\n    };\n\n    _this.disconnect = function () {\n      _this.webrtc.quit();\n    };\n\n    _this.state = {\n      nick: _this.props.nick,\n      roomID: \"party-\".concat(_this.props.roomName),\n      muted: false,\n      camPaused: false,\n      peers: []\n    };\n    _this.remoteVideos = {};\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.webrtc = new LioWebRTC({\n        // The url for your signaling server. Use your own in production!\n        url: 'https://sm1.lio.app:443/',\n        // The local video ref set within your render function\n        localVideoEl: this.localVid,\n        // Immediately request camera access\n        autoRequestMedia: true,\n        // Optional: nickname\n        nick: this.state.nick,\n        debug: true\n      });\n      this.webrtc.on('peerStreamAdded', this.addVideo);\n      this.webrtc.on('removedPeer', this.removeVideo);\n      this.webrtc.on('ready', this.readyToJoin);\n      this.webrtc.on('iceFailed', this.handleConnectionError);\n      this.webrtc.on('connectivityError', this.handleConnectionError);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        // Important: The local video element needs to have a ref\n        ref: function ref(vid) {\n          _this2.localVid = vid;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.nick)), this.generateRemotes());\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Home.js"],"names":["React","Component","LioWebRTC","Home","props","addVideo","stream","peer","setState","peers","state","webrtc","attachStream","remoteVideos","id","removeVideo","filter","p","closed","handleConnectionError","pc","console","log","hadLocalRelayCandidate","hadRemoteRelayCandidate","readyToJoin","joinRoom","roomID","err","desc","generateRemotes","map","getContainerId","getDomId","v","nick","disconnect","quit","roomName","muted","camPaused","url","localVideoEl","localVid","autoRequestMedia","debug","on","vid"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Header from \"../Components/header\";\n// import rand from \"random-key\";\n// import { database } from \"firebase\";\n// import \"./home.css\";\n\n\n// export default class HomePage extends React.Component {\n  \n//   state = {\n//     key: rand.generate(5),\n//     num: null\n//   };\n//   componentDidMount = () => {\n//     database()\n//       .ref(\"code-sessions\")\n//       .on(\"value\", s => {\n//         this.setState({ num: s.numChildren() });\n//       });\n//   };\n\n//   onNewGround = () => {\n//     database()\n//       .ref(\"code-sessions/\" + this.state.key)\n//       .set({\n//         content: \"Happy Coding\",\n//         createdon: Date()\n//       });\n//     this.props.history.push(\"/\" + this.state.key);\n//   };\n//   render() {\n    \n//     return (\n//       <React.Fragment>\n//         <Header\n//           extras={this.state.num ? `Total ${this.state.num}+ Shares` : null}\n//         />\n//         <div className=\"homepage\">\n//           <p className=\"title\">\n//             <br />\n//             Share Code within <span className=\"highlight\">Realtime</span>.\n//             <br />\n//             Anywhere, Anytime and with <span className=\"highlight\">Anyone</span>\n//             .\n//           </p>\n\n//           <p className=\"sub-title\">\n//             Simple Realtime Code Sharing Editor App. Using Firebase Realtime\n//             Database and Code Mirror as Editor.\n//           </p>\n//           <div>\n//             <button className=\"btn\" onClick={this.onNewGround}>\n//               Share Code\n//             </button>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\nimport React, { Component } from 'react';\nimport LioWebRTC from 'liowebrtc';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nick: this.props.nick,\n      roomID: `party-${this.props.roomName}`,\n      muted: false,\n      camPaused: false,\n      peers: []\n    };\n    this.remoteVideos = {};\n  }\n\n  componentDidMount() {\n    this.webrtc = new LioWebRTC({\n      // The url for your signaling server. Use your own in production!\n      url: 'https://sm1.lio.app:443/',\n      // The local video ref set within your render function\n      localVideoEl: this.localVid,\n      // Immediately request camera access\n      autoRequestMedia: true,\n      // Optional: nickname\n      nick: this.state.nick,\n      debug: true\n    });\n\n    this.webrtc.on('peerStreamAdded', this.addVideo);\n    this.webrtc.on('removedPeer', this.removeVideo);\n    this.webrtc.on('ready', this.readyToJoin);\n    this.webrtc.on('iceFailed', this.handleConnectionError);\n    this.webrtc.on('connectivityError', this.handleConnectionError);\n  }\n\n  addVideo = (stream, peer) => {\n    this.setState({ peers: [...this.state.peers, peer] }, () => {\n      this.webrtc.attachStream(stream, this.remoteVideos[peer.id]);\n    });\n  }\n\n  removeVideo = (peer) => {\n    this.setState({\n      peers: this.state.peers.filter(p => !p.closed)\n    });\n  }\n\n  handleConnectionError = (peer) => {\n    const pc = peer.pc;\n    console.log('had local relay candidate', pc.hadLocalRelayCandidate);\n    console.log('had remote relay candidate', pc.hadRemoteRelayCandidate);\n  }\n\n  readyToJoin = () => {\n    // Starts the process of joining a room.\n    this.webrtc.joinRoom(this.state.roomID, (err, desc) => {\n    });\n  }\n\n  // Show fellow peers in the room\n  generateRemotes = () => this.state.peers.map((p) => (\n    <div key={p.id}>\n      <div id={/* The video container needs a special id */ `${this.webrtc.getContainerId(p)}`}>\n        <video\n          // Important: The video element needs both an id and ref\n          id={this.webrtc.getDomId(p)}\n          ref={(v) => this.remoteVideos[p.id] = v}\n          />\n      </div>\n        <p>{p.nick}</p>\n    </div>\n    ));\n\n  disconnect = () => {\n    this.webrtc.quit();\n  }\n\n  componentWillUnmount() {\n    this.disconnect();\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n            <video\n              // Important: The local video element needs to have a ref\n              ref={(vid) => { this.localVid = vid; }}\n            />\n            <p>{this.state.nick}</p>\n        </div>\n        {this.generateRemotes()}\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}