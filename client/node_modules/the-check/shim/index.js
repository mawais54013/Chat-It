// Code generated by coz. DO NOT EDIT.

/**
 * Check utility for the-framework
 * @module the-check
 */
'use strict';

var canTouch_ = require('./canTouch');

var hasBin_ = require('./hasBin');

var isBrowser_ = require('./isBrowser');

var isChrome_ = require('./isChrome');

var isFirefox_ = require('./isFirefox');

var isMacOS_ = require('./isMacOS');

var isProduction_ = require('./isProduction');

var isiOS_ = require('./isiOS');

var unlessProduction_ = require('./unlessProduction'); // `module.exports` overrides these `exports.*`, but still needs them for lebab (https://github.com/lebab/lebab)


exports.canTouch = canTouch_;
exports.hasBin = hasBin_;
exports.isBrowser = isBrowser_;
exports.isChrome = isChrome_;
exports.isFirefox = isFirefox_;
exports.isMacOS = isMacOS_;
exports.isProduction = isProduction_;
exports.isiOS = isiOS_;
exports.unlessProduction = unlessProduction_;
module.exports = {
  canTouch: canTouch_,
  hasBin: hasBin_,
  isBrowser: isBrowser_,
  isChrome: isChrome_,
  isFirefox: isFirefox_,
  isMacOS: isMacOS_,
  isProduction: isProduction_,
  isiOS: isiOS_,
  unlessProduction: unlessProduction_
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNhblRvdWNoXyIsInJlcXVpcmUiLCJoYXNCaW5fIiwiaXNCcm93c2VyXyIsImlzQ2hyb21lXyIsImlzRmlyZWZveF8iLCJpc01hY09TXyIsImlzUHJvZHVjdGlvbl8iLCJpc2lPU18iLCJ1bmxlc3NQcm9kdWN0aW9uXyIsImV4cG9ydHMiLCJjYW5Ub3VjaCIsImhhc0JpbiIsImlzQnJvd3NlciIsImlzQ2hyb21lIiwiaXNGaXJlZm94IiwiaXNNYWNPUyIsImlzUHJvZHVjdGlvbiIsImlzaU9TIiwidW5sZXNzUHJvZHVjdGlvbiIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7QUFJQTs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQUNBLElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxJQUFNRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQUNBLElBQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBTUssUUFBUSxHQUFHTCxPQUFPLENBQUMsV0FBRCxDQUF4Qjs7QUFDQSxJQUFNTSxhQUFhLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFDQSxJQUFNTyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1RLGlCQUFpQixHQUFHUixPQUFPLENBQUMsb0JBQUQsQ0FBakMsQyxDQUVBOzs7QUFDQVMsT0FBTyxDQUFDQyxRQUFSLEdBQW1CWCxTQUFuQjtBQUNBVSxPQUFPLENBQUNFLE1BQVIsR0FBaUJWLE9BQWpCO0FBQ0FRLE9BQU8sQ0FBQ0csU0FBUixHQUFvQlYsVUFBcEI7QUFDQU8sT0FBTyxDQUFDSSxRQUFSLEdBQW1CVixTQUFuQjtBQUNBTSxPQUFPLENBQUNLLFNBQVIsR0FBb0JWLFVBQXBCO0FBQ0FLLE9BQU8sQ0FBQ00sT0FBUixHQUFrQlYsUUFBbEI7QUFDQUksT0FBTyxDQUFDTyxZQUFSLEdBQXVCVixhQUF2QjtBQUNBRyxPQUFPLENBQUNRLEtBQVIsR0FBZ0JWLE1BQWhCO0FBQ0FFLE9BQU8sQ0FBQ1MsZ0JBQVIsR0FBMkJWLGlCQUEzQjtBQUVBVyxNQUFNLENBQUNWLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsUUFBUSxFQUFFWCxTQURLO0FBRWZZLEVBQUFBLE1BQU0sRUFBRVYsT0FGTztBQUdmVyxFQUFBQSxTQUFTLEVBQUVWLFVBSEk7QUFJZlcsRUFBQUEsUUFBUSxFQUFFVixTQUpLO0FBS2ZXLEVBQUFBLFNBQVMsRUFBRVYsVUFMSTtBQU1mVyxFQUFBQSxPQUFPLEVBQUVWLFFBTk07QUFPZlcsRUFBQUEsWUFBWSxFQUFFVixhQVBDO0FBUWZXLEVBQUFBLEtBQUssRUFBRVYsTUFSUTtBQVNmVyxFQUFBQSxnQkFBZ0IsRUFBRVY7QUFUSCxDQUFqQiIsInNvdXJjZVJvb3QiOiIuLi9saWIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb2RlIGdlbmVyYXRlZCBieSBjb3ouIERPIE5PVCBFRElULlxuLyoqXG4gKiBDaGVjayB1dGlsaXR5IGZvciB0aGUtZnJhbWV3b3JrXG4gKiBAbW9kdWxlIHRoZS1jaGVja1xuICovXG4ndXNlIHN0cmljdCdcblxuY29uc3QgY2FuVG91Y2hfID0gcmVxdWlyZSgnLi9jYW5Ub3VjaCcpXG5jb25zdCBoYXNCaW5fID0gcmVxdWlyZSgnLi9oYXNCaW4nKVxuY29uc3QgaXNCcm93c2VyXyA9IHJlcXVpcmUoJy4vaXNCcm93c2VyJylcbmNvbnN0IGlzQ2hyb21lXyA9IHJlcXVpcmUoJy4vaXNDaHJvbWUnKVxuY29uc3QgaXNGaXJlZm94XyA9IHJlcXVpcmUoJy4vaXNGaXJlZm94JylcbmNvbnN0IGlzTWFjT1NfID0gcmVxdWlyZSgnLi9pc01hY09TJylcbmNvbnN0IGlzUHJvZHVjdGlvbl8gPSByZXF1aXJlKCcuL2lzUHJvZHVjdGlvbicpXG5jb25zdCBpc2lPU18gPSByZXF1aXJlKCcuL2lzaU9TJylcbmNvbnN0IHVubGVzc1Byb2R1Y3Rpb25fID0gcmVxdWlyZSgnLi91bmxlc3NQcm9kdWN0aW9uJylcblxuLy8gYG1vZHVsZS5leHBvcnRzYCBvdmVycmlkZXMgdGhlc2UgYGV4cG9ydHMuKmAsIGJ1dCBzdGlsbCBuZWVkcyB0aGVtIGZvciBsZWJhYiAoaHR0cHM6Ly9naXRodWIuY29tL2xlYmFiL2xlYmFiKVxuZXhwb3J0cy5jYW5Ub3VjaCA9IGNhblRvdWNoX1xuZXhwb3J0cy5oYXNCaW4gPSBoYXNCaW5fXG5leHBvcnRzLmlzQnJvd3NlciA9IGlzQnJvd3Nlcl9cbmV4cG9ydHMuaXNDaHJvbWUgPSBpc0Nocm9tZV9cbmV4cG9ydHMuaXNGaXJlZm94ID0gaXNGaXJlZm94X1xuZXhwb3J0cy5pc01hY09TID0gaXNNYWNPU19cbmV4cG9ydHMuaXNQcm9kdWN0aW9uID0gaXNQcm9kdWN0aW9uX1xuZXhwb3J0cy5pc2lPUyA9IGlzaU9TX1xuZXhwb3J0cy51bmxlc3NQcm9kdWN0aW9uID0gdW5sZXNzUHJvZHVjdGlvbl9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhblRvdWNoOiBjYW5Ub3VjaF8sXG4gIGhhc0JpbjogaGFzQmluXyxcbiAgaXNCcm93c2VyOiBpc0Jyb3dzZXJfLFxuICBpc0Nocm9tZTogaXNDaHJvbWVfLFxuICBpc0ZpcmVmb3g6IGlzRmlyZWZveF8sXG4gIGlzTWFjT1M6IGlzTWFjT1NfLFxuICBpc1Byb2R1Y3Rpb246IGlzUHJvZHVjdGlvbl8sXG4gIGlzaU9TOiBpc2lPU18sXG4gIHVubGVzc1Byb2R1Y3Rpb246IHVubGVzc1Byb2R1Y3Rpb25fLFxufVxuIl19