{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport c from 'classnames';\nimport { EOL } from 'os';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ThemeValues } from 'the-component-constants';\nimport { styleString as _styleString } from 'the-style-util';\n/**\n * Style of the-components\n */\n\nvar TheStyle =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TheStyle, _React$PureComponent);\n\n  function TheStyle() {\n    _classCallCheck(this, TheStyle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TheStyle).apply(this, arguments));\n  }\n\n  _createClass(TheStyle, [{\n    key: \"getChildrenAsString\",\n    value: function getChildrenAsString() {\n      var children = this.props.children;\n\n      if (!children) {\n        return null;\n      }\n\n      return [].concat(children).map(function (child) {\n        return child;\n      }).join(EOL);\n    }\n  }, {\n    key: \"getInnerHTML\",\n    value: function getInnerHTML() {\n      return [this.getStylesAsString(), this.getChildrenAsString()].filter(Boolean).join(EOL);\n    }\n  }, {\n    key: \"getStylesAsString\",\n    value: function getStylesAsString() {\n      var _this$props = this.props,\n          prefix = _this$props.prefix,\n          styles = _this$props.styles;\n\n      if (!styles) {\n        return null;\n      }\n\n      return Object.keys(styles).map(function (selector) {\n        return _styleString([prefix, selector].filter(Boolean).join(' '), styles[selector]);\n      }).filter(Boolean).join(EOL);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var className = props.className,\n          id = props.id,\n          type = props.type;\n      return React.createElement(\"style\", _extends({\n        className: c('the-style', className)\n      }, {\n        id: id,\n        type: type\n      }, {\n        dangerouslySetInnerHTML: {\n          __html: this.getInnerHTML()\n        }\n      }));\n    }\n  }], [{\n    key: \"styles\",\n    value: function styles(values) {\n      return Object(values);\n    }\n    /** @deprecated */\n\n  }, {\n    key: \"styleString\",\n    value: function styleString() {\n      console.warn(\"[TheStyle] TheStyle.styleString is now deprecated\");\n      return _styleString.apply(void 0, arguments);\n    }\n    /** @deprecated */\n\n  }, {\n    key: \"styleStringFromStyles\",\n    value: function styleStringFromStyles(styles) {\n      return _styleString.fromStyles(styles);\n    }\n  }]);\n\n  return TheStyle;\n}(React.PureComponent);\n\nTheStyle.propTypes = {\n  /** CSS class name */\n  className: PropTypes.string,\n\n  /** DOM Id */\n  id: PropTypes.string,\n\n  /** Style selector prefix */\n  prefix: PropTypes.string,\n\n  /** Script type */\n  type: PropTypes.string\n};\nTheStyle.defaultProps = {\n  className: null,\n  id: null,\n  prefix: null,\n  type: null\n};\nTheStyle.displayName = 'TheStyle';\nTheStyle.ThemeValues = ThemeValues;\nexport default TheStyle;","map":null,"metadata":{},"sourceType":"module"}