/**
 * Convert style into style string
 * @function styleString
 * @param {string} selector - Selector string
 * @param {Object} style - Style string
 * @param {string} [atRule=null]
 * @returns {Object} Style object
 */
'use strict';

import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import nanoCSS from 'nano-css';
import { addon as keyframes } from 'nano-css/addon/keyframes';
import { addon as prefixer } from 'nano-css/addon/prefixer';
import { addon as unitless } from 'nano-css/addon/unitless';
import { EOL } from 'os';
/** @lends styleString */

function styleString(selector, style) {
  var atRule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (/^@/.test(selector)) {
    var converted = Object.entries(style).map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          s = _ref2[0],
          sl = _ref2[1];

      return styleString(s, sl);
    }).join(' ');
    return "".concat(selector, " { ").concat(converted, "}");
  }

  var nano = nanoCSS.create({
    client: false
  });
  unitless(nano);
  prefixer(nano);
  keyframes(nano);
  nano.put(selector, style, atRule);
  return String(nano.raw);
}

styleString.fromStyles = function (styles) {
  return Object.keys(styles).map(function (selector) {
    return styleString(selector, styles[selector]);
  }).filter(Boolean).join(EOL);
};

export default styleString;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlU3RyaW5nLmpzIl0sIm5hbWVzIjpbIm5hbm9DU1MiLCJhZGRvbiIsImtleWZyYW1lcyIsInByZWZpeGVyIiwidW5pdGxlc3MiLCJFT0wiLCJzdHlsZVN0cmluZyIsInNlbGVjdG9yIiwic3R5bGUiLCJhdFJ1bGUiLCJ0ZXN0IiwiY29udmVydGVkIiwiT2JqZWN0IiwiZW50cmllcyIsIm1hcCIsInMiLCJzbCIsImpvaW4iLCJuYW5vIiwiY3JlYXRlIiwiY2xpZW50IiwicHV0IiwiU3RyaW5nIiwicmF3IiwiZnJvbVN0eWxlcyIsInN0eWxlcyIsImtleXMiLCJmaWx0ZXIiLCJCb29sZWFuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7O0FBRUEsT0FBT0EsT0FBUCxNQUFvQixVQUFwQjtBQUNBLFNBQVFDLEtBQUssSUFBSUMsU0FBakIsUUFBaUMsMEJBQWpDO0FBQ0EsU0FBUUQsS0FBSyxJQUFJRSxRQUFqQixRQUFnQyx5QkFBaEM7QUFDQSxTQUFRRixLQUFLLElBQUlHLFFBQWpCLFFBQWdDLHlCQUFoQztBQUNBLFNBQVFDLEdBQVIsUUFBa0IsSUFBbEI7QUFFQTs7QUFDQSxTQUFTQyxXQUFULENBQXFCQyxRQUFyQixFQUErQkMsS0FBL0IsRUFBcUQ7QUFBQSxNQUFmQyxNQUFlLHVFQUFOLElBQU07O0FBQ25ELE1BQUksS0FBS0MsSUFBTCxDQUFVSCxRQUFWLENBQUosRUFBeUI7QUFDdkIsUUFBTUksU0FBUyxHQUFHQyxNQUFNLENBQUNDLE9BQVAsQ0FBZUwsS0FBZixFQUNmTSxHQURlLENBQ1g7QUFBQTtBQUFBLFVBQUVDLENBQUY7QUFBQSxVQUFLQyxFQUFMOztBQUFBLGFBQWFWLFdBQVcsQ0FBQ1MsQ0FBRCxFQUFJQyxFQUFKLENBQXhCO0FBQUEsS0FEVyxFQUVmQyxJQUZlLENBRVYsR0FGVSxDQUFsQjtBQUdBLHFCQUFVVixRQUFWLGdCQUF3QkksU0FBeEI7QUFDRDs7QUFDRCxNQUFNTyxJQUFJLEdBQUdsQixPQUFPLENBQUNtQixNQUFSLENBQWU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FBZixDQUFiO0FBQ0FoQixFQUFBQSxRQUFRLENBQUNjLElBQUQsQ0FBUjtBQUNBZixFQUFBQSxRQUFRLENBQUNlLElBQUQsQ0FBUjtBQUNBaEIsRUFBQUEsU0FBUyxDQUFDZ0IsSUFBRCxDQUFUO0FBQ0FBLEVBQUFBLElBQUksQ0FBQ0csR0FBTCxDQUFTZCxRQUFULEVBQW1CQyxLQUFuQixFQUEwQkMsTUFBMUI7QUFDQSxTQUFPYSxNQUFNLENBQUNKLElBQUksQ0FBQ0ssR0FBTixDQUFiO0FBQ0Q7O0FBRURqQixXQUFXLENBQUNrQixVQUFaLEdBQXlCLFVBQUNDLE1BQUQsRUFBWTtBQUNuQyxTQUFPYixNQUFNLENBQUNjLElBQVAsQ0FBWUQsTUFBWixFQUNKWCxHQURJLENBQ0EsVUFBQ1AsUUFBRDtBQUFBLFdBQWNELFdBQVcsQ0FBQ0MsUUFBRCxFQUFXa0IsTUFBTSxDQUFDbEIsUUFBRCxDQUFqQixDQUF6QjtBQUFBLEdBREEsRUFFSm9CLE1BRkksQ0FFR0MsT0FGSCxFQUdKWCxJQUhJLENBR0NaLEdBSEQsQ0FBUDtBQUlELENBTEQ7O0FBT0EsZUFBZUMsV0FBZiIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgc3R5bGUgaW50byBzdHlsZSBzdHJpbmdcbiAqIEBmdW5jdGlvbiBzdHlsZVN0cmluZ1xuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yIC0gU2VsZWN0b3Igc3RyaW5nXG4gKiBAcGFyYW0ge09iamVjdH0gc3R5bGUgLSBTdHlsZSBzdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBbYXRSdWxlPW51bGxdXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBTdHlsZSBvYmplY3RcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBuYW5vQ1NTIGZyb20gJ25hbm8tY3NzJztcbmltcG9ydCB7YWRkb24gYXMga2V5ZnJhbWVzfSBmcm9tICduYW5vLWNzcy9hZGRvbi9rZXlmcmFtZXMnO1xuaW1wb3J0IHthZGRvbiBhcyBwcmVmaXhlcn0gZnJvbSAnbmFuby1jc3MvYWRkb24vcHJlZml4ZXInO1xuaW1wb3J0IHthZGRvbiBhcyB1bml0bGVzc30gZnJvbSAnbmFuby1jc3MvYWRkb24vdW5pdGxlc3MnO1xuaW1wb3J0IHtFT0x9IGZyb20gJ29zJztcblxuLyoqIEBsZW5kcyBzdHlsZVN0cmluZyAqL1xuZnVuY3Rpb24gc3R5bGVTdHJpbmcoc2VsZWN0b3IsIHN0eWxlLCBhdFJ1bGUgPSBudWxsKSB7XG4gIGlmICgvXkAvLnRlc3Qoc2VsZWN0b3IpKSB7XG4gICAgY29uc3QgY29udmVydGVkID0gT2JqZWN0LmVudHJpZXMoc3R5bGUpXG4gICAgICAubWFwKChbcywgc2xdKSA9PiBzdHlsZVN0cmluZyhzLCBzbCkpXG4gICAgICAuam9pbignICcpXG4gICAgcmV0dXJuIGAke3NlbGVjdG9yfSB7ICR7Y29udmVydGVkfX1gXG4gIH1cbiAgY29uc3QgbmFubyA9IG5hbm9DU1MuY3JlYXRlKHsgY2xpZW50OiBmYWxzZSB9KVxuICB1bml0bGVzcyhuYW5vKVxuICBwcmVmaXhlcihuYW5vKVxuICBrZXlmcmFtZXMobmFubylcbiAgbmFuby5wdXQoc2VsZWN0b3IsIHN0eWxlLCBhdFJ1bGUpXG4gIHJldHVybiBTdHJpbmcobmFuby5yYXcpXG59XG5cbnN0eWxlU3RyaW5nLmZyb21TdHlsZXMgPSAoc3R5bGVzKSA9PiB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhzdHlsZXMpXG4gICAgLm1hcCgoc2VsZWN0b3IpID0+IHN0eWxlU3RyaW5nKHNlbGVjdG9yLCBzdHlsZXNbc2VsZWN0b3JdKSlcbiAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgLmpvaW4oRU9MKVxufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsZVN0cmluZztcbiJdfQ==