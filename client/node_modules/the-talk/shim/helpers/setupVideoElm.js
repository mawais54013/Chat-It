/**
 * @function setupVideoElm
 */
'use strict';
/** @lends setupVideoElm */

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

function setupVideoElm(_x) {
  return _setupVideoElm.apply(this, arguments);
}

function _setupVideoElm() {
  _setupVideoElm = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(video) {
    var options,
        _options$local,
        local,
        stream,
        _args2 = arguments;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
            _options$local = options.local, local = _options$local === void 0 ? false : _options$local, stream = options.stream;

            if (local) {
              video.setAttribute('muted', '');
            }

            video.setAttribute('playsinline', '');
            video.setAttribute('autoplay', '');
            video.setAttribute('controls', '');
            setTimeout(
            /*#__PURE__*/
            (0, _asyncToGenerator2.default)(
            /*#__PURE__*/
            _regenerator.default.mark(function _callee() {
              return _regenerator.default.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      video.removeAttribute('controls');
                      video.srcObject = stream;

                      if (!video.paused) {
                        _context.next = 10;
                        break;
                      }

                      _context.prev = 3;
                      _context.next = 6;
                      return video.play();

                    case 6:
                      _context.next = 10;
                      break;

                    case 8:
                      _context.prev = 8;
                      _context.t0 = _context["catch"](3);

                    case 10:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this, [[3, 8]]);
            })), 1);

          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return _setupVideoElm.apply(this, arguments);
}

var _default = setupVideoElm;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHVwVmlkZW9FbG0uanN4Il0sIm5hbWVzIjpbInNldHVwVmlkZW9FbG0iLCJ2aWRlbyIsIm9wdGlvbnMiLCJsb2NhbCIsInN0cmVhbSIsInNldEF0dHJpYnV0ZSIsInNldFRpbWVvdXQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzcmNPYmplY3QiLCJwYXVzZWQiLCJwbGF5Il0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7OztTQUNlQSxhOzs7Ozs7OzRCQUFmLGtCQUE4QkMsS0FBOUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXFDQyxZQUFBQSxPQUFyQyw4REFBK0MsRUFBL0M7QUFBQSw2QkFDb0NBLE9BRHBDLENBQ1VDLEtBRFYsRUFDVUEsS0FEViwrQkFDa0IsS0FEbEIsbUJBQ3lCQyxNQUR6QixHQUNvQ0YsT0FEcEMsQ0FDeUJFLE1BRHpCOztBQUVFLGdCQUFJRCxLQUFKLEVBQVc7QUFDVEYsY0FBQUEsS0FBSyxDQUFDSSxZQUFOLENBQW1CLE9BQW5CLEVBQTRCLEVBQTVCO0FBQ0Q7O0FBQ0RKLFlBQUFBLEtBQUssQ0FBQ0ksWUFBTixDQUFtQixhQUFuQixFQUFrQyxFQUFsQztBQUNBSixZQUFBQSxLQUFLLENBQUNJLFlBQU4sQ0FBbUIsVUFBbkIsRUFBK0IsRUFBL0I7QUFDQUosWUFBQUEsS0FBSyxDQUFDSSxZQUFOLENBQW1CLFVBQW5CLEVBQStCLEVBQS9CO0FBQ0FDLFlBQUFBLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FBQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1RMLHNCQUFBQSxLQUFLLENBQUNNLGVBQU4sQ0FBc0IsVUFBdEI7QUFDQU4sc0JBQUFBLEtBQUssQ0FBQ08sU0FBTixHQUFrQkosTUFBbEI7O0FBRlMsMkJBR0xILEtBQUssQ0FBQ1EsTUFIRDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsNkJBS0NSLEtBQUssQ0FBQ1MsSUFBTixFQUxEOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFBRCxJQVVQLENBVk8sQ0FBVjs7QUFSRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O2VBcUJlVixhIiwic291cmNlUm9vdCI6Ii4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZ1bmN0aW9uIHNldHVwVmlkZW9FbG1cbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbi8qKiBAbGVuZHMgc2V0dXBWaWRlb0VsbSAqL1xuYXN5bmMgZnVuY3Rpb24gc2V0dXBWaWRlb0VsbSAodmlkZW8sIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7IGxvY2FsID0gZmFsc2UsIHN0cmVhbSB9ID0gb3B0aW9uc1xuICBpZiAobG9jYWwpIHtcbiAgICB2aWRlby5zZXRBdHRyaWJ1dGUoJ211dGVkJywgJycpXG4gIH1cbiAgdmlkZW8uc2V0QXR0cmlidXRlKCdwbGF5c2lubGluZScsICcnKVxuICB2aWRlby5zZXRBdHRyaWJ1dGUoJ2F1dG9wbGF5JywgJycpXG4gIHZpZGVvLnNldEF0dHJpYnV0ZSgnY29udHJvbHMnLCAnJylcbiAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XG4gICAgdmlkZW8ucmVtb3ZlQXR0cmlidXRlKCdjb250cm9scycpXG4gICAgdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtXG4gICAgaWYgKHZpZGVvLnBhdXNlZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdmlkZW8ucGxheSgpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIERvIG5vdGhpbmdcbiAgICAgIH1cbiAgICB9XG4gIH0sIDEpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHNldHVwVmlkZW9FbG1cbiJdfQ==