{"ast":null,"code":"/**\n * Get color with text\n * @function colorWithText\n * @param {string} text - Text\n * @param {Object} [options={}] - Optional settings\n * @returns {string} Color\n */\n'use strict';\n\nimport { rotate } from 'acolor';\n/** @lends colorWithText */\n\nfunction colorWithText(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$base = options.base,\n      base = _options$base === void 0 ? '#38E' : _options$base;\n  var value = String(text).split('').map(function (letter) {\n    return letter.charCodeAt(0);\n  }).reduce(function (result, value) {\n    return result + value;\n  }, 0);\n  return rotate(base, parseInt(value % 360.0));\n}\n\ncolorWithText.of = function colorWithTextOf(base) {\n  var cache = {};\n  return function bound(text) {\n    var cached = cache[text];\n\n    if (cached) {\n      return cached;\n    }\n\n    var generated = colorWithText(text, {\n      base: base\n    });\n    cache[text] = generated;\n    return generated;\n  };\n};\n\nexport default colorWithText;","map":null,"metadata":{},"sourceType":"module"}