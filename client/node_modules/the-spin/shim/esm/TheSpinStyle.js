'use strict';

import _extends from "@babel/runtime/helpers/extends";
import c from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { asStyleData } from 'the-component-util';
import { TheStyle } from 'the-style';
/** Style for TheSpin */

var TheSpinStyle = function TheSpinStyle(_ref) {
  var className = _ref.className,
      id = _ref.id,
      options = _ref.options;
  return React.createElement(TheStyle, _extends({
    id: id
  }, {
    className: c('the-spin-style', className),
    styles: TheSpinStyle.data(options)
  }));
};

TheSpinStyle.displayName = 'TheSpinStyle';
TheSpinStyle.propTypes = {
  /** Style options */
  options: PropTypes.object
};
TheSpinStyle.defaultProps = {
  options: {}
};

TheSpinStyle.data = function (options) {
  var ThemeValues = TheStyle.ThemeValues;
  var _options$dominantColo = options.dominantColor,
      dominantColor = _options$dominantColo === void 0 ? ThemeValues.dominantColor : _options$dominantColo,
      _options$lightTextCol = options.lightTextColor,
      lightTextColor = _options$lightTextCol === void 0 ? ThemeValues.lightTextColor : _options$lightTextCol,
      _options$overlayBackg = options.overlayBackgroundColor,
      overlayBackgroundColor = _options$overlayBackg === void 0 ? ThemeValues.overlayBackgroundColor : _options$overlayBackg;
  return asStyleData({
    '.the-spin': {
      display: 'none',
      textAlign: 'center'
    },
    '.the-spin.the-spinner-cover': {
      alignItems: 'center',
      background: overlayBackgroundColor,
      bottom: 0,
      color: lightTextColor,
      justifyContent: 'center',
      left: 0,
      position: 'absolute',
      right: 0,
      top: 0,
      zIndex: 4
    },
    '.the-spin.the-spinner-enabled': {
      alignItems: 'center',
      display: 'inline-flex',
      height: '100%',
      justifyContent: 'center',
      width: '100%'
    },
    '.the-spinner-icon': {
      display: 'inline-block',
      margin: '0 4px',
      opacity: 1,
      transition: 'opacity 100ms'
    }
  });
};

export default TheSpinStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZVNwaW5TdHlsZS5qcyJdLCJuYW1lcyI6WyJjIiwiUHJvcFR5cGVzIiwiUmVhY3QiLCJhc1N0eWxlRGF0YSIsIlRoZVN0eWxlIiwiVGhlU3BpblN0eWxlIiwiY2xhc3NOYW1lIiwiaWQiLCJvcHRpb25zIiwiZGF0YSIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwib2JqZWN0IiwiZGVmYXVsdFByb3BzIiwiVGhlbWVWYWx1ZXMiLCJkb21pbmFudENvbG9yIiwibGlnaHRUZXh0Q29sb3IiLCJvdmVybGF5QmFja2dyb3VuZENvbG9yIiwiZGlzcGxheSIsInRleHRBbGlnbiIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kIiwiYm90dG9tIiwiY29sb3IiLCJqdXN0aWZ5Q29udGVudCIsImxlZnQiLCJwb3NpdGlvbiIsInJpZ2h0IiwidG9wIiwiekluZGV4IiwiaGVpZ2h0Iiwid2lkdGgiLCJtYXJnaW4iLCJvcGFjaXR5IiwidHJhbnNpdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBLE9BQU9BLENBQVAsTUFBYyxZQUFkO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxTQUFTQyxXQUFULFFBQTRCLG9CQUE1QjtBQUNBLFNBQVNDLFFBQVQsUUFBeUIsV0FBekI7QUFFQTs7QUFDQSxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZTtBQUFBLE1BQUdDLFNBQUgsUUFBR0EsU0FBSDtBQUFBLE1BQWNDLEVBQWQsUUFBY0EsRUFBZDtBQUFBLE1BQWtCQyxPQUFsQixRQUFrQkEsT0FBbEI7QUFBQSxTQUNuQixvQkFBQyxRQUFELFdBQWM7QUFBRUQsSUFBQUEsRUFBRSxFQUFGQTtBQUFGLEdBQWQ7QUFDVSxJQUFBLFNBQVMsRUFBRVAsQ0FBQyxDQUFDLGdCQUFELEVBQW1CTSxTQUFuQixDQUR0QjtBQUVVLElBQUEsTUFBTSxFQUFFRCxZQUFZLENBQUNJLElBQWIsQ0FBa0JELE9BQWxCO0FBRmxCLEtBRG1CO0FBQUEsQ0FBckI7O0FBT0FILFlBQVksQ0FBQ0ssV0FBYixHQUEyQixjQUEzQjtBQUNBTCxZQUFZLENBQUNNLFNBQWIsR0FBeUI7QUFDdkI7QUFDQUgsRUFBQUEsT0FBTyxFQUFFUCxTQUFTLENBQUNXO0FBRkksQ0FBekI7QUFLQVAsWUFBWSxDQUFDUSxZQUFiLEdBQTRCO0FBQzFCTCxFQUFBQSxPQUFPLEVBQUU7QUFEaUIsQ0FBNUI7O0FBSUFILFlBQVksQ0FBQ0ksSUFBYixHQUFvQixVQUFDRCxPQUFELEVBQWE7QUFBQSxNQUN2Qk0sV0FEdUIsR0FDUFYsUUFETyxDQUN2QlUsV0FEdUI7QUFBQSw4QkFNM0JOLE9BTjJCLENBRzdCTyxhQUg2QjtBQUFBLE1BRzdCQSxhQUg2QixzQ0FHYkQsV0FBVyxDQUFDQyxhQUhDO0FBQUEsOEJBTTNCUCxPQU4yQixDQUk3QlEsY0FKNkI7QUFBQSxNQUk3QkEsY0FKNkIsc0NBSVpGLFdBQVcsQ0FBQ0UsY0FKQTtBQUFBLDhCQU0zQlIsT0FOMkIsQ0FLN0JTLHNCQUw2QjtBQUFBLE1BSzdCQSxzQkFMNkIsc0NBS0pILFdBQVcsQ0FBQ0csc0JBTFI7QUFPL0IsU0FBT2QsV0FBVyxDQUFDO0FBQ2pCLGlCQUFhO0FBQ1hlLE1BQUFBLE9BQU8sRUFBRSxNQURFO0FBRVhDLE1BQUFBLFNBQVMsRUFBRTtBQUZBLEtBREk7QUFLakIsbUNBQStCO0FBQzdCQyxNQUFBQSxVQUFVLEVBQUUsUUFEaUI7QUFFN0JDLE1BQUFBLFVBQVUsRUFBRUosc0JBRmlCO0FBRzdCSyxNQUFBQSxNQUFNLEVBQUUsQ0FIcUI7QUFJN0JDLE1BQUFBLEtBQUssRUFBRVAsY0FKc0I7QUFLN0JRLE1BQUFBLGNBQWMsRUFBRSxRQUxhO0FBTTdCQyxNQUFBQSxJQUFJLEVBQUUsQ0FOdUI7QUFPN0JDLE1BQUFBLFFBQVEsRUFBRSxVQVBtQjtBQVE3QkMsTUFBQUEsS0FBSyxFQUFFLENBUnNCO0FBUzdCQyxNQUFBQSxHQUFHLEVBQUUsQ0FUd0I7QUFVN0JDLE1BQUFBLE1BQU0sRUFBRTtBQVZxQixLQUxkO0FBaUJqQixxQ0FBaUM7QUFDL0JULE1BQUFBLFVBQVUsRUFBRSxRQURtQjtBQUUvQkYsTUFBQUEsT0FBTyxFQUFFLGFBRnNCO0FBRy9CWSxNQUFBQSxNQUFNLEVBQUUsTUFIdUI7QUFJL0JOLE1BQUFBLGNBQWMsRUFBRSxRQUplO0FBSy9CTyxNQUFBQSxLQUFLLEVBQUU7QUFMd0IsS0FqQmhCO0FBd0JqQix5QkFBcUI7QUFDbkJiLE1BQUFBLE9BQU8sRUFBRSxjQURVO0FBRW5CYyxNQUFBQSxNQUFNLEVBQUUsT0FGVztBQUduQkMsTUFBQUEsT0FBTyxFQUFFLENBSFU7QUFJbkJDLE1BQUFBLFVBQVUsRUFBRTtBQUpPO0FBeEJKLEdBQUQsQ0FBbEI7QUErQkQsQ0F0Q0Q7O0FBd0NBLGVBQWU3QixZQUFmIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgYyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgYXNTdHlsZURhdGEgfSBmcm9tICd0aGUtY29tcG9uZW50LXV0aWwnXG5pbXBvcnQgeyBUaGVTdHlsZSB9IGZyb20gJ3RoZS1zdHlsZSdcblxuLyoqIFN0eWxlIGZvciBUaGVTcGluICovXG5jb25zdCBUaGVTcGluU3R5bGUgPSAoeyBjbGFzc05hbWUsIGlkLCBvcHRpb25zIH0pID0+IChcbiAgPFRoZVN0eWxlIHsuLi57IGlkIH19XG4gICAgICAgICAgICBjbGFzc05hbWU9e2MoJ3RoZS1zcGluLXN0eWxlJywgY2xhc3NOYW1lKX1cbiAgICAgICAgICAgIHN0eWxlcz17VGhlU3BpblN0eWxlLmRhdGEob3B0aW9ucyl9XG4gIC8+XG4pXG5cblRoZVNwaW5TdHlsZS5kaXNwbGF5TmFtZSA9ICdUaGVTcGluU3R5bGUnXG5UaGVTcGluU3R5bGUucHJvcFR5cGVzID0ge1xuICAvKiogU3R5bGUgb3B0aW9ucyAqL1xuICBvcHRpb25zOiBQcm9wVHlwZXMub2JqZWN0LFxufVxuXG5UaGVTcGluU3R5bGUuZGVmYXVsdFByb3BzID0ge1xuICBvcHRpb25zOiB7fSxcbn1cblxuVGhlU3BpblN0eWxlLmRhdGEgPSAob3B0aW9ucykgPT4ge1xuICBjb25zdCB7IFRoZW1lVmFsdWVzIH0gPSBUaGVTdHlsZVxuICBjb25zdCB7XG4gICAgZG9taW5hbnRDb2xvciA9IFRoZW1lVmFsdWVzLmRvbWluYW50Q29sb3IsXG4gICAgbGlnaHRUZXh0Q29sb3IgPSBUaGVtZVZhbHVlcy5saWdodFRleHRDb2xvcixcbiAgICBvdmVybGF5QmFja2dyb3VuZENvbG9yID0gVGhlbWVWYWx1ZXMub3ZlcmxheUJhY2tncm91bmRDb2xvcixcbiAgfSA9IG9wdGlvbnNcbiAgcmV0dXJuIGFzU3R5bGVEYXRhKHtcbiAgICAnLnRoZS1zcGluJzoge1xuICAgICAgZGlzcGxheTogJ25vbmUnLFxuICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICB9LFxuICAgICcudGhlLXNwaW4udGhlLXNwaW5uZXItY292ZXInOiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGJhY2tncm91bmQ6IG92ZXJsYXlCYWNrZ3JvdW5kQ29sb3IsXG4gICAgICBib3R0b206IDAsXG4gICAgICBjb2xvcjogbGlnaHRUZXh0Q29sb3IsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICBsZWZ0OiAwLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICByaWdodDogMCxcbiAgICAgIHRvcDogMCxcbiAgICAgIHpJbmRleDogNCxcbiAgICB9LFxuICAgICcudGhlLXNwaW4udGhlLXNwaW5uZXItZW5hYmxlZCc6IHtcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICB9LFxuICAgICcudGhlLXNwaW5uZXItaWNvbic6IHtcbiAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgbWFyZ2luOiAnMCA0cHgnLFxuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIHRyYW5zaXRpb246ICdvcGFjaXR5IDEwMG1zJyxcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVTcGluU3R5bGVcbiJdfQ==