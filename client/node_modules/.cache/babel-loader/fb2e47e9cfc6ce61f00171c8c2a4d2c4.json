{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar WebRTC = function (_React$Component) {\n  _inherits(WebRTC, _React$Component);\n\n  function WebRTC(props) {\n    _classCallCheck(this, WebRTC);\n\n    _get(Object.getPrototypeOf(WebRTC.prototype), 'constructor', this).call(this, props);\n\n    this.addVideo = this.addVideo.bind(this);\n    this.removeVideo = this.removeVideo.bind(this);\n    this.readyToCall = this.readyToCall.bind(this);\n  }\n\n  _createClass(WebRTC, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {}\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.webrtc = new SimpleWebRTC({\n        localVideoEl: _reactDom2['default'].findDOMNode(this.refs.local),\n        remoteVideosEl: \"\",\n        autoRequestMedia: true,\n        url: this.props.options.signalmasterUrl\n      });\n      console.log(\"webrtc component mounted\");\n      this.webrtc.on('videoAdded', this.addVideo);\n      this.webrtc.on('videoRemoved', this.removeVideo);\n      this.webrtc.on('readyToCall', this.readyToCall);\n    }\n  }, {\n    key: 'addVideo',\n    value: function addVideo(video, peer) {\n      console.log('video added', peer); //  console.log(this.refs.remotes);\n\n      var remotes = _reactDom2['default'].findDOMNode(this.refs.remotes);\n\n      console.log(remotes);\n\n      if (remotes) {\n        var container = document.createElement('div');\n        container.className = 'videoContainer';\n        container.id = 'container_' + this.webrtc.getDomId(peer);\n        container.appendChild(video); // suppress contextmenu\n\n        video.oncontextmenu = function () {\n          return false;\n        };\n\n        console.log(container);\n        remotes.appendChild(container);\n      }\n    }\n  }, {\n    key: 'removeVideo',\n    value: function removeVideo(video, peer) {\n      console.log('video removed ', peer);\n\n      var remotes = _reactDom2['default'].findDOMNode(this.refs.remotes);\n\n      var el = document.getElementById(peer ? 'container_' + this.webrtc.getDomId(peer) : 'localScreenContainer');\n\n      if (remotes && el) {\n        remotes.removeChild(el);\n      }\n    }\n  }, {\n    key: 'readyToCall',\n    value: function readyToCall() {\n      return this.webrtc.joinRoom(this.props.options.roomname);\n    }\n  }, {\n    key: 'connect',\n    value: function connect() {\n      console.log(\"connected\"); // alert(\"connected\");\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      console.log(\"disconnected\");\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2['default'].createElement('div', null, _react2['default'].createElement('video', {\n        className: 'local',\n        id: 'localVideo',\n        ref: 'local'\n      }), _react2['default'].createElement('div', {\n        className: 'remotes',\n        id: 'remoteVideos',\n        ref: 'remotes'\n      }));\n    }\n  }]);\n\n  return WebRTC;\n}(_react2['default'].Component);\n\nexports['default'] = WebRTC;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}