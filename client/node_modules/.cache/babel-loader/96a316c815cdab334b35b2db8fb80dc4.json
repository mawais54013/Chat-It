{"ast":null,"code":"/**\n * Type check instance.\n * @constructor Iftype\n * @param {*} value - Value to check.\n */\n'use strict';\n\nvar is = require('./is');\n/** @lends Iftype */\n\n\nfunction Iftype(val) {\n  this.val(val);\n}\n\nIftype.prototype = {\n  /**\n   * Detect type matches.\n   * @param {string} type\n   * @returns {boolean} - Type matches or not.\n   */\n  is: function typeIs(type) {\n    return is(type, this.val());\n  },\n\n  /**\n   * Detect if string.\n   * @returns {boolean} - Type matches or not.\n   */\n  isString: function isStringType() {\n    var s = this;\n    return s.is('string');\n  },\n\n  /**\n   * Detect if number.\n   * @returns {boolean} - Type matches or not.\n   */\n  isNumber: function isNumberType() {\n    var s = this;\n    return s.is('number');\n  },\n\n  /**\n   * Detect if object.\n   * @returns {boolean} - Type matches or not.\n   */\n  isObject: function isObjectType() {\n    var s = this;\n    return s.is('object');\n  },\n\n  /**\n   * Detect if array.\n   * @returns {boolean} - Type matches or not.\n   */\n  isArray: function isArrayType() {\n    var s = this;\n    return s.is('array');\n  },\n\n  /**\n   * Detect if function.\n   * @returns {boolean} - Type matches or not.\n   */\n  isFunction: function isFunctionType() {\n    var s = this;\n    return s.is('function');\n  },\n  val: function val(_val) {\n    if (arguments.length === 0) {\n      return this._val;\n    }\n\n    this._val = _val;\n    return this;\n  }\n};\nmodule.exports = Iftype;","map":null,"metadata":{},"sourceType":"script"}