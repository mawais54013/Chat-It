{"ast":null,"code":"import _objectSpread from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammadawais/Desktop/Chat-It/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js\";\nimport React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\"; // import io from 'socket.io-client'\n// import \"./App.css\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nvar CodingPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CodingPage, _Component);\n\n  function CodingPage() {\n    var _this;\n\n    _classCallCheck(this, CodingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CodingPage).call(this));\n\n    _this.syncUpdates = function () {\n      var data = _objectSpread({}, _this.state);\n    };\n\n    _this.runCode = function () {\n      var _this$state = _this.state,\n          html = _this$state.html,\n          js = _this$state.js;\n      var iframe = _this.refs.iframe;\n      var document = iframe.contentDocument;\n      var documentContents = \"\\n      <!DOCTYPE html>\\n      <html lang=\\\"en\\\">\\n      <head>\\n        <meta charset=\\\"UTF-8\\\">\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n        <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n        <title>Document</title>\\n      </head>\\n      <body>\\n        \".concat(html, \"\\n\\n        <script type=\\\"text/javascript\\\">\\n          \").concat(js, \"\\n        </script>\\n      </body>\\n      </html>\\n    \");\n      document.open();\n      document.write(documentContents);\n      document.close();\n    };\n\n    _this.state = {\n      html: \"\",\n      js: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CodingPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.runCode();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.key1);\n      var _this$state2 = this.state,\n          html = _this$state2.html,\n          js = _this$state2.js;\n      var codeMirrorOptions = {\n        theme: \"material\",\n        lineNumbers: true,\n        scrollbarStyle: null,\n        lineWrapping: true\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"playground\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"code-editor html-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editor-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"HTML\"), React.createElement(CodeMirror, {\n        value: html,\n        options: _objectSpread({\n          mode: \"htmlmixed\"\n        }, codeMirrorOptions),\n        onBeforeChange: function onBeforeChange(editor, data, html) {\n          _this2.setState({\n            html: html\n          }, function () {\n            return _this2.syncUpdates();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"code-editor js-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editor-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"JavaScript\"), React.createElement(CodeMirror, {\n        value: js,\n        options: _objectSpread({\n          mode: \"javascript\"\n        }, codeMirrorOptions),\n        onBeforeChange: function onBeforeChange(editor, data, js) {\n          _this2.setState({\n            js: js\n          }, function () {\n            return _this2.syncUpdates();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: \"result\",\n        className: \"iframe\",\n        ref: \"iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CodingPage;\n}(Component);\n\nexport default CodingPage; // import React from \"react\";\n// import Header from \"../Components/header\";\n// import { database } from \"firebase\";\n// import CodeMirror from \"react-codemirror\";\n// import \"./coding.css\";\n// require(\"codemirror/lib/codemirror.css\");\n// require(\"codemirror/mode/htmlmixed/htmlmixed\";\n// require(\"codemirror/mode/javascript/javascript\");\n// require(\"codemirror/theme/dracula.css\");\n// export default class CodingPage extends React.Component {\n//   state = {\n//     code: \"Loading...\",\n//     code1: `<h1 id='demo'></h1>`,\n//     cursorPosition: {\n//       line: 0,\n//       ch: 0\n//     }\n//   };\n//   componentDidMount = () => {\n//     const { params } = this.props.match;\n//     let self = this;\n//     database()\n//       .ref(\"/code-sessions/\" + params.sessionid)\n//       .once(\"value\")\n//       .then(snapshot => {\n//         self.setState({ code: snapshot.val().content + \"\", createdon: snapshot.val().createdon }, () => {\n//           let content = snapshot.val().content;\n//           self.codemirror.getCodeMirror().setValue(content);\n//         });\n//         this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n//         this.codeRef.on(\"value\", function(snapshot) {\n//           self.setState({\n//             code: snapshot.val().content\n//           });\n//           var currentCursorPos = self.state.cursorPosition;\n//           self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n//           self.setState({ cursorPosition: currentCursorPos });\n//           self.changeCursorPos();\n//         });\n//       })\n//       .catch(e => {\n//         self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n//       });\n//   };\n//   changeCursorPos = () => {\n//     const { line, ch } = this.state.cursorPosition;\n//     this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n//   };\n//   onChange = (newVal, change) => {\n//     // console.log(newVal, change);\n//     this.setState(\n//       {\n//         cursorPosition: {\n//           line: this.codemirror.getCodeMirror().doc.getCursor().line,\n//           ch: this.codemirror.getCodeMirror().doc.getCursor().ch\n//         }\n//       },\n//       () => {}\n//     );\n//     this.codeRef.child(\"content\").set(newVal);\n//   };\n// componentDidUpdate() {\n//   this.runCode();\n// }\n// syncUpdates = () => {\n//   const data = { ...this.state }; \n// };\n// runCode = () => {\n//   const { code1, code } = this.state;\n//   const iframe = this.refs.iframe;\n//   const document = iframe.contentDocument;\n//   const documentContents = `\n//     <!DOCTYPE html>\n//     <html lang=\"en\">\n//     <head>\n//       <meta charset=\"UTF-8\">\n//       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//       <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//       <title>Document</title>\n//     </head>\n//     <body>\n//       ${code1}\n//       <script type=\"text/javascript\">\n//         ${code}\n//       </script>\n//     </body>\n//     </html>\n//   `;\n//   document.open();\n//   document.write(documentContents);\n//   document.close();\n// };\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header\n//           style={{ background: \"#1d1f27\" }}\n//           extras={\n//             <div>\n//               {this.state.createdon\n//                 ? `Created On: ${this.state.createdon}`\n//                 : \"\"}\n//             </div>\n//           }\n//         />\n//         <div className=\"coding-page\">\n//         <div className=\"codeArea\">\n//           <CodeMirror\n//             ref={r => (this.codemirror = r)}\n//             className=\"code-mirror-container\"\n//             value={this.state.code}\n//             onChange={this.onChange}\n//             options={{\n//               theme: \"dracula\",\n//               lineNumbers: true,\n//               readOnly: false,\n//               mode: \"javascript\"\n//             }}\n//             onBeforeChange={(editor, data, code) => {\n//               this.setState({ code }, () => this.syncUpdates());\n//             }}\n//           />\n//           </div>\n//           <div>\n//           <CodeMirror\n//             value={this.state.code1}\n//             options={{\n//               mode: 'htmlmixed',\n//               theme: 'dracula',\n//               lineNumbers: true,\n//               readOnly: false,\n//             }}\n//               onBeforeChange={(editor, data, code1) => {\n//                 this.setState({ code1 }, () => this.syncUpdates());\n//               }}\n//           />\n//           </div>\n//         <section className=\"result\" id=\"iframe\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/muhammadawais/Desktop/Chat-It/client/src/pages/Coding.js"],"names":["React","Component","Controlled","CodeMirror","Pusher","pushid","axios","CodingPage","syncUpdates","data","state","runCode","html","js","iframe","refs","document","contentDocument","documentContents","open","write","close","console","log","key1","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","mode","editor","setState"],"mappings":"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":["import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\n// import io from 'socket.io-client'\n\n// import \"./App.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\n\nclass CodingPage extends Component {\n  constructor() {\n\n\n    super();\n    this.state = {\n      html: \"\",\n      js: \"\",\n    };\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  syncUpdates = () => {\n    const data = { ...this.state };    \n  };\n\n  runCode = () => {\n    const { html, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n\n    console.log(this.state.key1)\n    const { html, js } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n\n    return (\n      <div className=\"App\">\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"editor-header\">HTML</div>\n            <CodeMirror\n              value={html}\n              options={{\n                mode: \"htmlmixed\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, html) => {\n                this.setState({ html }, () => this.syncUpdates());\n              }}\n            />\n          </div>\n          <div className=\"code-editor js-code\">\n            <div className=\"editor-header\">JavaScript</div>\n            <CodeMirror\n              value={js}\n              options={{\n                mode: \"javascript\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, js) => {\n                this.setState({ js }, () => this.syncUpdates());\n              }}\n            />\n          </div>\n        </section>\n        <section className=\"result\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default CodingPage;\n\n\n    \n// import React from \"react\";\n// import Header from \"../Components/header\";\n// import { database } from \"firebase\";\n// import CodeMirror from \"react-codemirror\";\n// import \"./coding.css\";\n\n// require(\"codemirror/lib/codemirror.css\");\n// require(\"codemirror/mode/htmlmixed/htmlmixed\";\n// require(\"codemirror/mode/javascript/javascript\");\n// require(\"codemirror/theme/dracula.css\");\n\n// export default class CodingPage extends React.Component {\n\n//   state = {\n//     code: \"Loading...\",\n//     code1: `<h1 id='demo'></h1>`,\n//     cursorPosition: {\n//       line: 0,\n//       ch: 0\n//     }\n//   };\n//   componentDidMount = () => {\n\n//     const { params } = this.props.match;\n//     let self = this;\n//     database()\n//       .ref(\"/code-sessions/\" + params.sessionid)\n//       .once(\"value\")\n//       .then(snapshot => {\n//         self.setState({ code: snapshot.val().content + \"\", createdon: snapshot.val().createdon }, () => {\n//           let content = snapshot.val().content;\n\n//           self.codemirror.getCodeMirror().setValue(content);\n//         });\n//         this.codeRef = database().ref(\"code-sessions/\" + params.sessionid);\n//         this.codeRef.on(\"value\", function(snapshot) {\n//           self.setState({\n//             code: snapshot.val().content\n//           });\n//           var currentCursorPos = self.state.cursorPosition;\n//           self.codemirror.getCodeMirror().setValue(snapshot.val().content);\n//           self.setState({ cursorPosition: currentCursorPos });\n//           self.changeCursorPos();\n//         });\n//       })\n//       .catch(e => {\n//         self.codemirror.getCodeMirror().setValue(\"No Sessions Found!\");\n//       });\n//   };\n//   changeCursorPos = () => {\n//     const { line, ch } = this.state.cursorPosition;\n//     this.codemirror.getCodeMirror().doc.setCursor(line, ch);\n//   };\n//   onChange = (newVal, change) => {\n//     // console.log(newVal, change);\n//     this.setState(\n//       {\n//         cursorPosition: {\n//           line: this.codemirror.getCodeMirror().doc.getCursor().line,\n//           ch: this.codemirror.getCodeMirror().doc.getCursor().ch\n//         }\n//       },\n//       () => {}\n//     );\n//     this.codeRef.child(\"content\").set(newVal);\n//   };\n\n// componentDidUpdate() {\n//   this.runCode();\n// }\n\n// syncUpdates = () => {\n//   const data = { ...this.state }; \n// };\n\n// runCode = () => {\n//   const { code1, code } = this.state;\n\n//   const iframe = this.refs.iframe;\n//   const document = iframe.contentDocument;\n//   const documentContents = `\n//     <!DOCTYPE html>\n//     <html lang=\"en\">\n//     <head>\n//       <meta charset=\"UTF-8\">\n//       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//       <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//       <title>Document</title>\n//     </head>\n//     <body>\n//       ${code1}\n\n//       <script type=\"text/javascript\">\n//         ${code}\n//       </script>\n//     </body>\n//     </html>\n//   `;\n\n//   document.open();\n//   document.write(documentContents);\n//   document.close();\n// };\n\n//   render() {\n    \n//     return (\n//       <React.Fragment>\n//         <Header\n//           style={{ background: \"#1d1f27\" }}\n//           extras={\n//             <div>\n//               {this.state.createdon\n//                 ? `Created On: ${this.state.createdon}`\n//                 : \"\"}\n//             </div>\n//           }\n//         />\n//         <div className=\"coding-page\">\n//         <div className=\"codeArea\">\n//           <CodeMirror\n//             ref={r => (this.codemirror = r)}\n//             className=\"code-mirror-container\"\n//             value={this.state.code}\n//             onChange={this.onChange}\n//             options={{\n//               theme: \"dracula\",\n//               lineNumbers: true,\n//               readOnly: false,\n//               mode: \"javascript\"\n//             }}\n//             onBeforeChange={(editor, data, code) => {\n//               this.setState({ code }, () => this.syncUpdates());\n//             }}\n//           />\n//           </div>\n//           <div>\n//           <CodeMirror\n//             value={this.state.code1}\n//             options={{\n//               mode: 'htmlmixed',\n//               theme: 'dracula',\n//               lineNumbers: true,\n//               readOnly: false,\n//             }}\n//               onBeforeChange={(editor, data, code1) => {\n//                 this.setState({ code1 }, () => this.syncUpdates());\n//               }}\n//           />\n//           </div>\n//         <section className=\"result\" id=\"iframe\">\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n\n// }"]},"metadata":{},"sourceType":"module"}