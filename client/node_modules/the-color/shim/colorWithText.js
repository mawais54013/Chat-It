/**
 * Get color with text
 * @function colorWithText
 * @param {string} text - Text
 * @param {Object} [options={}] - Optional settings
 * @returns {string} Color
 */
'use strict';

var _require = require('acolor'),
    rotate = _require.rotate;
/** @lends colorWithText */


function colorWithText(text) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$base = options.base,
      base = _options$base === void 0 ? '#38E' : _options$base;
  var value = String(text).split('').map(function (letter) {
    return letter.charCodeAt(0);
  }).reduce(function (result, value) {
    return result + value;
  }, 0);
  return rotate(base, parseInt(value % 360.0));
}

colorWithText.of = function colorWithTextOf(base) {
  var cache = {};
  return function bound(text) {
    var cached = cache[text];

    if (cached) {
      return cached;
    }

    var generated = colorWithText(text, {
      base: base
    });
    cache[text] = generated;
    return generated;
  };
};

module.exports = colorWithText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yV2l0aFRleHQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInJvdGF0ZSIsImNvbG9yV2l0aFRleHQiLCJ0ZXh0Iiwib3B0aW9ucyIsImJhc2UiLCJ2YWx1ZSIsIlN0cmluZyIsInNwbGl0IiwibWFwIiwibGV0dGVyIiwiY2hhckNvZGVBdCIsInJlZHVjZSIsInJlc3VsdCIsInBhcnNlSW50Iiwib2YiLCJjb2xvcldpdGhUZXh0T2YiLCJjYWNoZSIsImJvdW5kIiwiY2FjaGVkIiwiZ2VuZXJhdGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFPQTs7ZUFFbUJBLE9BQU8sQ0FBQyxRQUFELEM7SUFBbEJDLE0sWUFBQUEsTTtBQUVSOzs7QUFDQSxTQUFTQyxhQUFULENBQXdCQyxJQUF4QixFQUE0QztBQUFBLE1BQWRDLE9BQWMsdUVBQUosRUFBSTtBQUFBLHNCQUNoQkEsT0FEZ0IsQ0FDbENDLElBRGtDO0FBQUEsTUFDbENBLElBRGtDLDhCQUMzQixNQUQyQjtBQUUxQyxNQUFNQyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0osSUFBRCxDQUFOLENBQWFLLEtBQWIsQ0FBbUIsRUFBbkIsRUFDWEMsR0FEVyxDQUNQLFVBQUNDLE1BQUQ7QUFBQSxXQUFZQSxNQUFNLENBQUNDLFVBQVAsQ0FBa0IsQ0FBbEIsQ0FBWjtBQUFBLEdBRE8sRUFFWEMsTUFGVyxDQUVKLFVBQUNDLE1BQUQsRUFBU1AsS0FBVDtBQUFBLFdBQW1CTyxNQUFNLEdBQUdQLEtBQTVCO0FBQUEsR0FGSSxFQUUrQixDQUYvQixDQUFkO0FBR0EsU0FBT0wsTUFBTSxDQUFDSSxJQUFELEVBQU9TLFFBQVEsQ0FBQ1IsS0FBSyxHQUFHLEtBQVQsQ0FBZixDQUFiO0FBQ0Q7O0FBRURKLGFBQWEsQ0FBQ2EsRUFBZCxHQUFtQixTQUFTQyxlQUFULENBQTBCWCxJQUExQixFQUFnQztBQUNqRCxNQUFNWSxLQUFLLEdBQUcsRUFBZDtBQUNBLFNBQU8sU0FBU0MsS0FBVCxDQUFnQmYsSUFBaEIsRUFBc0I7QUFDM0IsUUFBTWdCLE1BQU0sR0FBR0YsS0FBSyxDQUFDZCxJQUFELENBQXBCOztBQUNBLFFBQUlnQixNQUFKLEVBQVk7QUFDVixhQUFPQSxNQUFQO0FBQ0Q7O0FBQ0QsUUFBTUMsU0FBUyxHQUFHbEIsYUFBYSxDQUFDQyxJQUFELEVBQU87QUFBRUUsTUFBQUEsSUFBSSxFQUFKQTtBQUFGLEtBQVAsQ0FBL0I7QUFDQVksSUFBQUEsS0FBSyxDQUFDZCxJQUFELENBQUwsR0FBY2lCLFNBQWQ7QUFDQSxXQUFPQSxTQUFQO0FBQ0QsR0FSRDtBQVNELENBWEQ7O0FBYUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLGFBQWpCIiwic291cmNlUm9vdCI6Ii4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IGNvbG9yIHdpdGggdGV4dFxuICogQGZ1bmN0aW9uIGNvbG9yV2l0aFRleHRcbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGV4dFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSAtIE9wdGlvbmFsIHNldHRpbmdzXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBDb2xvclxuICovXG4ndXNlIHN0cmljdCdcblxuY29uc3QgeyByb3RhdGUgfSA9IHJlcXVpcmUoJ2Fjb2xvcicpXG5cbi8qKiBAbGVuZHMgY29sb3JXaXRoVGV4dCAqL1xuZnVuY3Rpb24gY29sb3JXaXRoVGV4dCAodGV4dCwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgYmFzZSA9ICcjMzhFJyB9ID0gb3B0aW9uc1xuICBjb25zdCB2YWx1ZSA9IFN0cmluZyh0ZXh0KS5zcGxpdCgnJylcbiAgICAubWFwKChsZXR0ZXIpID0+IGxldHRlci5jaGFyQ29kZUF0KDApKVxuICAgIC5yZWR1Y2UoKHJlc3VsdCwgdmFsdWUpID0+IHJlc3VsdCArIHZhbHVlLCAwKVxuICByZXR1cm4gcm90YXRlKGJhc2UsIHBhcnNlSW50KHZhbHVlICUgMzYwLjApKVxufVxuXG5jb2xvcldpdGhUZXh0Lm9mID0gZnVuY3Rpb24gY29sb3JXaXRoVGV4dE9mIChiYXNlKSB7XG4gIGNvbnN0IGNhY2hlID0ge31cbiAgcmV0dXJuIGZ1bmN0aW9uIGJvdW5kICh0ZXh0KSB7XG4gICAgY29uc3QgY2FjaGVkID0gY2FjaGVbdGV4dF1cbiAgICBpZiAoY2FjaGVkKSB7XG4gICAgICByZXR1cm4gY2FjaGVkXG4gICAgfVxuICAgIGNvbnN0IGdlbmVyYXRlZCA9IGNvbG9yV2l0aFRleHQodGV4dCwgeyBiYXNlIH0pXG4gICAgY2FjaGVbdGV4dF0gPSBnZW5lcmF0ZWRcbiAgICByZXR1cm4gZ2VuZXJhdGVkXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb2xvcldpdGhUZXh0XG4iXX0=